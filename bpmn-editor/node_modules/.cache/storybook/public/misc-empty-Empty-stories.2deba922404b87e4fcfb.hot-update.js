self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/BpmnEditor.tsx":
/*!****************************!*\
  !*** ./src/BpmnEditor.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BpmnEditor: () => (/* binding */ BpmnEditor),
/* harmony export */   BpmnEditorInternal: () => (/* binding */ BpmnEditorInternal)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_styles_base_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @patternfly/react-core/dist/styles/base.css */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/styles/base.css");
/* harmony import */ var reactflow_dist_style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reactflow/dist/style.css */ "../../node_modules/.pnpm/reactflow@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3ybu__re_jarraoawze25g6tc5b4lcviyam/node_modules/reactflow/dist/style.css");
/* harmony import */ var _patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Drawer */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Drawer/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! immer */ "../../node_modules/.pnpm/immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3ybu/node_modules/immer/dist/immer.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ "../../node_modules/.pnpm/react-dom@17.0.2_react@17.0.2/node_modules/react-dom/index.js");
/* harmony import */ var react_error_boundary__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! react-error-boundary */ "../../node_modules/.pnpm/react-error-boundary@4.0.12_react@17.0.2/node_modules/react-error-boundary/dist/react-error-boundary.development.esm.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _BpmnEditorContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BpmnEditorContext */ "./src/BpmnEditorContext.tsx");
/* harmony import */ var _BpmnEditorErrorFallback__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BpmnEditorErrorFallback */ "./src/BpmnEditorErrorFallback.tsx");
/* harmony import */ var _diagram_BpmnDiagram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./diagram/BpmnDiagram */ "./src/diagram/BpmnDiagram.tsx");
/* harmony import */ var _diagram_BpmnVersionLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./diagram/BpmnVersionLabel */ "./src/diagram/BpmnVersionLabel.tsx");
/* harmony import */ var _externalModels_BpmnEditorExternalModelsContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./externalModels/BpmnEditorExternalModelsContext */ "./src/externalModels/BpmnEditorExternalModelsContext.tsx");
/* harmony import */ var _normalization_normalize__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./normalization/normalize */ "./src/normalization/normalize.ts");
/* harmony import */ var _store_initialComputedCache__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./store/initialComputedCache */ "./src/store/initialComputedCache.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_store_ComputedStateCache__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/store/ComputedStateCache */ "../xyflow-react-kie-diagram/dist/store/ComputedStateCache.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_store_Store__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/store/Store */ "../xyflow-react-kie-diagram/dist/store/Store.js");
/* harmony import */ var _store_Store__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./store/Store */ "./src/store/Store.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _svg_BpmnDiagramSvg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./svg/BpmnDiagramSvg */ "./src/svg/BpmnDiagramSvg.tsx");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useStateAsItWasBeforeConditionBecameTrue__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useStateAsItWasBeforeConditionBecameTrue */ "../xyflow-react-kie-diagram/dist/reactExt/useStateAsItWasBeforeConditionBecameTrue.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useEffectAfterFirstRender__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useEffectAfterFirstRender */ "../xyflow-react-kie-diagram/dist/reactExt/useEffectAfterFirstRender.js");
/* harmony import */ var _commands_CommandsContextProvider__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./commands/CommandsContextProvider */ "./src/commands/CommandsContextProvider.tsx");
/* harmony import */ var _propertiesPanel_PropertiesPanel__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./propertiesPanel/PropertiesPanel */ "./src/propertiesPanel/PropertiesPanel.tsx");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_patternfly_customizations_css__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/patternfly-customizations.css */ "../xyflow-react-kie-diagram/dist/patternfly-customizations.css");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_xyflow_customizations_css__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/xyflow-customizations.css */ "../xyflow-react-kie-diagram/dist/xyflow-customizations.css");
/* harmony import */ var _BpmnEditor_css__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./BpmnEditor.css */ "./src/BpmnEditor.css");





























const ON_MODEL_CHANGE_DEBOUNCE_TIME_IN_MS = 500;
const SVG_PADDING = 20;
const BpmnEditorInternal = _ref => {
  let {
    model,
    originalVersion,
    onModelChange,
    onModelDebounceStateChanged,
    forwardRef
  } = _ref;
  const isPropertiesPanelOpen = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_14__.useBpmnEditorStore)(s => s.propertiesPanel.isOpen);
  const bpmn = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_14__.useBpmnEditorStore)(s => s.bpmn);
  const isDiagramEditingInProgress = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_14__.useBpmnEditorStore)(s => s.computed(s).isDiagramEditingInProgress());
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_14__.useBpmnEditorStoreApi)();
  const {
    commandsRef
  } = (0,_commands_CommandsContextProvider__WEBPACK_IMPORTED_MODULE_18__.useCommands)();
  const {
    bpmnModelBeforeEditingRef,
    bpmnEditorRootElementRef
  } = (0,_BpmnEditorContext__WEBPACK_IMPORTED_MODULE_5__.useBpmnEditor)();
  const diagramRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);
  const diagramContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_3__.useImperativeHandle)(forwardRef, () => ({
    reset: model => {
      const state = bpmnEditorStoreApi.getState();
      return state.dispatch(state).reset((0,_normalization_normalize__WEBPACK_IMPORTED_MODULE_10__.normalize)(model));
    },
    getDiagramSvg: async () => {
      var _a, _b, _c, _d;
      const nodes = (_b = (_a = diagramRef.current) === null || _a === void 0 ? void 0 : _a.getReactFlowInstance()) === null || _b === void 0 ? void 0 : _b.getNodes();
      const edges = (_d = (_c = diagramRef.current) === null || _c === void 0 ? void 0 : _c.getReactFlowInstance()) === null || _d === void 0 ? void 0 : _d.getEdges();
      if (!nodes || !edges) {
        return undefined;
      }
      const bounds = reactflow__WEBPACK_IMPORTED_MODULE_23__.getNodesBounds(nodes);
      const state = bpmnEditorStoreApi.getState();
      const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
      svg.setAttribute("width", bounds.width + SVG_PADDING * 2 + "");
      svg.setAttribute("height", bounds.height + SVG_PADDING * 5 + "");
      react_dom__WEBPACK_IMPORTED_MODULE_4__.render((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        transform: `translate(${-bounds.x + SVG_PADDING} ${-bounds.y + SVG_PADDING})`,
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_svg_BpmnDiagramSvg__WEBPACK_IMPORTED_MODULE_15__.BpmnDiagramSvg, {
          nodes: nodes,
          edges: edges,
          snapGrid: state.xyFlowReactKieDiagram.snapGrid
        })
      }), svg);
      return new XMLSerializer().serializeToString(svg);
    },
    getCommands: () => commandsRef.current
  }), [bpmnEditorStoreApi, commandsRef]);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useEffectAfterFirstRender__WEBPACK_IMPORTED_MODULE_17__.useEffectAfterFirstRender)(() => {
    bpmnEditorStoreApi.setState(state => {
      if (model === (0,immer__WEBPACK_IMPORTED_MODULE_24__.original)(state.bpmn.model)) {
        return;
      }
      state.bpmn.model = (0,_normalization_normalize__WEBPACK_IMPORTED_MODULE_10__.normalize)(model);
      bpmnModelBeforeEditingRef.current = state.bpmn.model;
    });
  }, [bpmnEditorStoreApi, model]);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useStateAsItWasBeforeConditionBecameTrue__WEBPACK_IMPORTED_MODULE_16__.useStateAsItWasBeforeConditionBecameTrue)(bpmn.model, isDiagramEditingInProgress, (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(prev => bpmnModelBeforeEditingRef.current = prev, [bpmnModelBeforeEditingRef]));
  (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useEffectAfterFirstRender__WEBPACK_IMPORTED_MODULE_17__.useEffectAfterFirstRender)(() => {
    if (isDiagramEditingInProgress) {
      return;
    }
    onModelDebounceStateChanged === null || onModelDebounceStateChanged === void 0 ? void 0 : onModelDebounceStateChanged(false);
    const timeout = setTimeout(() => {
      if (model === bpmn.model) {
        return;
      }
      onModelDebounceStateChanged === null || onModelDebounceStateChanged === void 0 ? void 0 : onModelDebounceStateChanged(true);
      console.debug("BPMN EDITOR: Model changed!");
      onModelChange === null || onModelChange === void 0 ? void 0 : onModelChange(bpmn.model);
    }, ON_MODEL_CHANGE_DEBOUNCE_TIME_IN_MS);
    return () => {
      clearTimeout(timeout);
    };
  }, [isDiagramEditingInProgress, onModelChange, bpmn.model]);
  const propertiesPanel = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_propertiesPanel_PropertiesPanel__WEBPACK_IMPORTED_MODULE_19__.PropertiesPanel, {}), []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    ref: bpmnEditorRootElementRef,
    className: "kie-bpmn-editor--root",
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25__.Drawer, {
      isExpanded: isPropertiesPanelOpen,
      isInline: true,
      position: "right",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25__.DrawerContent, {
        panelContent: propertiesPanel,
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Drawer__WEBPACK_IMPORTED_MODULE_25__.DrawerContentBody, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
            className: "kie-bpmn-editor--diagram-container",
            ref: diagramContainerRef,
            "data-testid": "kie-bpmn-editor--diagram-container",
            children: [originalVersion && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_BpmnVersionLabel__WEBPACK_IMPORTED_MODULE_8__.BpmnVersionLabel, {
              version: originalVersion
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_BpmnDiagram__WEBPACK_IMPORTED_MODULE_7__.BpmnDiagram, {
              diagramRef: diagramRef,
              container: diagramContainerRef
            })]
          })
        })
      })
    })
  });
};
const BpmnEditor = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.forwardRef((props, ref) => {
  const store = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => (0,_store_Store__WEBPACK_IMPORTED_MODULE_13__.createBpmnEditorStore)(props.model, new _kie_tools_xyflow_react_kie_diagram_dist_store_ComputedStateCache__WEBPACK_IMPORTED_MODULE_26__.ComputedStateCache(_store_initialComputedCache__WEBPACK_IMPORTED_MODULE_11__.INITIAL_COMPUTED_CACHE)), []);
  const storeRef = react__WEBPACK_IMPORTED_MODULE_3__.useRef(store);
  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(_ref2 => {
    let {
      args
    } = _ref2;
    var _a;
    (_a = storeRef.current) === null || _a === void 0 ? void 0 : _a.setState(state => {
      state.diagram = (0,_store_Store__WEBPACK_IMPORTED_MODULE_13__.getDefaultStaticState)().diagram;
      state.bpmn.model = args[0];
    });
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_BpmnEditorContext__WEBPACK_IMPORTED_MODULE_5__.BpmnEditorContextProvider, {
    ...props,
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_error_boundary__WEBPACK_IMPORTED_MODULE_27__.ErrorBoundary, {
      FallbackComponent: _BpmnEditorErrorFallback__WEBPACK_IMPORTED_MODULE_6__.BpmnEditorErrorFallback,
      onReset: resetState,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_externalModels_BpmnEditorExternalModelsContext__WEBPACK_IMPORTED_MODULE_9__.BpmnEditorExternalModelsContextProvider, {
        ...props,
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_store_StoreContext__WEBPACK_IMPORTED_MODULE_14__.BpmnEditorStoreApiContext.Provider, {
          value: storeRef.current,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_store_Store__WEBPACK_IMPORTED_MODULE_12__.XyFlowReactKieDiagramStoreApiContext.Provider, {
            value: storeRef.current,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_commands_CommandsContextProvider__WEBPACK_IMPORTED_MODULE_18__.CommandsContextProvider, {
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BpmnEditorInternal, {
                forwardRef: ref,
                ...props
              })
            })
          })
        })
      })
    })
  });
});
try {
    // @ts-ignore
    BpmnEditorInternal.displayName = "BpmnEditorInternal";
    // @ts-ignore
    BpmnEditorInternal.__docgenInfo = { "description": "", "displayName": "BpmnEditorInternal", "props": { "model": { "defaultValue": null, "description": "The BPMN itself.", "name": "model", "required": true, "type": { "name": "BpmnLatestModel" } }, "originalVersion": { "defaultValue": null, "description": "The original version of `model` before upgrading to `latest`.", "name": "originalVersion", "required": false, "type": { "name": "enum", "value": [{ "value": "\"2.0\"" }] } }, "onModelChange": { "defaultValue": null, "description": "Called when a change occurs on `model`, so the controlled flow of the component can be done.", "name": "onModelChange", "required": false, "type": { "name": "OnBpmnModelChange" } }, "externalContextName": { "defaultValue": null, "description": "The name of context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use `externalContextName={\"My project\"}`", "name": "externalContextName", "required": false, "type": { "name": "string" } }, "externalContextDescription": { "defaultValue": null, "description": "Describe the context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use\n`externalContextDescription={'All models (DMN, etc) of \"My project\" are available.'}`", "name": "externalContextDescription", "required": false, "type": { "name": "string" } }, "issueTrackerHref": { "defaultValue": null, "description": "A link that will take users to an issue tracker so they can report problems they find on the BPMN Editor.\nThis is shown on the ErrorBoundary fallback component, when an uncaught error happens.", "name": "issueTrackerHref", "required": false, "type": { "name": "string" } }, "onRequestToJumpToPath": { "defaultValue": null, "description": "When users want to jump to another file, this method is called, allowing the controller of this component decide what to do.\nLinks are only rendered if this is provided. Otherwise, paths will be rendered as text.", "name": "onRequestToJumpToPath", "required": false, "type": { "name": "OnRequestToJumpToPath" } }, "onRequestToResolvePath": { "defaultValue": null, "description": "All paths inside the BPMN Editor are relative. To be able to resolve them and display them as absolute paths, this function is called.\nIf undefined, the relative paths will be displayed.", "name": "onRequestToResolvePath", "required": false, "type": { "name": "OnRequestToResolvePath" } }, "onModelDebounceStateChanged": { "defaultValue": null, "description": "Notifies the caller when the BPMN Editor performs a new edit after the debounce time.", "name": "onModelDebounceStateChanged", "required": false, "type": { "name": "((changed: boolean) => void)" } }, "forwardRef": { "defaultValue": null, "description": "", "name": "forwardRef", "required": false, "type": { "name": "Ref<BpmnEditorRef>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/BpmnEditor.tsx#BpmnEditorInternal"] = { docgenInfo: BpmnEditorInternal.__docgenInfo, name: "BpmnEditorInternal", path: "src/BpmnEditor.tsx#BpmnEditorInternal" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    BpmnEditor.displayName = "BpmnEditor";
    // @ts-ignore
    BpmnEditor.__docgenInfo = { "description": "", "displayName": "BpmnEditor", "props": { "model": { "defaultValue": null, "description": "The BPMN itself.", "name": "model", "required": true, "type": { "name": "BpmnLatestModel" } }, "originalVersion": { "defaultValue": null, "description": "The original version of `model` before upgrading to `latest`.", "name": "originalVersion", "required": false, "type": { "name": "enum", "value": [{ "value": "\"2.0\"" }] } }, "onModelChange": { "defaultValue": null, "description": "Called when a change occurs on `model`, so the controlled flow of the component can be done.", "name": "onModelChange", "required": false, "type": { "name": "OnBpmnModelChange" } }, "externalContextName": { "defaultValue": null, "description": "The name of context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use `externalContextName={\"My project\"}`", "name": "externalContextName", "required": false, "type": { "name": "string" } }, "externalContextDescription": { "defaultValue": null, "description": "Describe the context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use\n`externalContextDescription={'All models (DMN, etc) of \"My project\" are available.'}`", "name": "externalContextDescription", "required": false, "type": { "name": "string" } }, "issueTrackerHref": { "defaultValue": null, "description": "A link that will take users to an issue tracker so they can report problems they find on the BPMN Editor.\nThis is shown on the ErrorBoundary fallback component, when an uncaught error happens.", "name": "issueTrackerHref", "required": false, "type": { "name": "string" } }, "onRequestToJumpToPath": { "defaultValue": null, "description": "When users want to jump to another file, this method is called, allowing the controller of this component decide what to do.\nLinks are only rendered if this is provided. Otherwise, paths will be rendered as text.", "name": "onRequestToJumpToPath", "required": false, "type": { "name": "OnRequestToJumpToPath" } }, "onRequestToResolvePath": { "defaultValue": null, "description": "All paths inside the BPMN Editor are relative. To be able to resolve them and display them as absolute paths, this function is called.\nIf undefined, the relative paths will be displayed.", "name": "onRequestToResolvePath", "required": false, "type": { "name": "OnRequestToResolvePath" } }, "onModelDebounceStateChanged": { "defaultValue": null, "description": "Notifies the caller when the BPMN Editor performs a new edit after the debounce time.", "name": "onModelDebounceStateChanged", "required": false, "type": { "name": "((changed: boolean) => void)" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/BpmnEditor.tsx#BpmnEditor"] = { docgenInfo: BpmnEditor.__docgenInfo, name: "BpmnEditor", path: "src/BpmnEditor.tsx#BpmnEditor" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons,
        variant: task.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"task\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx":
/*!**********************************************************************!*\
  !*** ./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useGatewayNodeMorphingActions: () => (/* binding */ useGatewayNodeMorphingActions)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _NodeIcons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");






function useGatewayNodeMorphingActions(gateway) {
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const morphGateway = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(gatewayElement => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref => {
        let {
          array,
          index,
          owner,
          element
        } = _ref;
        if (element["@_id"] === gateway["@_id"] && element.__$$element === gateway.__$$element) {
          array[index] = {
            "@_id": element["@_id"],
            "@_name": element["@_name"],
            __$$element: gatewayElement
          };
          return false;
        }
      });
    });
  }, [bpmnEditorStoreApi, gateway]);
  const morphingActions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    return [{
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.GatewayIcon, {
        variant: "parallelGateway",
        isIcon: true
      }),
      key: "1",
      title: "Parallel",
      id: "parallelGateway",
      action: () => morphGateway("parallelGateway")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.GatewayIcon, {
        variant: "exclusiveGateway",
        isIcon: true
      }),
      key: "2",
      title: "Exclusive",
      id: "exclusiveGateway",
      action: () => morphGateway("exclusiveGateway")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.GatewayIcon, {
        variant: "inclusiveGateway",
        isIcon: true
      }),
      key: "3",
      title: "Inclusive",
      id: "inclusiveGateway",
      action: () => morphGateway("inclusiveGateway")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.GatewayIcon, {
        variant: "eventBasedGateway",
        isIcon: true
      }),
      key: "4",
      title: "Event",
      id: "eventBasedGateway",
      action: () => morphGateway("eventBasedGateway")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.GatewayIcon, {
        variant: "complexGateway",
        isIcon: true
      }),
      key: "5",
      title: "Complex",
      id: "complexGateway",
      action: () => morphGateway("complexGateway")
    }];
  }, [morphGateway]);
  return morphingActions;
}
try {
    // @ts-ignore
    useGatewayNodeMorphingActions.displayName = "useGatewayNodeMorphingActions";
    // @ts-ignore
    useGatewayNodeMorphingActions.__docgenInfo = { "description": "", "displayName": "useGatewayNodeMorphingActions", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; } & BPMN20__tComplexGateway__extensionElements) | ({ __?: undefined; } & BPMN20__tEventBasedGateway__extensionElements) | ({ ...; } & BPMN20__tExclusiveGateway__extensionElements) | ({ ...; } & BPMN20__tInclusiveGateway__extensionElements) | ({ ...; } & BPMN20__tParallelGateway__extensionElements)..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "@_gatewayDirection": { "defaultValue": null, "description": "", "name": "@_gatewayDirection", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Unspecified\"" }, { "value": "\"Converging\"" }, { "value": "\"Diverging\"" }, { "value": "\"Mixed\"" }] } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "activationCondition": { "defaultValue": null, "description": "", "name": "activationCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_instantiate": { "defaultValue": null, "description": "", "name": "@_instantiate", "required": false, "type": { "name": "boolean" } }, "@_eventGatewayType": { "defaultValue": null, "description": "", "name": "@_eventGatewayType", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Exclusive\"" }, { "value": "\"Parallel\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx#useGatewayNodeMorphingActions"] = { docgenInfo: useGatewayNodeMorphingActions.__docgenInfo, name: "useGatewayNodeMorphingActions", path: "src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx#useGatewayNodeMorphingActions" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx":
/*!*************************************************************************!*\
  !*** ./src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserTaskProperties: () => (/* binding */ UserTaskProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nameDocumentationAndId/NameDocumentationAndId */ "./src/propertiesPanel/nameDocumentationAndId/NameDocumentationAndId.tsx");
/* harmony import */ var _assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assignments/AssignmentsFormSection */ "./src/propertiesPanel/assignments/AssignmentsFormSection.tsx");
/* harmony import */ var _onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../onEntryAndExitScripts/OnEntryAndExitScriptsFormSection */ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx");
/* harmony import */ var _diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../diagram/nodes/NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_PropertiesPanelHeaderFormSection */ "./src/propertiesPanel/singleNodeProperties/_PropertiesPanelHeaderFormSection.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../asyncCheckbox/AsyncCheckbox */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx");
/* harmony import */ var _slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../slaDueDate/SlaDueDateInput */ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx");
/* harmony import */ var _multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../multiInstanceCheckbox/MultiInstanceCheckbox */ "./src/propertiesPanel/multiInstanceCheckbox/MultiInstanceCheckbox.tsx");
/* harmony import */ var _multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../multiInstance/MultiInstanceProperties */ "./src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx");
/* harmony import */ var _adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../adhocAutostartCheckbox/AdhocAutostartCheckbox */ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextArea/TextArea */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextArea/TextArea.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _reassignments_Reassignments__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../reassignments/Reassignments */ "./src/propertiesPanel/reassignments/Reassignments.tsx");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader */ "../xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_external_link_alt_icon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/external-link-alt-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/edit-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/edit-icon.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Checkbox/Checkbox */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Checkbox/Checkbox.js");

























function UserTaskProperties(_ref) {
  let {
    userTask
  } = _ref;
  var _a, _b, _c, _d, _e, _f, _g, _h;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_12__.useBpmnEditorStoreApi)();
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_12__.useBpmnEditorStore)(s => s.settings);
  const [showReassignmentsModal, setShowReassignmentsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const closeReassignmentsModal = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {
    setShowReassignmentsModal(false);
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__.PropertiesPanelHeaderFormSection, {
      title: userTask["@_name"] || "User task",
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__.TaskIcon, {
        variant: userTask.__$$element,
        isIcon: true
      }),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__.NameDocumentationAndId, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Task",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_a = userTask.taskName) === null || _a === void 0 ? void 0 : _a.__$$text) || "",
          onChange: newTaskName => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref2 => {
              let {
                element: e
              } = _ref2;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.taskName = {
                  __$$text: newTaskName
                };
              }
            });
          }),
          placeholder: "Enter task name...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Subject",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Subject",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: (_e = (_d = (_c = (_b = userTask.dataInputAssociation) === null || _b === void 0 ? void 0 : _b[0].assignment) === null || _c === void 0 ? void 0 : _c[0].from) === null || _d === void 0 ? void 0 : _d.__$$text) !== null && _e !== void 0 ? _e : '',
          onChange: newsubject => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref3 => {
              let {
                element: e
              } = _ref3;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {}
            });
          }),
          placeholder: "Enter subject...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Content",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Content",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_f = userTask.content) === null || _f === void 0 ? void 0 : _f.__$$text) || "",
          onChange: newcontent => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref4 => {
              let {
                element: e
              } = _ref4;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.content = {
                  __$$text: newcontent
                };
              }
            });
          }),
          placeholder: "Enter task name...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 3
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Priority",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_g = userTask.priority) === null || _g === void 0 ? void 0 : _g.__$$text) || "",
          onChange: newpriority => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref5 => {
              let {
                element: e
              } = _ref5;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.priority = {
                  __$$text: newpriority
                };
              }
            });
          }),
          placeholder: "Enter priority...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Description",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: userTask["@_description"],
          onChange: newDescription => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref6 => {
              let {
                element: e
              } = _ref6;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e["@_description"] = newDescription;
              }
            });
          }),
          placeholder: "Enter description...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 3
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_20__.Checkbox, {
          label: "Skippable",
          "aria-label": "Skippable",
          id: "kie-bpmn-editor--properties-panel--skippable-checkbox",
          isDisabled: settings.isReadOnly,
          isChecked: userTask["@_skippable"],
          onChange: checked => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref7 => {
              let {
                element: e
              } = _ref7;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e["@_skippable"] = checked;
              }
            });
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Actors"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Groups"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Created by"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_reassignments_Reassignments__WEBPACK_IMPORTED_MODULE_13__.Reassignments, {
        isOpen: showReassignmentsModal,
        onClose: closeReassignmentsModal
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_14__.SectionHeader, {
          expands: "modal",
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_external_link_alt_icon__WEBPACK_IMPORTED_MODULE_21__["default"], {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Reassignments",
          toogleSectionExpanded: () => setShowReassignmentsModal(true),
          action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_22__.Button, {
            title: "Manage",
            variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_22__.ButtonVariant.plain,
            isDisabled: settings.isReadOnly,
            onClick: () => setShowReassignmentsModal(true),
            style: {
              paddingBottom: 0,
              paddingTop: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_23__["default"], {})
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Notifications"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__.SlaDueDateInput, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_7__.AsyncCheckbox, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_11__.AdhocAutostartCheckbox, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_9__.MultiInstanceCheckbox, {
        element: userTask
      }), ((_h = userTask.loopCharacteristics) === null || _h === void 0 ? void 0 : _h.__$$element) === "multiInstanceLoopCharacteristics" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_10__.MultiInstanceProperties, {
        element: userTask
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__.BidirectionalAssignmentsFormSection, {
      element: userTask
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__.OnEntryAndExitScriptsFormSection, {
      element: userTask
    })]
  });
}
try {
    // @ts-ignore
    UserTaskProperties.displayName = "UserTaskProperties";
    // @ts-ignore
    UserTaskProperties.__docgenInfo = { "description": "", "displayName": "UserTaskProperties", "props": { "userTask": { "defaultValue": null, "description": "", "name": "userTask", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 24 more ...; rendering?: ({ ...; } & { ...; })[] | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx#UserTaskProperties"] = { docgenInfo: UserTaskProperties.__docgenInfo, name: "UserTaskProperties", path: "src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx#UserTaskProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/store/StoreContext.ts":
/*!***********************************!*\
  !*** ./src/store/StoreContext.ts ***!
  \***********************************/
/***/ (() => {

throw new Error("Module build failed (from ../../node_modules/.pnpm/babel-loader@9.1.3_@babel+core@7.24.9_webpack@5.94.0_esbuild@0.18.20_/node_modules/babel-loader/lib/index.js):\nSyntaxError: /home/eurokennedy/projects/incubator-kie-tools/packages/bpmn-editor/src/store/StoreContext.ts: Unexpected token (5:0)\n\n  3 | export const BpmnEditorStoreApiContext = createContext({});\n  4 | selector: (state) => StateSlice,\n> 5 | ;\n    | ^\n  6 | export function useBpmnEditorStore(equalityFn) {\n  7 |     const store = useContext(BpmnEditorStoreApiContext);\n  8 |     if (store === null) {\n    at constructor (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:349:19)\n    at TypeScriptParserMixin.raise (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:3247:19)\n    at TypeScriptParserMixin.unexpected (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:3267:16)\n    at TypeScriptParserMixin.parseExprAtom (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10946:16)\n    at TypeScriptParserMixin.parseExprSubscripts (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10562:23)\n    at TypeScriptParserMixin.parseUpdate (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10547:21)\n    at TypeScriptParserMixin.parseMaybeUnary (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10527:23)\n    at TypeScriptParserMixin.parseMaybeUnary (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:9455:18)\n    at TypeScriptParserMixin.parseMaybeUnaryOrPrivate (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10381:61)\n    at TypeScriptParserMixin.parseExprOps (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10386:23)\n    at TypeScriptParserMixin.parseMaybeConditional (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10363:23)\n    at TypeScriptParserMixin.parseMaybeAssign (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10326:21)\n    at TypeScriptParserMixin.parseMaybeAssign (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:9404:20)\n    at TypeScriptParserMixin.parseExpressionBase (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10285:36)\n    at /home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10276:39\n    at TypeScriptParserMixin.allowInAnd (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:11906:16)\n    at TypeScriptParserMixin.parseExpression (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:10276:17)\n    at TypeScriptParserMixin.parseStatementContent (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12350:23)\n    at TypeScriptParserMixin.parseStatementContent (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:9129:18)\n    at TypeScriptParserMixin.parseStatementLike (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12217:17)\n    at TypeScriptParserMixin.parseStatementOrSloppyAnnexBFunctionDeclaration (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12207:17)\n    at TypeScriptParserMixin.parseLabeledStatement (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12732:34)\n    at TypeScriptParserMixin.parseStatementContent (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12352:19)\n    at TypeScriptParserMixin.parseStatementContent (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:9129:18)\n    at TypeScriptParserMixin.parseStatementLike (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12217:17)\n    at TypeScriptParserMixin.parseModuleItem (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12194:17)\n    at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12770:36)\n    at TypeScriptParserMixin.parseBlockBody (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12763:10)\n    at TypeScriptParserMixin.parseProgram (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12091:10)\n    at TypeScriptParserMixin.parseTopLevel (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:12081:25)\n    at TypeScriptParserMixin.parse (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:13893:10)\n    at TypeScriptParserMixin.parse (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:9744:18)\n    at parse (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+parser@7.25.3/node_modules/@babel/parser/lib/index.js:13906:26)\n    at parser (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+core@7.24.9/node_modules/@babel/core/lib/parser/index.js:41:34)\n    at parser.next (<anonymous>)\n    at normalizeFile (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+core@7.24.9/node_modules/@babel/core/lib/transformation/normalize-file.js:64:37)\n    at normalizeFile.next (<anonymous>)\n    at run (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+core@7.24.9/node_modules/@babel/core/lib/transformation/index.js:21:50)\n    at run.next (<anonymous>)\n    at transform (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/@babel+core@7.24.9/node_modules/@babel/core/lib/transform.js:22:33)\n    at transform.next (<anonymous>)\n    at step (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js:261:32)\n    at /home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js:273:13\n    at async.call.result.err.err (/home/eurokennedy/projects/incubator-kie-tools/node_modules/.pnpm/gensync@1.0.0-beta.2/node_modules/gensync/index.js:223:11)");

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlzYy1lbXB0eS1FbXB0eS1zdG9yaWVzLjJkZWJhOTIyNDA0Yjg3ZTRmY2ZiLmhvdC11cGRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQnFEO0FBQ25CO0FBRzBFO0FBQzNFO0FBQ0Y7QUFDMkM7QUFDcEM7QUFDK0M7QUFDckQ7QUFDK0M7QUFDWDtBQUNoQjtBQUNVO0FBQzZDO0FBQ3pDO0FBQ0k7QUFDaUM7QUFDSztBQUN4QjtBQU10RDtBQUN3QjtBQUNnRztBQUM5QjtBQUNwQjtBQUdoQztBQUdZO0FBQ0o7QUFDbEQ7QUFFMUIsTUFBTWlDLG1DQUFtQyxHQUFHLEdBQUc7QUFFL0MsTUFBTUMsV0FBVyxHQUFHLEVBQUU7QUE4RWYsTUFBTUMsa0JBQWtCLEdBQUdDLElBQUEsSUFNZ0M7RUFBQSxJQU4vQjtJQUNqQ0MsS0FBSztJQUNMQyxlQUFlO0lBQ2ZDLGFBQWE7SUFDYkMsMkJBQTJCO0lBQzNCQztFQUFVLENBQ2tELEdBQUFMLElBQUE7RUFDNUQsTUFBTU0scUJBQXFCLEdBQUdqQix3RUFBa0IsQ0FBRWtCLENBQUMsSUFBS0EsQ0FBQyxDQUFDQyxlQUFlLENBQUNDLE1BQU0sQ0FBQztFQUNqRixNQUFNQyxJQUFJLEdBQUdyQix3RUFBa0IsQ0FBRWtCLENBQUMsSUFBS0EsQ0FBQyxDQUFDRyxJQUFJLENBQUM7RUFDOUMsTUFBTUMsMEJBQTBCLEdBQUd0Qix3RUFBa0IsQ0FBRWtCLENBQUMsSUFBS0EsQ0FBQyxDQUFDSyxRQUFRLENBQUNMLENBQUMsQ0FBQyxDQUFDSSwwQkFBMEIsRUFBRSxDQUFDO0VBQ3hHLE1BQU1FLGtCQUFrQixHQUFHdkIsMkVBQXFCLEVBQUU7RUFDbEQsTUFBTTtJQUFFd0I7RUFBVyxDQUFFLEdBQUduQiwrRUFBVyxFQUFFO0VBRXJDLE1BQU07SUFBRW9CLHlCQUF5QjtJQUFFQztFQUF3QixDQUFFLEdBQUd2QyxpRUFBYSxFQUFFO0VBRy9FLE1BQU13QyxVQUFV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QUM0USxvR0FBbUM7TUFBQ1AsT0FBTyxFQUFFNEI7SUFBUSxFQUFJLEVBRTFEalMsc0RBQUEsQ0FBQzZRLHFIQUFnQztNQUFDUixPQUFPLEVBQUU0QjtJQUFRLEVBQUk7RUFBQSxFQUN0RDtBQUVQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtpZS10b29scy9icG1uLWVkaXRvci8uL3NyYy9CcG1uRWRpdG9yLnRzeCIsIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4vc3JjL2RpYWdyYW0vbm9kZXMvTm9kZXMudHN4Iiwid2VicGFjazovL0BraWUtdG9vbHMvYnBtbi1lZGl0b3IvLi9zcmMvZGlhZ3JhbS9ub2Rlcy9tb3JwaGluZy91c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucy50c3giLCJ3ZWJwYWNrOi8vQGtpZS10b29scy9icG1uLWVkaXRvci8uL3NyYy9wcm9wZXJ0aWVzUGFuZWwvc2luZ2xlTm9kZVByb3BlcnRpZXMvVXNlclRhc2tQcm9wZXJ0aWVzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgXCJAcGF0dGVybmZseS9yZWFjdC1jb3JlL2Rpc3Qvc3R5bGVzL2Jhc2UuY3NzXCI7XG5pbXBvcnQgXCJyZWFjdGZsb3cvZGlzdC9zdHlsZS5jc3NcIjtcblxuaW1wb3J0IHsgQWxsQnBtbk1hcnNoYWxsZXJzLCBCcG1uTGF0ZXN0TW9kZWwgfSBmcm9tIFwiQGtpZS10b29scy9icG1uLW1hcnNoYWxsZXJcIjtcbmltcG9ydCB7IERyYXdlciwgRHJhd2VyQ29udGVudCwgRHJhd2VyQ29udGVudEJvZHkgfSBmcm9tIFwiQHBhdHRlcm5mbHkvcmVhY3QtY29yZS9kaXN0L2pzL2NvbXBvbmVudHMvRHJhd2VyXCI7XG5pbXBvcnQgeyBvcmlnaW5hbCB9IGZyb20gXCJpbW1lclwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlSW1wZXJhdGl2ZUhhbmRsZSwgdXNlTWVtbywgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5pbXBvcnQgeyBFcnJvckJvdW5kYXJ5LCBFcnJvckJvdW5kYXJ5UHJvcHNXaXRoRmFsbGJhY2sgfSBmcm9tIFwicmVhY3QtZXJyb3ItYm91bmRhcnlcIjtcbmltcG9ydCAqIGFzIFJGIGZyb20gXCJyZWFjdGZsb3dcIjtcbmltcG9ydCB7IEJwbW5FZGl0b3JDb250ZXh0UHJvdmlkZXIsIHVzZUJwbW5FZGl0b3IgfSBmcm9tIFwiLi9CcG1uRWRpdG9yQ29udGV4dFwiO1xuaW1wb3J0IHsgQnBtbkVkaXRvckVycm9yRmFsbGJhY2sgfSBmcm9tIFwiLi9CcG1uRWRpdG9yRXJyb3JGYWxsYmFja1wiO1xuaW1wb3J0IHsgQnBtbkRpYWdyYW0gfSBmcm9tIFwiLi9kaWFncmFtL0JwbW5EaWFncmFtXCI7XG5pbXBvcnQgeyBCcG1uVmVyc2lvbkxhYmVsIH0gZnJvbSBcIi4vZGlhZ3JhbS9CcG1uVmVyc2lvbkxhYmVsXCI7XG5pbXBvcnQgeyBCcG1uRWRpdG9yRXh0ZXJuYWxNb2RlbHNDb250ZXh0UHJvdmlkZXIgfSBmcm9tIFwiLi9leHRlcm5hbE1vZGVscy9CcG1uRWRpdG9yRXh0ZXJuYWxNb2RlbHNDb250ZXh0XCI7XG5pbXBvcnQgeyBOb3JtYWxpemVkLCBub3JtYWxpemUgfSBmcm9tIFwiLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHsgSU5JVElBTF9DT01QVVRFRF9DQUNIRSB9IGZyb20gXCIuL3N0b3JlL2luaXRpYWxDb21wdXRlZENhY2hlXCI7XG5pbXBvcnQgeyBDb21wdXRlZFN0YXRlQ2FjaGUgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9zdG9yZS9Db21wdXRlZFN0YXRlQ2FjaGVcIjtcbmltcG9ydCB7IFh5Rmxvd1JlYWN0S2llRGlhZ3JhbVN0b3JlQXBpQ29udGV4dCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3N0b3JlL1N0b3JlXCI7XG5pbXBvcnQgeyBTdGF0ZSwgY3JlYXRlQnBtbkVkaXRvclN0b3JlLCBnZXREZWZhdWx0U3RhdGljU3RhdGUgfSBmcm9tIFwiLi9zdG9yZS9TdG9yZVwiO1xuaW1wb3J0IHtcbiAgQnBtbkVkaXRvclN0b3JlQXBpQ29udGV4dCxcbiAgU3RvcmVBcGlUeXBlLFxuICB1c2VCcG1uRWRpdG9yU3RvcmUsXG4gIHVzZUJwbW5FZGl0b3JTdG9yZUFwaSxcbn0gZnJvbSBcIi4vc3RvcmUvU3RvcmVDb250ZXh0XCI7XG5pbXBvcnQgeyBCcG1uRGlhZ3JhbVN2ZyB9IGZyb20gXCIuL3N2Zy9CcG1uRGlhZ3JhbVN2Z1wiO1xuaW1wb3J0IHsgdXNlU3RhdGVBc0l0V2FzQmVmb3JlQ29uZGl0aW9uQmVjYW1lVHJ1ZSB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3JlYWN0RXh0L3VzZVN0YXRlQXNJdFdhc0JlZm9yZUNvbmRpdGlvbkJlY2FtZVRydWVcIjtcbmltcG9ydCB7IHVzZUVmZmVjdEFmdGVyRmlyc3RSZW5kZXIgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9yZWFjdEV4dC91c2VFZmZlY3RBZnRlckZpcnN0UmVuZGVyXCI7XG5pbXBvcnQgeyBDb21tYW5kcywgQ29tbWFuZHNDb250ZXh0UHJvdmlkZXIsIHVzZUNvbW1hbmRzIH0gZnJvbSBcIi4vY29tbWFuZHMvQ29tbWFuZHNDb250ZXh0UHJvdmlkZXJcIjtcbmltcG9ydCB7IERpYWdyYW1SZWYgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9kaWFncmFtL1h5Rmxvd1JlYWN0S2llRGlhZ3JhbVwiO1xuaW1wb3J0IHsgQnBtbkRpYWdyYW1FZGdlRGF0YSwgQnBtbkRpYWdyYW1Ob2RlRGF0YSwgQnBtbk5vZGVFbGVtZW50LCBCcG1uTm9kZVR5cGUgfSBmcm9tIFwiLi9kaWFncmFtL0JwbW5EaWFncmFtRG9tYWluXCI7XG5pbXBvcnQgeyBQcm9wZXJ0aWVzUGFuZWwgfSBmcm9tIFwiLi9wcm9wZXJ0aWVzUGFuZWwvUHJvcGVydGllc1BhbmVsXCI7XG5cbi8vIExlYXZlIGN1c3RvbSBDU1MgYWx3YXlzIGZvciBsYXN0LlxuaW1wb3J0IFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9wYXR0ZXJuZmx5LWN1c3RvbWl6YXRpb25zLmNzc1wiO1xuaW1wb3J0IFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC94eWZsb3ctY3VzdG9taXphdGlvbnMuY3NzXCI7XG5pbXBvcnQgXCIuL0JwbW5FZGl0b3IuY3NzXCI7XG5cbmNvbnN0IE9OX01PREVMX0NIQU5HRV9ERUJPVU5DRV9USU1FX0lOX01TID0gNTAwO1xuXG5jb25zdCBTVkdfUEFERElORyA9IDIwO1xuXG5leHBvcnQgdHlwZSBCcG1uRWRpdG9yUmVmID0ge1xuICByZXNldDogKG1vZGU6IEJwbW5MYXRlc3RNb2RlbCkgPT4gdm9pZDtcbiAgZ2V0RGlhZ3JhbVN2ZzogKCkgPT4gUHJvbWlzZTxzdHJpbmcgfCB1bmRlZmluZWQ+O1xuICBnZXRDb21tYW5kczogKCkgPT4gQ29tbWFuZHM7XG59O1xuXG5leHBvcnQgdHlwZSBPbkJwbW5Nb2RlbENoYW5nZSA9IChtb2RlbDogTm9ybWFsaXplZDxCcG1uTGF0ZXN0TW9kZWw+KSA9PiB2b2lkO1xuXG5leHBvcnQgdHlwZSBPblJlcXVlc3RUb0p1bXBUb1BhdGggPSAobm9ybWFsaXplZFBvc2l4UGF0aFJlbGF0aXZlVG9UaGVPcGVuRmlsZTogc3RyaW5nKSA9PiB2b2lkO1xuZXhwb3J0IHR5cGUgT25SZXF1ZXN0VG9SZXNvbHZlUGF0aCA9IChub3JtYWxpemVkUG9zaXhQYXRoUmVsYXRpdmVUb1RoZU9wZW5GaWxlOiBzdHJpbmcpID0+IHN0cmluZztcblxuLyoqIEByZXR1cm5zIGEgbGlzdCBvZiBwYXRocyByZWxhdGl2ZSB0byB0aGUgb3BlbiBmaWxlLiAqL1xuZXhwb3J0IHR5cGUgT25SZXF1ZXN0RXh0ZXJuYWxNb2RlbHNBdmFpbGFibGVUb0luY2x1ZGUgPSAoKSA9PiBQcm9taXNlPHN0cmluZ1tdPjtcblxuZXhwb3J0IHR5cGUgT25SZXF1ZXN0RXh0ZXJuYWxNb2RlbEJ5UGF0aCA9IChcbiAgbm9ybWFsaXplZFBvc2l4UGF0aFJlbGF0aXZlVG9UaGVPcGVuRmlsZTogc3RyaW5nXG4pID0+IFByb21pc2U8RXh0ZXJuYWxNb2RlbCB8IG51bGw+O1xuXG5leHBvcnQgdHlwZSBFeHRlcm5hbE1vZGVsc0luZGV4ID0gUmVjb3JkPFxuICBzdHJpbmcgLyoqIG5vcm1hbGl6ZWRQb3NpeFBhdGhSZWxhdGl2ZVRvVGhlT3BlbkZpbGUgKi8sXG4gIEV4dGVybmFsTW9kZWwgfCB1bmRlZmluZWRcbj47XG5leHBvcnQgdHlwZSBFeHRlcm5hbE1vZGVsID0geyB0eXBlOiBcImRtblwiIH0gJiBFeHRlcm5hbERtbjtcblxuZXhwb3J0IHR5cGUgRXh0ZXJuYWxEbW5zSW5kZXggPSBNYXA8c3RyaW5nIC8qKiBub3JtYWxpemVkUG9zaXhQYXRoUmVsYXRpdmVUb1RoZU9wZW5GaWxlICovLCBFeHRlcm5hbERtbj47XG5leHBvcnQgdHlwZSBFeHRlcm5hbERtbiA9IHtcbiAgbW9kZWw6IE5vcm1hbGl6ZWQ8QnBtbkxhdGVzdE1vZGVsPjtcbiAgbm9ybWFsaXplZFBvc2l4UGF0aFJlbGF0aXZlVG9UaGVPcGVuRmlsZTogc3RyaW5nO1xuICBzdmc6IHN0cmluZztcbn07XG5cbmV4cG9ydCB0eXBlIEJwbW5FZGl0b3JQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBCUE1OIGl0c2VsZi5cbiAgICovXG4gIG1vZGVsOiBCcG1uTGF0ZXN0TW9kZWw7XG4gIC8qKlxuICAgKiBUaGUgb3JpZ2luYWwgdmVyc2lvbiBvZiBgbW9kZWxgIGJlZm9yZSB1cGdyYWRpbmcgdG8gYGxhdGVzdGAuXG4gICAqL1xuICBvcmlnaW5hbFZlcnNpb24/OiBBbGxCcG1uTWFyc2hhbGxlcnNbXCJ2ZXJzaW9uXCJdO1xuICAvKipcbiAgICogQ2FsbGVkIHdoZW4gYSBjaGFuZ2Ugb2NjdXJzIG9uIGBtb2RlbGAsIHNvIHRoZSBjb250cm9sbGVkIGZsb3cgb2YgdGhlIGNvbXBvbmVudCBjYW4gYmUgZG9uZS5cbiAgICovXG4gIG9uTW9kZWxDaGFuZ2U/OiBPbkJwbW5Nb2RlbENoYW5nZTtcbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIGNvbnRleHQgaW4gd2hpY2ggdGhpcyBpbnN0YW5jZSBvZiBCUE1OIEVkaXRvciBpcyBydW5uaW5nLiBGb3IgZXhhbXBsZSwgaWYgdGhpcyBCUE1OIEVkaXRvciBpbnN0YW5jZVxuICAgKiBpcyBkaXNwbGF5aW5nIGEgbW9kZWwgZnJvbSBhIHByb2plY3QgY2FsbGVkIFwiTXkgcHJvamVjdFwiLCB5b3UgY291bGQgdXNlIGBleHRlcm5hbENvbnRleHROYW1lPXtcIk15IHByb2plY3RcIn1gXG4gICAqL1xuICBleHRlcm5hbENvbnRleHROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogRGVzY3JpYmUgdGhlIGNvbnRleHQgaW4gd2hpY2ggdGhpcyBpbnN0YW5jZSBvZiBCUE1OIEVkaXRvciBpcyBydW5uaW5nLiBGb3IgZXhhbXBsZSwgaWYgdGhpcyBCUE1OIEVkaXRvciBpbnN0YW5jZVxuICAgKiBpcyBkaXNwbGF5aW5nIGEgbW9kZWwgZnJvbSBhIHByb2plY3QgY2FsbGVkIFwiTXkgcHJvamVjdFwiLCB5b3UgY291bGQgdXNlXG4gICAqIGBleHRlcm5hbENvbnRleHREZXNjcmlwdGlvbj17J0FsbCBtb2RlbHMgKERNTiwgZXRjKSBvZiBcIk15IHByb2plY3RcIiBhcmUgYXZhaWxhYmxlLid9YFxuICAgKi9cbiAgZXh0ZXJuYWxDb250ZXh0RGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBBIGxpbmsgdGhhdCB3aWxsIHRha2UgdXNlcnMgdG8gYW4gaXNzdWUgdHJhY2tlciBzbyB0aGV5IGNhbiByZXBvcnQgcHJvYmxlbXMgdGhleSBmaW5kIG9uIHRoZSBCUE1OIEVkaXRvci5cbiAgICogVGhpcyBpcyBzaG93biBvbiB0aGUgRXJyb3JCb3VuZGFyeSBmYWxsYmFjayBjb21wb25lbnQsIHdoZW4gYW4gdW5jYXVnaHQgZXJyb3IgaGFwcGVucy5cbiAgICovXG4gIGlzc3VlVHJhY2tlckhyZWY/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBXaGVuIHVzZXJzIHdhbnQgdG8ganVtcCB0byBhbm90aGVyIGZpbGUsIHRoaXMgbWV0aG9kIGlzIGNhbGxlZCwgYWxsb3dpbmcgdGhlIGNvbnRyb2xsZXIgb2YgdGhpcyBjb21wb25lbnQgZGVjaWRlIHdoYXQgdG8gZG8uXG4gICAqIExpbmtzIGFyZSBvbmx5IHJlbmRlcmVkIGlmIHRoaXMgaXMgcHJvdmlkZWQuIE90aGVyd2lzZSwgcGF0aHMgd2lsbCBiZSByZW5kZXJlZCBhcyB0ZXh0LlxuICAgKi9cbiAgb25SZXF1ZXN0VG9KdW1wVG9QYXRoPzogT25SZXF1ZXN0VG9KdW1wVG9QYXRoO1xuICAvKipcbiAgICogQWxsIHBhdGhzIGluc2lkZSB0aGUgQlBNTiBFZGl0b3IgYXJlIHJlbGF0aXZlLiBUbyBiZSBhYmxlIHRvIHJlc29sdmUgdGhlbSBhbmQgZGlzcGxheSB0aGVtIGFzIGFic29sdXRlIHBhdGhzLCB0aGlzIGZ1bmN0aW9uIGlzIGNhbGxlZC5cbiAgICogSWYgdW5kZWZpbmVkLCB0aGUgcmVsYXRpdmUgcGF0aHMgd2lsbCBiZSBkaXNwbGF5ZWQuXG4gICAqL1xuICBvblJlcXVlc3RUb1Jlc29sdmVQYXRoPzogT25SZXF1ZXN0VG9SZXNvbHZlUGF0aDtcbiAgLyoqXG4gICAqIE5vdGlmaWVzIHRoZSBjYWxsZXIgd2hlbiB0aGUgQlBNTiBFZGl0b3IgcGVyZm9ybXMgYSBuZXcgZWRpdCBhZnRlciB0aGUgZGVib3VuY2UgdGltZS5cbiAgICovXG4gIG9uTW9kZWxEZWJvdW5jZVN0YXRlQ2hhbmdlZD86IChjaGFuZ2VkOiBib29sZWFuKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IEJwbW5FZGl0b3JJbnRlcm5hbCA9ICh7XG4gIG1vZGVsLFxuICBvcmlnaW5hbFZlcnNpb24sXG4gIG9uTW9kZWxDaGFuZ2UsXG4gIG9uTW9kZWxEZWJvdW5jZVN0YXRlQ2hhbmdlZCxcbiAgZm9yd2FyZFJlZixcbn06IEJwbW5FZGl0b3JQcm9wcyAmIHsgZm9yd2FyZFJlZj86IFJlYWN0LlJlZjxCcG1uRWRpdG9yUmVmPiB9KSA9PiB7XG4gIGNvbnN0IGlzUHJvcGVydGllc1BhbmVsT3BlbiA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuKTtcbiAgY29uc3QgYnBtbiA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5icG1uKTtcbiAgY29uc3QgaXNEaWFncmFtRWRpdGluZ0luUHJvZ3Jlc3MgPSB1c2VCcG1uRWRpdG9yU3RvcmUoKHMpID0+IHMuY29tcHV0ZWQocykuaXNEaWFncmFtRWRpdGluZ0luUHJvZ3Jlc3MoKSk7XG4gIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuICBjb25zdCB7IGNvbW1hbmRzUmVmIH0gPSB1c2VDb21tYW5kcygpO1xuXG4gIGNvbnN0IHsgYnBtbk1vZGVsQmVmb3JlRWRpdGluZ1JlZiwgYnBtbkVkaXRvclJvb3RFbGVtZW50UmVmIH0gPSB1c2VCcG1uRWRpdG9yKCk7XG5cbiAgLy8gUmVmc1xuICBjb25zdCBkaWFncmFtUmVmID0gdXNlUmVmPERpYWdyYW1SZWY8QnBtbk5vZGVUeXBlLCBCcG1uRGlhZ3JhbU5vZGVEYXRhLCBCcG1uRGlhZ3JhbUVkZ2VEYXRhPj4obnVsbCk7XG4gIGNvbnN0IGRpYWdyYW1Db250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gIC8vIEFsbG93IGltcGVyYXRpdmVsbHkgY29udHJvbGxpbmcgdGhlIEVkaXRvci5cbiAgdXNlSW1wZXJhdGl2ZUhhbmRsZShcbiAgICBmb3J3YXJkUmVmLFxuICAgICgpID0+ICh7XG4gICAgICByZXNldDogKG1vZGVsKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0YXRlID0gYnBtbkVkaXRvclN0b3JlQXBpLmdldFN0YXRlKCk7XG4gICAgICAgIHJldHVybiBzdGF0ZS5kaXNwYXRjaChzdGF0ZSkucmVzZXQobm9ybWFsaXplKG1vZGVsKSk7XG4gICAgICB9LFxuICAgICAgZ2V0RGlhZ3JhbVN2ZzogYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBub2RlcyA9IGRpYWdyYW1SZWYuY3VycmVudD8uZ2V0UmVhY3RGbG93SW5zdGFuY2UoKT8uZ2V0Tm9kZXMoKSBhcyAgLy8gVGhpcyBjYXN0aW5nIGlzIHJlcXVpcmVkIGJlY2F1c2UgWFlGbG93IGRvZXNuJ3QgY29ycmVjdGx5IHR5cGUgdGhlIFwiZ2V0Tm9kZXMoKVwiIGZ1bmN0aW9uIHdpdGggdGhlIG5vZGUgdHlwZXMuXG4gICAgICAgICAgfCB1bmRlZmluZWRcbiAgICAgICAgICB8IFJGLk5vZGU8QnBtbkRpYWdyYW1Ob2RlRGF0YTxCcG1uTm9kZUVsZW1lbnQ+LCBCcG1uTm9kZVR5cGU+W107XG5cbiAgICAgICAgY29uc3QgZWRnZXMgPSBkaWFncmFtUmVmLmN1cnJlbnQ/LmdldFJlYWN0Rmxvd0luc3RhbmNlKCk/LmdldEVkZ2VzKCk7XG4gICAgICAgIGlmICghbm9kZXMgfHwgIWVkZ2VzKSB7XG4gICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGJvdW5kcyA9IFJGLmdldE5vZGVzQm91bmRzKG5vZGVzKTtcbiAgICAgICAgY29uc3Qgc3RhdGUgPSBicG1uRWRpdG9yU3RvcmVBcGkuZ2V0U3RhdGUoKTtcblxuICAgICAgICBjb25zdCBzdmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInN2Z1wiKTtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcIndpZHRoXCIsIGJvdW5kcy53aWR0aCArIFNWR19QQURESU5HICogMiArIFwiXCIpO1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFxuICAgICAgICAgIFwiaGVpZ2h0XCIsXG4gICAgICAgICAgLy8gSXQncyBub3QgcG9zc2libGUgdG8gY2FsY3VsYXRlIHRoZSB0ZXh0IGhlaWdodCB3aGljaCBpcyBvdXRzaWRlIG9mIHRoZSBub2RlIGZvciB0aGUgZGF0YU9iamVjdCBub2RlIHNoYXBlXG4gICAgICAgICAgYm91bmRzLmhlaWdodCArIFNWR19QQURESU5HICogNSArIFwiXCJcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBXZSdyZSBzdGlsbCBvbiBSZWFjdCAxNy5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWRlcHJlY2F0ZWRcbiAgICAgICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgICAgIC8vIEluZGVwZGVudCBvZiB3aGVyZSB0aGUgbm9kZXMgYXJlIGxvY2F0ZWQsIHRoZXknbGwgYWx3YXlzIGJlIHJlbmRlcmVkIGF0IHRoZSB0b3AtbGVmdCBjb3JuZXIgb2YgdGhlIFNWR1xuICAgICAgICAgIDxnIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgkey1ib3VuZHMueCArIFNWR19QQURESU5HfSAkey1ib3VuZHMueSArIFNWR19QQURESU5HfSlgfT5cbiAgICAgICAgICAgIDxCcG1uRGlhZ3JhbVN2ZyBub2Rlcz17bm9kZXN9IGVkZ2VzPXtlZGdlc30gc25hcEdyaWQ9e3N0YXRlLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5zbmFwR3JpZH0gLz5cbiAgICAgICAgICA8L2c+LFxuICAgICAgICAgIHN2Z1xuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybiBuZXcgWE1MU2VyaWFsaXplcigpLnNlcmlhbGl6ZVRvU3RyaW5nKHN2Zyk7XG4gICAgICB9LFxuICAgICAgZ2V0Q29tbWFuZHM6ICgpID0+IGNvbW1hbmRzUmVmLmN1cnJlbnQsXG4gICAgfSksXG4gICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgY29tbWFuZHNSZWZdXG4gICk7XG5cbiAgLy8gTWFrZSBzdXJlIHRoZSBCUE1OIEVkaXRvciByZWFjdHMgdG8gcHJvcHMgY2hhbmdpbmcuXG4gIHVzZUVmZmVjdEFmdGVyRmlyc3RSZW5kZXIoKCkgPT4ge1xuICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgIC8vIEF2b2lkIHVuZWNlc3Nhcnkgc3RhdGUgdXBkYXRlc1xuICAgICAgaWYgKG1vZGVsID09PSBvcmlnaW5hbChzdGF0ZS5icG1uLm1vZGVsKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHN0YXRlLmJwbW4ubW9kZWwgPSBub3JtYWxpemUobW9kZWwpO1xuXG4gICAgICBicG1uTW9kZWxCZWZvcmVFZGl0aW5nUmVmLmN1cnJlbnQgPSBzdGF0ZS5icG1uLm1vZGVsO1xuICAgIH0pO1xuICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpLCBtb2RlbF0pO1xuXG4gIHVzZVN0YXRlQXNJdFdhc0JlZm9yZUNvbmRpdGlvbkJlY2FtZVRydWUoXG4gICAgYnBtbi5tb2RlbCxcbiAgICBpc0RpYWdyYW1FZGl0aW5nSW5Qcm9ncmVzcyxcbiAgICB1c2VDYWxsYmFjaygocHJldikgPT4gKGJwbW5Nb2RlbEJlZm9yZUVkaXRpbmdSZWYuY3VycmVudCA9IHByZXYpLCBbYnBtbk1vZGVsQmVmb3JlRWRpdGluZ1JlZl0pXG4gICk7XG5cbiAgLy8gT25seSBub3RpZnkgY2hhbmdlcyB3aGVuIGRyYWdnaW5nL3Jlc2l6aW5nIG9wZXJhdGlvbnMgYXJlIG5vdCBoYXBwZW5pbmcuXG4gIHVzZUVmZmVjdEFmdGVyRmlyc3RSZW5kZXIoKCkgPT4ge1xuICAgIGlmIChpc0RpYWdyYW1FZGl0aW5nSW5Qcm9ncmVzcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBvbk1vZGVsRGVib3VuY2VTdGF0ZUNoYW5nZWQ/LihmYWxzZSk7XG5cbiAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAvLyBJZ25vcmUgY2hhbmdlcyBtYWRlIG91dHNpZGUuLi4gSWYgdGhlIGNvbnRyb2xsZXIgb2YgdGhlIGNvbXBvbmVudFxuICAgICAgLy8gY2hhbmdlZCBpdHMgcHJvcHMsIGl0IGtub3dzIGl0IGFscmVhZHksIHdlIGRvbid0IG5lZWQgdG8gY2FsbCBcIm9uTW9kZWxDaGFuZ2VcIiBhZ2Fpbi5cbiAgICAgIGlmIChtb2RlbCA9PT0gYnBtbi5tb2RlbCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uTW9kZWxEZWJvdW5jZVN0YXRlQ2hhbmdlZD8uKHRydWUpO1xuICAgICAgY29uc29sZS5kZWJ1ZyhcIkJQTU4gRURJVE9SOiBNb2RlbCBjaGFuZ2VkIVwiKTtcbiAgICAgIG9uTW9kZWxDaGFuZ2U/LihicG1uLm1vZGVsKTtcbiAgICB9LCBPTl9NT0RFTF9DSEFOR0VfREVCT1VOQ0VfVElNRV9JTl9NUyk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgIH07XG4gIH0sIFtpc0RpYWdyYW1FZGl0aW5nSW5Qcm9ncmVzcywgb25Nb2RlbENoYW5nZSwgYnBtbi5tb2RlbF0pO1xuXG4gIGNvbnN0IHByb3BlcnRpZXNQYW5lbCA9IHVzZU1lbW8oKCkgPT4gPFByb3BlcnRpZXNQYW5lbCAvPiwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e2JwbW5FZGl0b3JSb290RWxlbWVudFJlZn0gY2xhc3NOYW1lPXtcImtpZS1icG1uLWVkaXRvci0tcm9vdFwifT5cbiAgICAgIDxEcmF3ZXIgaXNFeHBhbmRlZD17aXNQcm9wZXJ0aWVzUGFuZWxPcGVufSBpc0lubGluZT17dHJ1ZX0gcG9zaXRpb249e1wicmlnaHRcIn0+XG4gICAgICAgIDxEcmF3ZXJDb250ZW50IHBhbmVsQ29udGVudD17cHJvcGVydGllc1BhbmVsfT5cbiAgICAgICAgICA8RHJhd2VyQ29udGVudEJvZHk+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT17XCJraWUtYnBtbi1lZGl0b3ItLWRpYWdyYW0tY29udGFpbmVyXCJ9XG4gICAgICAgICAgICAgIHJlZj17ZGlhZ3JhbUNvbnRhaW5lclJlZn1cbiAgICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e1wia2llLWJwbW4tZWRpdG9yLS1kaWFncmFtLWNvbnRhaW5lclwifVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7b3JpZ2luYWxWZXJzaW9uICYmIDxCcG1uVmVyc2lvbkxhYmVsIHZlcnNpb249e29yaWdpbmFsVmVyc2lvbn0gLz59XG4gICAgICAgICAgICAgIDxCcG1uRGlhZ3JhbSBkaWFncmFtUmVmPXtkaWFncmFtUmVmfSBjb250YWluZXI9e2RpYWdyYW1Db250YWluZXJSZWZ9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0RyYXdlckNvbnRlbnRCb2R5PlxuICAgICAgICA8L0RyYXdlckNvbnRlbnQ+XG4gICAgICA8L0RyYXdlcj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBCcG1uRWRpdG9yID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHM6IEJwbW5FZGl0b3JQcm9wcywgcmVmOiBSZWFjdC5SZWY8QnBtbkVkaXRvclJlZj4pID0+IHtcbiAgY29uc3Qgc3RvcmUgPSB1c2VNZW1vKFxuICAgICgpID0+XG4gICAgICBjcmVhdGVCcG1uRWRpdG9yU3RvcmUocHJvcHMubW9kZWwsIG5ldyBDb21wdXRlZFN0YXRlQ2FjaGU8UmV0dXJuVHlwZTxTdGF0ZVtcImNvbXB1dGVkXCJdPj4oSU5JVElBTF9DT01QVVRFRF9DQUNIRSkpLFxuICAgIC8vIFB1cnBvc2VmdWxseSBlbXB0eS4gVGhpcyBtZW1vaXplcyB0aGUgaW5pdGlhbCB2YWx1ZSBvZiB0aGUgc3RvcmVcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG4gICAgW11cbiAgKTtcbiAgY29uc3Qgc3RvcmVSZWYgPSBSZWFjdC51c2VSZWY8U3RvcmVBcGlUeXBlPihzdG9yZSk7XG5cbiAgY29uc3QgcmVzZXRTdGF0ZTogRXJyb3JCb3VuZGFyeVByb3BzV2l0aEZhbGxiYWNrW1wib25SZXNldFwiXSA9IHVzZUNhbGxiYWNrKCh7IGFyZ3MgfSkgPT4ge1xuICAgIHN0b3JlUmVmLmN1cnJlbnQ/LnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgc3RhdGUuZGlhZ3JhbSA9IGdldERlZmF1bHRTdGF0aWNTdGF0ZSgpLmRpYWdyYW07XG4gICAgICBzdGF0ZS5icG1uLm1vZGVsID0gYXJnc1swXTtcbiAgICB9KTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPEJwbW5FZGl0b3JDb250ZXh0UHJvdmlkZXIgey4uLnByb3BzfT5cbiAgICAgIDxFcnJvckJvdW5kYXJ5IEZhbGxiYWNrQ29tcG9uZW50PXtCcG1uRWRpdG9yRXJyb3JGYWxsYmFja30gb25SZXNldD17cmVzZXRTdGF0ZX0+XG4gICAgICAgIDxCcG1uRWRpdG9yRXh0ZXJuYWxNb2RlbHNDb250ZXh0UHJvdmlkZXIgey4uLnByb3BzfT5cbiAgICAgICAgICA8QnBtbkVkaXRvclN0b3JlQXBpQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17c3RvcmVSZWYuY3VycmVudH0+XG4gICAgICAgICAgICA8WHlGbG93UmVhY3RLaWVEaWFncmFtU3RvcmVBcGlDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtzdG9yZVJlZi5jdXJyZW50fT5cbiAgICAgICAgICAgICAgPENvbW1hbmRzQ29udGV4dFByb3ZpZGVyPlxuICAgICAgICAgICAgICAgIDxCcG1uRWRpdG9ySW50ZXJuYWwgZm9yd2FyZFJlZj17cmVmfSB7Li4ucHJvcHN9IC8+XG4gICAgICAgICAgICAgIDwvQ29tbWFuZHNDb250ZXh0UHJvdmlkZXI+XG4gICAgICAgICAgICA8L1h5Rmxvd1JlYWN0S2llRGlhZ3JhbVN0b3JlQXBpQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgICAgICA8L0JwbW5FZGl0b3JTdG9yZUFwaUNvbnRleHQuUHJvdmlkZXI+XG4gICAgICAgIDwvQnBtbkVkaXRvckV4dGVybmFsTW9kZWxzQ29udGV4dFByb3ZpZGVyPlxuICAgICAgPC9FcnJvckJvdW5kYXJ5PlxuICAgIDwvQnBtbkVkaXRvckNvbnRleHRQcm92aWRlcj5cbiAgKTtcbn0pO1xuIiwiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgcGFyc2VCcG1uMjBEcm9vbHMxME1ldGFEYXRhIH0gZnJvbSBcIkBraWUtdG9vbHMvYnBtbi1tYXJzaGFsbGVyL2Rpc3QvZHJvb2xzLWV4dGVuc2lvbi1tZXRhRGF0YVwiO1xuaW1wb3J0IHtcbiAgQlBNTjIwX190Qm91bmRhcnlFdmVudCxcbiAgQlBNTjIwX190Q29tcGxleEdhdGV3YXksXG4gIEJQTU4yMF9fdERhdGFPYmplY3QsXG4gIEJQTU4yMF9fdEVuZEV2ZW50LFxuICBCUE1OMjBfX3RFdmVudEJhc2VkR2F0ZXdheSxcbiAgQlBNTjIwX190RXhjbHVzaXZlR2F0ZXdheSxcbiAgQlBNTjIwX190R3JvdXAsXG4gIEJQTU4yMF9fdEluY2x1c2l2ZUdhdGV3YXksXG4gIEJQTU4yMF9fdEludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gIEJQTU4yMF9fdEludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gIEJQTU4yMF9fdExhbmUsXG4gIEJQTU4yMF9fdFBhcmFsbGVsR2F0ZXdheSxcbiAgQlBNTjIwX190UHJvY2VzcyxcbiAgQlBNTjIwX190U3RhcnRFdmVudCxcbiAgQlBNTjIwX190U3ViUHJvY2VzcyxcbiAgQlBNTjIwX190VGFzayxcbiAgQlBNTjIwX190VGV4dEFubm90YXRpb24sXG59IGZyb20gXCJAa2llLXRvb2xzL2JwbW4tbWFyc2hhbGxlci9kaXN0L3NjaGVtYXMvYnBtbi0yXzAvdHMtZ2VuL3R5cGVzXCI7XG5pbXBvcnQgeyBnZXRDb250YWlubWVudFJlbGF0aW9uc2hpcCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L21hdGhzL0RjTWF0aHNcIjtcbmltcG9ydCB7IHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvbWVtb2l6YXRpb24vbWVtb2l6YXRpb25cIjtcbmltcG9ydCB7XG4gIEVkaXRhYmxlTm9kZUxhYmVsLFxuICBPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlLFxuICB1c2VFZGl0YWJsZU5vZGVMYWJlbCxcbn0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3Qvbm9kZXMvRWRpdGFibGVOb2RlTGFiZWxcIjtcbmltcG9ydCB7XG4gIE5vZGVSZXNpemVySGFuZGxlLFxuICB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzLFxuICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wLFxuICB1c2VOb2RlQ2xhc3NOYW1lLFxuICB1c2VOb2RlRGltZW5zaW9ucyxcbiAgdXNlTm9kZVJlc2l6aW5nLFxufSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Ib29rc1wiO1xuaW1wb3J0IHsgSW5mb05vZGVQYW5lbCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL0luZm9Ob2RlUGFuZWxcIjtcbmltcG9ydCB7IE91dGdvaW5nU3R1ZmZOb2RlUGFuZWwgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9PdXRnb2luZ1N0dWZmTm9kZVBhbmVsXCI7XG5pbXBvcnQgeyBQb3NpdGlvbmFsTm9kZUhhbmRsZXMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Qb3NpdGlvbmFsTm9kZUhhbmRsZXNcIjtcbmltcG9ydCB7IHVzZUlzSG92ZXJlZCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3JlYWN0RXh0L3VzZUlzSG92ZXJlZFwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBSRiBmcm9tIFwicmVhY3RmbG93XCI7XG5pbXBvcnQgeyB1cGRhdGVGbG93RWxlbWVudCwgdXBkYXRlTGFuZSwgdXBkYXRlVGV4dEFubm90YXRpb24gfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL3JlbmFtZU5vZGVcIjtcbmltcG9ydCB7IE5vcm1hbGl6ZWQgfSBmcm9tIFwiLi4vLi4vbm9ybWFsaXphdGlvbi9ub3JtYWxpemVcIjtcbmltcG9ydCB7IHVzZUJwbW5FZGl0b3JTdG9yZSwgdXNlQnBtbkVkaXRvclN0b3JlQXBpIH0gZnJvbSBcIi4uLy4uL3N0b3JlL1N0b3JlQ29udGV4dFwiO1xuaW1wb3J0IHtcbiAgQWN0aXZpdHlOb2RlTWFya2VyLFxuICBCUE1OX09VVEdPSU5HX1NUUlVDVFVSRSxcbiAgQnBtbkRpYWdyYW1FZGdlRGF0YSxcbiAgQnBtbkRpYWdyYW1Ob2RlRGF0YSxcbiAgYnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmcsXG4gIGJwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nLFxuICBCcG1uTm9kZVR5cGUsXG4gIEVER0VfVFlQRVMsXG4gIE1JTl9OT0RFX1NJWkVTLFxuICBOT0RFX1RZUEVTLFxufSBmcm9tIFwiLi4vQnBtbkRpYWdyYW1Eb21haW5cIjtcbmltcG9ydCB7IGdldE5vZGVMYWJlbFBvc2l0aW9uLCB1c2VOb2RlU3R5bGUgfSBmcm9tIFwiLi9Ob2RlU3R5bGVcIjtcbmltcG9ydCB7XG4gIERhdGFPYmplY3ROb2RlU3ZnLFxuICBFbmRFdmVudE5vZGVTdmcsXG4gIEdhdGV3YXlOb2RlU3ZnLFxuICBHcm91cE5vZGVTdmcsXG4gIEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnLFxuICBJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZVN2ZyxcbiAgTGFuZU5vZGVTdmcsXG4gIE5PREVfQ09MT1JTLFxuICBTdGFydEV2ZW50Tm9kZVN2ZyxcbiAgU3ViUHJvY2Vzc05vZGVTdmcsXG4gIFRhc2tOb2RlU3ZnLFxuICBUZXh0QW5ub3RhdGlvbk5vZGVTdmcsXG4gIFVua25vd25Ob2RlU3ZnLFxufSBmcm9tIFwiLi9Ob2RlU3Znc1wiO1xuaW1wb3J0IHsgTm9kZU1vcnBoaW5nUGFuZWwgfSBmcm9tIFwiLi9tb3JwaGluZy9Ob2RlTW9ycGhpbmdQYW5lbFwiO1xuaW1wb3J0IHsgdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zXCI7XG5pbXBvcnQgeyBVbnBhY2tlZCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3RzRXh0L3RzRXh0XCI7XG5pbXBvcnQgeyB1c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucyB9IGZyb20gXCIuL21vcnBoaW5nL3VzZUdhdGV3YXlOb2RlTW9ycGhpbmdBY3Rpb25zXCI7XG5pbXBvcnQgeyBFbGVtZW50RmlsdGVyIH0gZnJvbSBcIkBraWUtdG9vbHMveG1sLXBhcnNlci10cy9kaXN0L2VsZW1lbnRGaWx0ZXJcIjtcbmltcG9ydCB7IHVzZVRhc2tOb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlVGFza05vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IHVzZVN1YlByb2Nlc3NOb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlU3ViUHJvY2Vzc05vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnNcIjtcblxuZXhwb3J0IGNvbnN0IFN0YXJ0RXZlbnROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBzdGFydEV2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCwgcGFyZW50WHlGbG93Tm9kZSB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdFN0YXJ0RXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJzdGFydEV2ZW50XCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCBbaXNJY29uRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMoc3RhcnRFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+XG4gICAgICAgIHBhcmVudFh5Rmxvd05vZGU/LnR5cGUgPT09IE5PREVfVFlQRVMuc3ViUHJvY2Vzc1xuICAgICAgICAgID8gbmV3IFNldChbXCJub25lXCIsIFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIsIFwibGlua0V2ZW50RGVmaW5pdGlvblwiLCBcInRlcm1pbmF0ZUV2ZW50RGVmaW5pdGlvblwiXSlcbiAgICAgICAgICA6IG5ldyBTZXQoW1xuICAgICAgICAgICAgICBcImVycm9yRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiZXNjYWxhdGlvbkV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNhbmNlbEV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNvbXBlbnNhdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJsaW5rRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICBdKSxcbiAgICAgIFtwYXJlbnRYeUZsb3dOb2RlPy50eXBlXVxuICAgICk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8U3RhcnRFdmVudE5vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgdmFyaWFudD17c3RhcnRFdmVudC5ldmVudERlZmluaXRpb24/LlswXT8uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tdGFzay1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLXRhc2stbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtzdGFydEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5zdGFydEV2ZW50XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnN0YXJ0RXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0ljb25FeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN0YXJ0RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN0YXJ0RXZlbnQuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17c3RhcnRFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhzdGFydEV2ZW50W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNJY29uRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17c3RhcnRFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e3N0YXJ0RXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBJbnRlcm1lZGlhdGVDYXRjaEV2ZW50Tm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICB8IChOb3JtYWxpemVkPEJQTU4yMF9fdEludGVybWVkaWF0ZUNhdGNoRXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJpbnRlcm1lZGlhdGVDYXRjaEV2ZW50XCIgfSlcbiAgICAgIHwgKE5vcm1hbGl6ZWQ8QlBNTjIwX190Qm91bmRhcnlFdmVudD4gJiB7IF9fJCRlbGVtZW50OiBcImJvdW5kYXJ5RXZlbnRcIiB9KVxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzSWNvbkV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zKGludGVybWVkaWF0ZUNhdGNoRXZlbnQpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oXG4gICAgICAoKSA9PlxuICAgICAgICBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50Ll9fJCRlbGVtZW50ID09PSBcImludGVybWVkaWF0ZUNhdGNoRXZlbnRcIlxuICAgICAgICAgID8gbmV3IFNldChbXG4gICAgICAgICAgICAgIFwibm9uZVwiLFxuICAgICAgICAgICAgICBcImVycm9yRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiZXNjYWxhdGlvbkV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNvbXBlbnNhdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJjYW5jZWxFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJ0ZXJtaW5hdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgOiBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50Ll9fJCRlbGVtZW50ID09PSBcImJvdW5kYXJ5RXZlbnRcIlxuICAgICAgICAgICAgPyBuZXcgU2V0KFtcIm5vbmVcIiwgXCJsaW5rRXZlbnREZWZpbml0aW9uXCIsIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCJdKVxuICAgICAgICAgICAgOiBuZXcgU2V0KCksXG4gICAgICBbaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5fXyQkZWxlbWVudF1cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHZhcmlhbnQ9e2ludGVybWVkaWF0ZUNhdGNoRXZlbnQuZXZlbnREZWZpbml0aW9uPy5bMF0uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0taW50ZXJtZWRpYXRlLWNhdGNoLWV2ZW50LW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtaW50ZXJtZWRpYXRlLWNhdGNoLWV2ZW50LW5vZGVgfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17aWR9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc0ljb25FeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc0ljb25FeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzSWNvbkV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdLl9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGludGVybWVkaWF0ZUNhdGNoRXZlbnRbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmICFpc0ljb25FeHBhbmRlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17aW50ZXJtZWRpYXRlQ2F0Y2hFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBpbnRlcm1lZGlhdGVUaHJvd0V2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdEludGVybWVkaWF0ZVRocm93RXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJpbnRlcm1lZGlhdGVUaHJvd0V2ZW50XCIgfT5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzSWNvbkV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zKGludGVybWVkaWF0ZVRocm93RXZlbnQpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oXG4gICAgICAoKSA9PlxuICAgICAgICBuZXcgU2V0KFtcbiAgICAgICAgICBcInRpbWVyRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJlcnJvckV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgIFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJjb25kaXRpb25hbEV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgIF0pLFxuICAgICAgW11cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHZhcmlhbnQ9e2ludGVybWVkaWF0ZVRocm93RXZlbnQuZXZlbnREZWZpbml0aW9uPy5bMF0/Ll9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWludGVybWVkaWF0ZS10aHJvdy1ldmVudC1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLWludGVybWVkaWF0ZS10aHJvdy1ldmVudC1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2lkfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0ljb25FeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17aW50ZXJtZWRpYXRlVGhyb3dFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhpbnRlcm1lZGlhdGVUaHJvd0V2ZW50W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNJY29uRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17aW50ZXJtZWRpYXRlVGhyb3dFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2ludGVybWVkaWF0ZVRocm93RXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBFbmRFdmVudE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGVuZEV2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdEVuZEV2ZW50PiAmIHsgX18kJGVsZW1lbnQ6IFwiZW5kRXZlbnRcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IFtpc0ljb25FeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZUV2ZW50Tm9kZU1vcnBoaW5nQWN0aW9ucyhlbmRFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+IG5ldyBTZXQoW1widGltZXJFdmVudERlZmluaXRpb25cIiwgXCJjb25kaXRpb25hbEV2ZW50RGVmaW5pdGlvblwiLCBcImxpbmtFdmVudERlZmluaXRpb25cIl0pLFxuICAgICAgW11cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEVuZEV2ZW50Tm9kZVN2Z1xuICAgICAgICAgICAgey4uLm5vZGVEaW1lbnNpb25zfVxuICAgICAgICAgICAgeD17MH1cbiAgICAgICAgICAgIHk9ezB9XG4gICAgICAgICAgICB2YXJpYW50PXtlbmRFdmVudC5ldmVudERlZmluaXRpb24/LlswXT8uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgICBzdHJva2VXaWR0aD17Nn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1lbmQtZXZlbnQtbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1lbmQtZXZlbnQtbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtpZH1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzSWNvbkV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzSWNvbkV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZW5kRXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZW5kRXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0ljb25FeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLmVuZEV2ZW50LmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy5lbmRFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtlbmRFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhlbmRFdmVudFtcIkBfbmFtZVwiXSB8fCBpc0VkaXRpbmdMYWJlbCkgJiYgIWlzSWNvbkV4cGFuZGVkICYmIChcbiAgICAgICAgICAgIDxOb2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5hbWU9e2VuZEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17ZW5kRXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBUYXNrTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogdGFzaywgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICBOb3JtYWxpemVkPFxuICAgICAgICBFbGVtZW50RmlsdGVyPFxuICAgICAgICAgIFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJmbG93RWxlbWVudFwiXT4+LFxuICAgICAgICAgIFwidGFza1wiIHwgXCJzY3JpcHRUYXNrXCIgfCBcInNlcnZpY2VUYXNrXCIgfCBcImJ1c2luZXNzUnVsZVRhc2tcIiB8IFwidXNlclRhc2tcIiB8IFwiY2FsbEFjdGl2aXR5XCJcbiAgICAgICAgPlxuICAgICAgPlxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMgPSB1c2VCcG1uRWRpdG9yU3RvcmUoKHMpID0+IHMuZGlhZ3JhbS5vdmVybGF5cy5lbmFibGVDdXN0b21Ob2RlU3R5bGVzKTtcbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IHsgZm9udENzc1Byb3BlcnRpZXMgfSA9IHVzZU5vZGVTdHlsZSh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsXG4gICAgICBpc0VuYWJsZWQ6IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMsXG4gICAgfSk7XG5cbiAgICBjb25zdCBpY29ucyA9IHVzZUFjdGl2aXR5SWNvbnModGFzayk7XG5cbiAgICBjb25zdCBbaXNJY29uRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VUYXNrTm9kZU1vcnBoaW5nQWN0aW9ucyh0YXNrKTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KCgpID0+IG5ldyBTZXQoKSwgW10pO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPFRhc2tOb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXt0YXNrLl9fJCRlbGVtZW50ID09PSBcImNhbGxBY3Rpdml0eVwiID8gNSA6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgIG1hcmtlcnM9e2ljb25zfVxuICAgICAgICAgICAgdmFyaWFudD17dGFzay5fXyQkZWxlbWVudH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS10YXNrLW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtdGFzay1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e3Rhc2tbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc0ljb25FeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICBuYW1lPXt0YXNrW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgdmFsdWU9e3Rhc2tbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyAuLi5mb250Q3NzUHJvcGVydGllcywgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICB7c2hvdWxkQWN0TGlrZUhvdmVyZWQgJiYgKFxuICAgICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy50YXNrfVxuICAgICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy50YXNrXS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnRhc2tdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0ljb25FeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLnRhc2suZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLnRhc2suYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17dGFzay5fXyQkZWxlbWVudH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBTdWJQcm9jZXNzTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogc3ViUHJvY2Vzcywgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICBOb3JtYWxpemVkPEJQTU4yMF9fdFN1YlByb2Nlc3M+ICYgeyBfXyQkZWxlbWVudDogXCJ0cmFuc2FjdGlvblwiIHwgXCJhZEhvY1N1YlByb2Nlc3NcIiB8IFwic3ViUHJvY2Vzc1wiIH1cbiAgICA+XG4gID4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxTVkdSZWN0RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBlbmFibGVDdXN0b21Ob2RlU3R5bGVzID0gdXNlQnBtbkVkaXRvclN0b3JlKChzKSA9PiBzLmRpYWdyYW0ub3ZlcmxheXMuZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyk7XG4gICAgY29uc3QgaXNPbmx5U2VsZWN0ZWROb2RlID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IHMueHlGbG93UmVhY3RLaWVEaWFncmFtLl9zZWxlY3RlZE5vZGVzLmxlbmd0aCA9PT0gMSAmJiBzZWxlY3RlZFxuICAgICk7XG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCB7IGZvbnRDc3NQcm9wZXJ0aWVzIH0gPSB1c2VOb2RlU3R5bGUoe1xuICAgICAgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLFxuICAgICAgaXNFbmFibGVkOiBlbmFibGVDdXN0b21Ob2RlU3R5bGVzLFxuICAgIH0pO1xuXG4gICAgY29uc3QgaWNvbnMgPSB1c2VBY3Rpdml0eUljb25zKHN1YlByb2Nlc3MpO1xuXG4gICAgY29uc3QgW2lzSWNvbkV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlU3ViUHJvY2Vzc05vZGVNb3JwaGluZ0FjdGlvbnMoc3ViUHJvY2Vzcyk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PigoKSA9PiBuZXcgU2V0KCksIFtdKTtcbiAgICB1c2VLZXlib2FyZFNob3J0Y3V0c0Zvck1vcnBoaW5nQWN0aW9ucyhyZWYsIG1vcnBoaW5nQWN0aW9ucywgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9PlxuICAgICAgICAgIDxTdWJQcm9jZXNzTm9kZVN2Z1xuICAgICAgICAgICAgey4uLm5vZGVEaW1lbnNpb25zfVxuICAgICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIGljb25zPXtpY29uc31cbiAgICAgICAgICAgIHZhcmlhbnQ9e1xuICAgICAgICAgICAgICBzdWJQcm9jZXNzLl9fJCRlbGVtZW50ID09PSBcInRyYW5zYWN0aW9uXCJcbiAgICAgICAgICAgICAgICA/IFwidHJhbnNhY3Rpb25cIlxuICAgICAgICAgICAgICAgIDogc3ViUHJvY2Vzc1tcIkBfdHJpZ2dlcmVkQnlFdmVudFwiXVxuICAgICAgICAgICAgICAgICAgPyBcImV2ZW50XCJcbiAgICAgICAgICAgICAgICAgIDogc3ViUHJvY2Vzcy5sb29wQ2hhcmFjdGVyaXN0aWNzPy5fXyQkZWxlbWVudCA9PT0gXCJtdWx0aUluc3RhbmNlTG9vcENoYXJhY3RlcmlzdGljc1wiXG4gICAgICAgICAgICAgICAgICAgID8gXCJtdWx0aS1pbnN0YW5jZVwiXG4gICAgICAgICAgICAgICAgICAgIDogXCJvdGhlclwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tc3ViLXByb2Nlc3Mtbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1zdWItcHJvY2Vzcy1ub2RlYH1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e3N1YlByb2Nlc3NbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc0ljb25FeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgIG5hbWU9e3N1YlByb2Nlc3NbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICB2YWx1ZT17c3ViUHJvY2Vzc1tcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IC4uLmZvbnRDc3NQcm9wZXJ0aWVzLCB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIHtpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nICYmIChcbiAgICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMuc3ViUHJvY2Vzc31cbiAgICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzSWNvbkV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIGlzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnN1YlByb2Nlc3NdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIGlzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzSWNvbkV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuc3ViUHJvY2Vzcy5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuc3ViUHJvY2Vzcy5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtcbiAgICAgICAgICAgICAgICBzdWJQcm9jZXNzW1wiQF90cmlnZ2VyZWRCeUV2ZW50XCJdID09PSB0cnVlXG4gICAgICAgICAgICAgICAgICA/IFwiZXZlbnRTdWJQcm9jZXNzXCJcbiAgICAgICAgICAgICAgICAgIDogc3ViUHJvY2Vzcy5sb29wQ2hhcmFjdGVyaXN0aWNzPy5fXyQkZWxlbWVudCA9PT0gXCJtdWx0aUluc3RhbmNlTG9vcENoYXJhY3RlcmlzdGljc1wiXG4gICAgICAgICAgICAgICAgICAgID8gXCJtdWx0aUluc3RhbmNlU3ViUHJvY2Vzc1wiXG4gICAgICAgICAgICAgICAgICAgIDogc3ViUHJvY2Vzcy5fXyQkZWxlbWVudFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgR2F0ZXdheU5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGdhdGV3YXksIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxcbiAgICBCcG1uRGlhZ3JhbU5vZGVEYXRhPFxuICAgICAgTm9ybWFsaXplZDxcbiAgICAgICAgRWxlbWVudEZpbHRlcjxcbiAgICAgICAgICBVbnBhY2tlZDxOb25OdWxsYWJsZTxCUE1OMjBfX3RQcm9jZXNzW1wiZmxvd0VsZW1lbnRcIl0+PixcbiAgICAgICAgICBcImV4Y2x1c2l2ZUdhdGV3YXlcIiB8IFwiaW5jbHVzaXZlR2F0ZXdheVwiIHwgXCJwYXJhbGxlbEdhdGV3YXlcIiB8IFwiZXZlbnRCYXNlZEdhdGV3YXlcIiB8IFwiY29tcGxleEdhdGV3YXlcIlxuICAgICAgICA+XG4gICAgICA+XG4gICAgPlxuICA+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCBbaXNJY29uRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucyhnYXRld2F5KTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KCgpID0+IG5ldyBTZXQoKSwgW10pO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEdhdGV3YXlOb2RlU3ZnIHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gdmFyaWFudD17Z2F0ZXdheS5fXyQkZWxlbWVudH0gLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tZ2F0ZXdheS1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLWdhdGV3YXktbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtnYXRld2F5W1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNJY29uRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5nYXRld2F5XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmdhdGV3YXldLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0ljb25FeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLmdhdGV3YXkuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLmdhdGV3YXkuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17Z2F0ZXdheS5fXyQkZWxlbWVudH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhnYXRld2F5W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNJY29uRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17Z2F0ZXdheVtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2dhdGV3YXlbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBEYXRhT2JqZWN0Tm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogZGF0YU9iamVjdCwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPEJwbW5EaWFncmFtTm9kZURhdGE8Tm9ybWFsaXplZDxCUE1OMjBfX3REYXRhT2JqZWN0PiAmIHsgX18kJGVsZW1lbnQ6IFwiZGF0YU9iamVjdFwiIH0+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgLy8gVGhpcyBpcyB1c2VkIHRvIG1vZGlmeSBhIGNzcyBmcm9tIGEgOmJlZm9yZSBlbGVtZW50LlxuICAgIC8vIFRoZSAtLWhlaWdodCBpcyBhIGNzcyB2YXIgd2hpY2ggaXMgdXNlZCBieSB3aGVuIHRoaXMgbm9kZSBpcyBzZWxlY3RlZCBjbGFzc1xuICAgIGNvbnN0IFtub2RlSGVpZ2h0LCBzZXROb2RlSGVpZ2h0XSA9IFJlYWN0LnVzZVN0YXRlPG51bWJlcj4oMCk7XG4gICAgY29uc3Qgc3R5bGUgPSB1c2VNZW1vPFJlYWN0LkNTU1Byb3BlcnRpZXM+KFxuICAgICAgKCkgPT4gKHtcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgIG91dGxpbmU6IFwibm9uZVwiLFxuICAgICAgICBcIi0tc2VsZWN0ZWQtZGF0YS1vYmplY3Qtbm9kZS1zaGFwZS0taGVpZ2h0XCI6IGAke25vZGVEaW1lbnNpb25zLmhlaWdodCArIDIwICsgMjYgKyAoaXNFZGl0aW5nTGFiZWwgPyAyMCA6IG5vZGVIZWlnaHQgPz8gMCl9cHhgLFxuICAgICAgfSksXG4gICAgICBbbm9kZURpbWVuc2lvbnMsIGlzRWRpdGluZ0xhYmVsLCBub2RlSGVpZ2h0XVxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9PlxuICAgICAgICAgIDxEYXRhT2JqZWN0Tm9kZVN2ZyB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IHNob3dBcnJvdz17ZmFsc2V9IHNob3dGb2xkZWRQYWdlPXt0cnVlfSAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tZGF0YS1vYmplY3Qtbm9kZS1jb250ZW50ICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17ZGF0YU9iamVjdFtcIkBfbmFtZVwiXX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAge3Nob3VsZEFjdExpa2VIb3ZlcmVkICYmIChcbiAgICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMuZGF0YU9iamVjdH1cbiAgICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5kYXRhT2JqZWN0XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmRhdGFPYmplY3RdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGRhdGFPYmplY3RbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmIChcbiAgICAgICAgICAgIDxOb2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5hbWU9e2RhdGFPYmplY3RbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtkYXRhT2JqZWN0W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgICAgIHNldExhYmVsSGVpZ2h0PXtzZXROb2RlSGVpZ2h0fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Ob2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgR3JvdXBOb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBncm91cCwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPEJwbW5EaWFncmFtTm9kZURhdGE8Tm9ybWFsaXplZDxCUE1OMjBfX3RHcm91cD4gJiB7IF9fJCRlbGVtZW50OiBcImdyb3VwXCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8U1ZHUmVjdEVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG4gICAgY29uc3QgcmVhY3RGbG93ID0gUkYudXNlUmVhY3RGbG93PEJwbW5EaWFncmFtTm9kZURhdGEsIEJwbW5EaWFncmFtRWRnZURhdGE+KCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMsIHRydWUpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIC8vIFNlbGVjdCBub2RlcyB0aGF0IGFyZSB2aXN1YWxseSBlbnRpcmVseSBpbnNpZGUgdGhlIGdyb3VwLlxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBvbkRvdWJsZUNsaWNrID0gKCkgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgc3RhdGUueHlGbG93UmVhY3RLaWVEaWFncmFtLl9zZWxlY3RlZE5vZGVzID0gcmVhY3RGbG93LmdldE5vZGVzKCkuZmxhdE1hcCgobikgPT5cbiAgICAgICAgICAgIGdldENvbnRhaW5tZW50UmVsYXRpb25zaGlwKHtcbiAgICAgICAgICAgICAgYm91bmRzOiBuLmRhdGEuc2hhcGVbXCJkYzpCb3VuZHNcIl0hLFxuICAgICAgICAgICAgICBjb250YWluZXI6IHNoYXBlW1wiZGM6Qm91bmRzXCJdISxcbiAgICAgICAgICAgICAgc25hcEdyaWQ6IHN0YXRlLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5zbmFwR3JpZCxcbiAgICAgICAgICAgICAgY29udGFpbmVyTWluU2l6ZXM6IE1JTl9OT0RFX1NJWkVTW05PREVfVFlQRVMuZ3JvdXBdLFxuICAgICAgICAgICAgICBib3VuZHNNaW5TaXplczogTUlOX05PREVfU0laRVNbbi50eXBlIGFzIEJwbW5Ob2RlVHlwZV0sXG4gICAgICAgICAgICAgIGJvcmRlckFsbG93YW5jZUluUHg6IDAsIC8vIFdlIG9ubHkgY2FyZSBhYm91dCBub2RlcyB0aGF0IGFyZSBjb21wbGV0ZWx5SW5zaWRlIHRoZSBHcm91cCBub2RlLlxuICAgICAgICAgICAgfSkuaXNDb21wbGV0ZWx5SW5zaWRlXG4gICAgICAgICAgICAgID8gW24uaWRdXG4gICAgICAgICAgICAgIDogW11cbiAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IHIgPSByZWYuY3VycmVudDtcbiAgICAgIHI/LmFkZEV2ZW50TGlzdGVuZXIoXCJkYmxjbGlja1wiLCBvbkRvdWJsZUNsaWNrKTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHI/LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJkYmxjbGlja1wiLCBvbkRvdWJsZUNsaWNrKTtcbiAgICAgIH07XG4gICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaSwgcmVhY3RGbG93LCBzaGFwZV0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfWB9PlxuICAgICAgICAgIDxHcm91cE5vZGVTdmcgcmVmPXtyZWZ9IHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gc3Ryb2tlV2lkdGg9ezN9IC8+XG4gICAgICAgIDwvc3ZnPlxuXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUga2llLWJwbW4tZWRpdG9yLS1ncm91cC1ub2RlICR7Y2xhc3NOYW1lfWB9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtpZH1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuXG4gICAgICAgICAge3NlbGVjdGVkICYmICFkcmFnZ2luZyAmJiAoXG4gICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMuZ3JvdXB9XG4gICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG5cbiAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzZWxlY3RlZCAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZ3JvdXBdLm5vZGVzfVxuICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmdyb3VwXS5lZGdlc31cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgTGFuZU5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGxhbmUsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190TGFuZT4gJiB7IF9fJCRlbGVtZW50OiBcImxhbmVcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxTVkdSZWN0RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc09ubHlTZWxlY3RlZE5vZGUgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uX3NlbGVjdGVkTm9kZXMubGVuZ3RoID09PSAxICYmIHNlbGVjdGVkXG4gICAgKTtcbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVMYW5lKHsgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsIG5ld0xhbmU6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSwgaWQgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9PlxuICAgICAgICAgIDxMYW5lTm9kZVN2ZyB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IHJlZj17cmVmfSAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1sYW5lLW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtbGFuZS1ub2RlYH1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2xhbmVbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIGlzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgbmFtZT17bGFuZVtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgIHZhbHVlPXtsYW5lW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICB7aXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZyAmJiAoXG4gICAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLmxhbmV9XG4gICAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIGlzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5sYW5lXS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmxhbmVdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IFRleHRBbm5vdGF0aW9uTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogdGV4dEFubm90YXRpb24sIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190VGV4dEFubm90YXRpb24+ICYgeyBfXyQkZWxlbWVudDogXCJ0ZXh0QW5ub3RhdGlvblwiIH0+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMgPSB1c2VCcG1uRWRpdG9yU3RvcmUoKHMpID0+IHMuZGlhZ3JhbS5vdmVybGF5cy5lbmFibGVDdXN0b21Ob2RlU3R5bGVzKTtcbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHtcbiAgICAgIG5vZGVUeXBlOiB0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uLFxuICAgICAgc2hhcGUsXG4gICAgICBNSU5fTk9ERV9TSVpFUyxcbiAgICB9KTtcblxuICAgIGNvbnN0IHNldFRleHQgPSB1c2VDYWxsYmFjayhcbiAgICAgIChuZXdUZXh0OiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZVRleHRBbm5vdGF0aW9uKHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICBuZXdUZXh0QW5ub3RhdGlvbjogeyB0ZXh0OiB7IF9fJCR0ZXh0OiBuZXdUZXh0IH0gfSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IHsgZm9udENzc1Byb3BlcnRpZXMgfSA9IHVzZU5vZGVTdHlsZSh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsXG4gICAgICBpc0VuYWJsZWQ6IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMsXG4gICAgfSk7XG5cbiAgICBjb25zdCBjb250ZW50ID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICByZXR1cm4gU3RyaW5nKHRleHRBbm5vdGF0aW9uLnRleHQ/Ll9fJCR0ZXh0KSB8fCBwYXJzZUJwbW4yMERyb29sczEwTWV0YURhdGEodGV4dEFubm90YXRpb24pLmdldChcImVsZW1lbnRuYW1lXCIpO1xuICAgIH0sIFt0ZXh0QW5ub3RhdGlvbl0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfWB9PlxuICAgICAgICAgIDxUZXh0QW5ub3RhdGlvbk5vZGVTdmcgey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSAvPlxuICAgICAgICA8L3N2Zz5cblxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZSBraWUtYnBtbi1lZGl0b3ItLXRleHQtYW5ub3RhdGlvbi1ub2RlICR7Y2xhc3NOYW1lfWB9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtTdHJpbmcodGV4dEFubm90YXRpb24udGV4dCl9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAvPlxuXG4gICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICBuYW1lPXtjb250ZW50fVxuICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgIHZhbHVlPXtjb250ZW50fVxuICAgICAgICAgICAgb25DaGFuZ2U9e3NldFRleHR9XG4gICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyAuLi5mb250Q3NzUHJvcGVydGllcywgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgLz5cblxuICAgICAgICAgIHtzaG91bGRBY3RMaWtlSG92ZXJlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMudGV4dEFubm90YXRpb259XG4gICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG5cbiAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0ubm9kZXN9XG4gICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dLmVkZ2VzfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBVbmtub3duTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7IGRhdGE6IHsgc2hhcGUsIHNoYXBlSW5kZXggfSwgc2VsZWN0ZWQsIGRyYWdnaW5nLCB6SW5kZXgsIHR5cGUsIGlkIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPGFueT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy51bmtub3duLFxuICAgICAgc2hhcGUsXG4gICAgICBNSU5fTk9ERV9TSVpFUyxcbiAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX1gfT5cbiAgICAgICAgICA8VW5rbm93bk5vZGVTdmcgey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSAvPlxuICAgICAgICA8L3N2Zz5cblxuICAgICAgICA8UkYuSGFuZGxlIGtleT17XCJ1bmtub3duXCJ9IGlkPXtcInVua25vd25cIn0gdHlwZT17XCJzb3VyY2VcIn0gc3R5bGU9e3sgb3BhY2l0eTogMCB9fSBwb3NpdGlvbj17UkYuUG9zaXRpb24uVG9wfSAvPlxuXG4gICAgICAgIDxkaXZcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUga2llLWJwbW4tZWRpdG9yLS11bmtub3duLW5vZGUgJHtjbGFzc05hbWV9YH1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAvPlxuXG4gICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICBuYW1lPXt1bmRlZmluZWR9XG4gICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy51bmtub3duIH0pfVxuICAgICAgICAgICAgaXNFZGl0aW5nPXtmYWxzZX1cbiAgICAgICAgICAgIHNldEVkaXRpbmc9eygpID0+IHt9fVxuICAgICAgICAgICAgdmFsdWU9e2A/IGB9XG4gICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4ge319XG4gICAgICAgICAgICBza2lwVmFsaWRhdGlvbj17ZmFsc2V9XG4gICAgICAgICAgICB2YWxpZGF0ZT17dXNlQ2FsbGJhY2soKHZhbHVlKSA9PiB0cnVlLCBbXSl9XG4gICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUFjdGl2aXR5SWNvbnMoXG4gIGFjdGl2aXR5OlxuICAgIHwgKE5vcm1hbGl6ZWQ8QlBNTjIwX190U3ViUHJvY2Vzcz4gJiB7IF9fJCRlbGVtZW50OiBcInRyYW5zYWN0aW9uXCIgfCBcImFkSG9jU3ViUHJvY2Vzc1wiIHwgXCJzdWJQcm9jZXNzXCIgfSlcbiAgICB8IChOb3JtYWxpemVkPEJQTU4yMF9fdFRhc2s+ICYge1xuICAgICAgICBfXyQkZWxlbWVudDogXCJ0YXNrXCIgfCBcInNlcnZpY2VUYXNrXCIgfCBcInVzZXJUYXNrXCIgfCBcImJ1c2luZXNzUnVsZVRhc2tcIiB8IFwic2NyaXB0VGFza1wiIHwgXCJjYWxsQWN0aXZpdHlcIjtcbiAgICAgIH0pXG4pIHtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IGljb25zOiBBY3Rpdml0eU5vZGVNYXJrZXJbXSA9IFtdO1xuICAgIGlmIChhY3Rpdml0eS5fXyQkZWxlbWVudCA9PT0gXCJhZEhvY1N1YlByb2Nlc3NcIikge1xuICAgICAgaWNvbnMucHVzaChBY3Rpdml0eU5vZGVNYXJrZXIuQWRIb2NTdWJQcm9jZXNzKTtcbiAgICB9XG5cbiAgICBpZiAoYWN0aXZpdHlbXCJAX2lzRm9yQ29tcGVuc2F0aW9uXCJdKSB7XG4gICAgICBpY29ucy5wdXNoKEFjdGl2aXR5Tm9kZU1hcmtlci5Db21wZW5zYXRpb24pO1xuICAgIH1cblxuICAgIGlmIChhY3Rpdml0eS5sb29wQ2hhcmFjdGVyaXN0aWNzPy5fXyQkZWxlbWVudCA9PT0gXCJtdWx0aUluc3RhbmNlTG9vcENoYXJhY3RlcmlzdGljc1wiKSB7XG4gICAgICBpY29ucy5wdXNoKFxuICAgICAgICBhY3Rpdml0eS5sb29wQ2hhcmFjdGVyaXN0aWNzW1wiQF9pc1NlcXVlbnRpYWxcIl1cbiAgICAgICAgICA/IEFjdGl2aXR5Tm9kZU1hcmtlci5NdWx0aUluc3RhbmNlU2VxdWVudGlhbFxuICAgICAgICAgIDogQWN0aXZpdHlOb2RlTWFya2VyLk11bHRpSW5zdGFuY2VQYXJhbGxlbFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoYWN0aXZpdHkubG9vcENoYXJhY3RlcmlzdGljcz8uX18kJGVsZW1lbnQgPT09IFwic3RhbmRhcmRMb29wQ2hhcmFjdGVyaXN0aWNzXCIpIHtcbiAgICAgIGljb25zLnB1c2goQWN0aXZpdHlOb2RlTWFya2VyLkxvb3ApO1xuICAgIH1cblxuICAgIGlmIChhY3Rpdml0eS5fXyQkZWxlbWVudCA9PT0gXCJjYWxsQWN0aXZpdHlcIikge1xuICAgICAgaWNvbnMucHVzaChBY3Rpdml0eU5vZGVNYXJrZXIuQ29sbGFwc2VkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaWNvbnM7XG4gIH0sIFthY3Rpdml0eV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTm9kZUxhYmVsQXRUaGVCb3R0b20oeyBjaGlsZHJlbiB9OiBSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjx7fT4pIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBzdHlsZT17e1xuICAgICAgICBmb250U2l6ZTogXCIwLjhlbVwiLFxuICAgICAgICBtYXJnaW5Ub3A6IFwiMTBweFwiLFxuICAgICAgICBib3JkZXJSYWRpdXM6IFwiNXB4XCIsXG4gICAgICAgIHBhZGRpbmc6IFwiNXB4XCIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDAsMCwwLDAuMDIpXCIsXG4gICAgICAgIGJvcmRlcjogXCIxcHggc29saWQgcmdiYSgwLDAsMCwwLjIpXCIsXG4gICAgICAgIGJveFNoYWRvdzogXCJyZ2JhKDAsIDAsIDAsIDAuNCkgMnB4IDJweCA2cHhcIixcbiAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IFwiYmx1cig0cHgpXCIsXG4gICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgd2lkdGg6IFwiY2FsYygxMDAlICsgMjBweClcIixcbiAgICAgICAgbWFyZ2luTGVmdDogXCItMTBweFwiLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59XG4iLCIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEJQTU4yMF9fdFByb2Nlc3MgfSBmcm9tIFwiQGtpZS10b29scy9icG1uLW1hcnNoYWxsZXIvc3JjL3NjaGVtYXMvYnBtbi0yXzAvdHMtZ2VuL3R5cGVzXCI7XG5pbXBvcnQgeyBFbGVtZW50RmlsdGVyIH0gZnJvbSBcIkBraWUtdG9vbHMveG1sLXBhcnNlci10cy9kaXN0L2VsZW1lbnRGaWx0ZXJcIjtcbmltcG9ydCB7IFVucGFja2VkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvdHNFeHQvdHNFeHRcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB2aXNpdEZsb3dFbGVtZW50c0FuZEFydGlmYWN0cyB9IGZyb20gXCIuLi8uLi8uLi9tdXRhdGlvbnMvX2VsZW1lbnRWaXNpdG9yXCI7XG5pbXBvcnQgeyBhZGRPckdldFByb2Nlc3NBbmREaWFncmFtRWxlbWVudHMgfSBmcm9tIFwiLi4vLi4vLi4vbXV0YXRpb25zL2FkZE9yR2V0UHJvY2Vzc0FuZERpYWdyYW1FbGVtZW50c1wiO1xuaW1wb3J0IHsgTm9ybWFsaXplZCB9IGZyb20gXCIuLi8uLi8uLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHsgdXNlQnBtbkVkaXRvclN0b3JlQXBpIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3JlL1N0b3JlQ29udGV4dFwiO1xuaW1wb3J0IHsgR2F0ZXdheUljb24gfSBmcm9tIFwiLi4vTm9kZUljb25zXCI7XG5cbmV4cG9ydCB0eXBlIEdhdGV3YXkgPSBOb3JtYWxpemVkPFxuICBFbGVtZW50RmlsdGVyPFxuICAgIFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJmbG93RWxlbWVudFwiXT4+LFxuICAgIFwiZXhjbHVzaXZlR2F0ZXdheVwiIHwgXCJpbmNsdXNpdmVHYXRld2F5XCIgfCBcInBhcmFsbGVsR2F0ZXdheVwiIHwgXCJldmVudEJhc2VkR2F0ZXdheVwiIHwgXCJjb21wbGV4R2F0ZXdheVwiXG4gID5cbj47XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucyhnYXRld2F5OiBHYXRld2F5KSB7XG4gIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gIGNvbnN0IG1vcnBoR2F0ZXdheSA9IHVzZUNhbGxiYWNrKFxuICAgIChnYXRld2F5RWxlbWVudDogR2F0ZXdheVtcIl9fJCRlbGVtZW50XCJdKSA9PiB7XG4gICAgICAvLyAxIC0gUGFyYWxsZWxcbiAgICAgIC8vIDIgLSBFeGNsdXNpdmVcbiAgICAgIC8vIDMgLSBJbmNsdXNpdmVcbiAgICAgIC8vIDQgLSBFdmVudFxuICAgICAgLy8gNSAtIENvbXBsZXhcbiAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgocykgPT4ge1xuICAgICAgICBjb25zdCB7IHByb2Nlc3MgfSA9IGFkZE9yR2V0UHJvY2Vzc0FuZERpYWdyYW1FbGVtZW50cyh7XG4gICAgICAgICAgZGVmaW5pdGlvbnM6IHMuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICAgIHZpc2l0Rmxvd0VsZW1lbnRzQW5kQXJ0aWZhY3RzKHByb2Nlc3MsICh7IGFycmF5LCBpbmRleCwgb3duZXIsIGVsZW1lbnQgfSkgPT4ge1xuICAgICAgICAgIGlmIChlbGVtZW50W1wiQF9pZFwiXSA9PT0gZ2F0ZXdheVtcIkBfaWRcIl0gJiYgZWxlbWVudC5fXyQkZWxlbWVudCA9PT0gZ2F0ZXdheS5fXyQkZWxlbWVudCkge1xuICAgICAgICAgICAgYXJyYXlbaW5kZXhdID0ge1xuICAgICAgICAgICAgICBcIkBfaWRcIjogZWxlbWVudFtcIkBfaWRcIl0sIC8vIGtlZXBzIG9sZCBJRFxuICAgICAgICAgICAgICBcIkBfbmFtZVwiOiBlbGVtZW50W1wiQF9uYW1lXCJdLCAvLyBrZWVwcyBvbGQgTmFtZVxuICAgICAgICAgICAgICBfXyQkZWxlbWVudDogZ2F0ZXdheUVsZW1lbnQsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBXaWxsIHN0b3AgdmlzaXRpbmcuXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgZ2F0ZXdheV1cbiAgKTtcblxuICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAge1xuICAgICAgICBpY29uOiA8R2F0ZXdheUljb24gdmFyaWFudD17XCJwYXJhbGxlbEdhdGV3YXlcIn0gaXNJY29uPXt0cnVlfSAvPixcbiAgICAgICAga2V5OiBcIjFcIixcbiAgICAgICAgdGl0bGU6IFwiUGFyYWxsZWxcIixcbiAgICAgICAgaWQ6IFwicGFyYWxsZWxHYXRld2F5XCIsXG4gICAgICAgIGFjdGlvbjogKCkgPT4gbW9ycGhHYXRld2F5KFwicGFyYWxsZWxHYXRld2F5XCIpLFxuICAgICAgfSBhcyBjb25zdCxcbiAgICAgIHtcbiAgICAgICAgaWNvbjogPEdhdGV3YXlJY29uIHZhcmlhbnQ9e1wiZXhjbHVzaXZlR2F0ZXdheVwifSBpc0ljb249e3RydWV9IC8+LFxuICAgICAgICBrZXk6IFwiMlwiLFxuICAgICAgICB0aXRsZTogXCJFeGNsdXNpdmVcIixcbiAgICAgICAgaWQ6IFwiZXhjbHVzaXZlR2F0ZXdheVwiLFxuICAgICAgICBhY3Rpb246ICgpID0+IG1vcnBoR2F0ZXdheShcImV4Y2x1c2l2ZUdhdGV3YXlcIiksXG4gICAgICB9IGFzIGNvbnN0LFxuICAgICAge1xuICAgICAgICBpY29uOiA8R2F0ZXdheUljb24gdmFyaWFudD17XCJpbmNsdXNpdmVHYXRld2F5XCJ9IGlzSWNvbj17dHJ1ZX0gLz4sXG4gICAgICAgIGtleTogXCIzXCIsXG4gICAgICAgIHRpdGxlOiBcIkluY2x1c2l2ZVwiLFxuICAgICAgICBpZDogXCJpbmNsdXNpdmVHYXRld2F5XCIsXG4gICAgICAgIGFjdGlvbjogKCkgPT4gbW9ycGhHYXRld2F5KFwiaW5jbHVzaXZlR2F0ZXdheVwiKSxcbiAgICAgIH0gYXMgY29uc3QsXG4gICAgICB7XG4gICAgICAgIGljb246IDxHYXRld2F5SWNvbiB2YXJpYW50PXtcImV2ZW50QmFzZWRHYXRld2F5XCJ9IGlzSWNvbj17dHJ1ZX0gLz4sXG4gICAgICAgIGtleTogXCI0XCIsXG4gICAgICAgIHRpdGxlOiBcIkV2ZW50XCIsXG4gICAgICAgIGlkOiBcImV2ZW50QmFzZWRHYXRld2F5XCIsXG4gICAgICAgIGFjdGlvbjogKCkgPT4gbW9ycGhHYXRld2F5KFwiZXZlbnRCYXNlZEdhdGV3YXlcIiksXG4gICAgICB9IGFzIGNvbnN0LFxuICAgICAge1xuICAgICAgICBpY29uOiA8R2F0ZXdheUljb24gdmFyaWFudD17XCJjb21wbGV4R2F0ZXdheVwifSBpc0ljb249e3RydWV9IC8+LFxuICAgICAgICBrZXk6IFwiNVwiLFxuICAgICAgICB0aXRsZTogXCJDb21wbGV4XCIsXG4gICAgICAgIGlkOiBcImNvbXBsZXhHYXRld2F5XCIsXG4gICAgICAgIGFjdGlvbjogKCkgPT4gbW9ycGhHYXRld2F5KFwiY29tcGxleEdhdGV3YXlcIiksXG4gICAgICB9IGFzIGNvbnN0LFxuICAgIF07XG4gIH0sIFttb3JwaEdhdGV3YXldKTtcblxuICByZXR1cm4gbW9ycGhpbmdBY3Rpb25zO1xufVxuIiwiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQlBNTjIwX190RGVmaW5pdGlvbnMsIEJQTU4yMF9fdFVzZXJUYXNrIH0gZnJvbSBcIkBraWUtdG9vbHMvYnBtbi1tYXJzaGFsbGVyL2Rpc3Qvc2NoZW1hcy9icG1uLTJfMC90cy1nZW4vdHlwZXNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgTm9ybWFsaXplZCB9IGZyb20gXCIuLi8uLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHsgTmFtZURvY3VtZW50YXRpb25BbmRJZCB9IGZyb20gXCIuLi9uYW1lRG9jdW1lbnRhdGlvbkFuZElkL05hbWVEb2N1bWVudGF0aW9uQW5kSWRcIjtcbmltcG9ydCB7IEJpZGlyZWN0aW9uYWxBc3NpZ25tZW50c0Zvcm1TZWN0aW9uIH0gZnJvbSBcIi4uL2Fzc2lnbm1lbnRzL0Fzc2lnbm1lbnRzRm9ybVNlY3Rpb25cIjtcbmltcG9ydCB7IE9uRW50cnlBbmRFeGl0U2NyaXB0c0Zvcm1TZWN0aW9uIH0gZnJvbSBcIi4uL29uRW50cnlBbmRFeGl0U2NyaXB0cy9PbkVudHJ5QW5kRXhpdFNjcmlwdHNGb3JtU2VjdGlvblwiO1xuaW1wb3J0IHsgVGFza0ljb24gfSBmcm9tIFwiLi4vLi4vZGlhZ3JhbS9ub2Rlcy9Ob2RlSWNvbnNcIjtcbmltcG9ydCB7IFByb3BlcnRpZXNQYW5lbEhlYWRlckZvcm1TZWN0aW9uIH0gZnJvbSBcIi4vX1Byb3BlcnRpZXNQYW5lbEhlYWRlckZvcm1TZWN0aW9uXCI7XG5pbXBvcnQgeyBEaXZpZGVyIH0gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWNvcmUvZGlzdC9qcy9jb21wb25lbnRzL0RpdmlkZXJcIjtcbmltcG9ydCB7IEFzeW5jQ2hlY2tib3ggfSBmcm9tIFwiLi4vYXN5bmNDaGVja2JveC9Bc3luY0NoZWNrYm94XCI7XG5pbXBvcnQgeyBTbGFEdWVEYXRlSW5wdXQgfSBmcm9tIFwiLi4vc2xhRHVlRGF0ZS9TbGFEdWVEYXRlSW5wdXRcIjtcbmltcG9ydCB7IE11bHRpSW5zdGFuY2VDaGVja2JveCB9IGZyb20gXCIuLi9tdWx0aUluc3RhbmNlQ2hlY2tib3gvTXVsdGlJbnN0YW5jZUNoZWNrYm94XCI7XG5pbXBvcnQgeyBNdWx0aUluc3RhbmNlUHJvcGVydGllcyB9IGZyb20gXCIuLi9tdWx0aUluc3RhbmNlL011bHRpSW5zdGFuY2VQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgeyBBZGhvY0F1dG9zdGFydENoZWNrYm94IH0gZnJvbSBcIi4uL2FkaG9jQXV0b3N0YXJ0Q2hlY2tib3gvQWRob2NBdXRvc3RhcnRDaGVja2JveFwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtU2VjdGlvbiB9IGZyb20gXCJAcGF0dGVybmZseS9yZWFjdC1jb3JlL2Rpc3QvanMvY29tcG9uZW50cy9Gb3JtXCI7XG5pbXBvcnQgeyBUZXh0QXJlYSB9IGZyb20gXCJAcGF0dGVybmZseS9yZWFjdC1jb3JlL2Rpc3QvanMvY29tcG9uZW50cy9UZXh0QXJlYS9UZXh0QXJlYVwiO1xuaW1wb3J0IHsgdXNlQnBtbkVkaXRvclN0b3JlLCB1c2VCcG1uRWRpdG9yU3RvcmVBcGkgfSBmcm9tIFwiLi4vLi4vc3RvcmUvU3RvcmVDb250ZXh0XCI7XG5pbXBvcnQgeyBSZWFzc2lnbm1lbnRzIH0gZnJvbSBcIi4uL3JlYXNzaWdubWVudHMvUmVhc3NpZ25tZW50c1wiO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFNlY3Rpb25IZWFkZXIgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9wcm9wZXJ0aWVzUGFuZWwvU2VjdGlvbkhlYWRlclwiO1xuaW1wb3J0IEV4dGVybmFsTGlua0FsdEljb24gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWljb25zL2Rpc3QvanMvaWNvbnMvZXh0ZXJuYWwtbGluay1hbHQtaWNvblwiO1xuaW1wb3J0IHsgQnV0dG9uLCBCdXR0b25WYXJpYW50IH0gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWNvcmUvZGlzdC9qcy9jb21wb25lbnRzL0J1dHRvblwiO1xuaW1wb3J0IEVkaXRJY29uIGZyb20gXCJAcGF0dGVybmZseS9yZWFjdC1pY29ucy9kaXN0L2pzL2ljb25zL2VkaXQtaWNvblwiO1xuaW1wb3J0IHsgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMgfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL19lbGVtZW50VmlzaXRvclwiO1xuaW1wb3J0IHsgZ2VuZXJhdGVVdWlkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvdXVpZC91dWlkXCI7XG5pbXBvcnQgeyBhZGRPckdldFByb2Nlc3NBbmREaWFncmFtRWxlbWVudHMgfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL2FkZE9yR2V0UHJvY2Vzc0FuZERpYWdyYW1FbGVtZW50c1wiO1xuaW1wb3J0IHsgVXNlclRhc2tTdHVmZiB9IGZyb20gXCIuLi9uYW1lRG9jdW1lbnRhdGlvbkFuZElkL1VzZXJUYXNrU3R1ZmZcIjtcbmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWNvcmUvZGlzdC9qcy9jb21wb25lbnRzL0NoZWNrYm94L0NoZWNrYm94XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBVc2VyVGFza1Byb3BlcnRpZXMoe1xuICB1c2VyVGFzayxcbn06IHtcbiAgdXNlclRhc2s6IE5vcm1hbGl6ZWQ8QlBNTjIwX190VXNlclRhc2s+ICYgeyBfXyQkZWxlbWVudDogXCJ1c2VyVGFza1wiIH07XG59KSB7XG4gIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuICBjb25zdCBzZXR0aW5ncyA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5zZXR0aW5ncyk7XG4gIGNvbnN0IFtzaG93UmVhc3NpZ25tZW50c01vZGFsLCBzZXRTaG93UmVhc3NpZ25tZW50c01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgY2xvc2VSZWFzc2lnbm1lbnRzTW9kYWwgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0U2hvd1JlYXNzaWdubWVudHNNb2RhbChmYWxzZSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8UHJvcGVydGllc1BhbmVsSGVhZGVyRm9ybVNlY3Rpb25cbiAgICAgICAgdGl0bGU9e3VzZXJUYXNrW1wiQF9uYW1lXCJdIHx8IFwiVXNlciB0YXNrXCJ9XG4gICAgICAgIGljb249ezxUYXNrSWNvbiB2YXJpYW50PXt1c2VyVGFzay5fXyQkZWxlbWVudH0gaXNJY29uPXt0cnVlfSAvPn1cbiAgICAgID5cbiAgICAgICAgPE5hbWVEb2N1bWVudGF0aW9uQW5kSWQgZWxlbWVudD17dXNlclRhc2t9IC8+XG5cbiAgICAgICAgPERpdmlkZXIgaW5zZXQ9e3sgZGVmYXVsdDogXCJpbnNldFhzXCIgfX0gLz5cblxuICAgICAgICA8Rm9ybUdyb3VwIGxhYmVsPVwiVGFza1wiPlxuICAgICAgICAgIDxUZXh0QXJlYVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17XCJUYXNrIE5hbWVcIn1cbiAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgaXNEaXNhYmxlZD17c2V0dGluZ3MuaXNSZWFkT25seX1cbiAgICAgICAgICAgIHZhbHVlPXt1c2VyVGFzay50YXNrTmFtZT8uX18kJHRleHQgfHwgXCJcIn1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3VGFza05hbWUpID0+XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgocykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJvY2VzcyB9ID0gYWRkT3JHZXRQcm9jZXNzQW5kRGlhZ3JhbUVsZW1lbnRzKHtcbiAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiBzLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMocHJvY2VzcywgKHsgZWxlbWVudDogZSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZVtcIkBfaWRcIl0gPT09IHVzZXJUYXNrW1wiQF9pZFwiXSAmJiBlLl9fJCRlbGVtZW50ID09PSB1c2VyVGFzay5fXyQkZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBlLnRhc2tOYW1lID0geyBfXyQkdGV4dDogbmV3VGFza05hbWUgfTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIHRhc2sgbmFtZS4uLlwifVxuICAgICAgICAgICAgc3R5bGU9e3sgcmVzaXplOiBcInZlcnRpY2FsXCIsIG1pbkhlaWdodDogXCI0MHB4XCIgfX1cbiAgICAgICAgICAgIHJvd3M9ezF9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgIDxGb3JtR3JvdXAgbGFiZWw9XCJTdWJqZWN0XCI+XG4gICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICBhcmlhLWxhYmVsPXtcIlN1YmplY3RcIn1cbiAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgaXNEaXNhYmxlZD17c2V0dGluZ3MuaXNSZWFkT25seX1cbiAgICAgICAgICAgIHZhbHVlPXt1c2VyVGFzay5kYXRhSW5wdXRBc3NvY2lhdGlvbj8uWzBdLmFzc2lnbm1lbnQ/LlswXS5mcm9tPy5fXyQkdGV4dCA/PyAnJ31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3c3ViamVjdCkgPT5cbiAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBwcm9jZXNzIH0gPSBhZGRPckdldFByb2Nlc3NBbmREaWFncmFtRWxlbWVudHMoe1xuICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHMuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB2aXNpdEZsb3dFbGVtZW50c0FuZEFydGlmYWN0cyhwcm9jZXNzLCAoeyBlbGVtZW50OiBlIH0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGlmIChlW1wiQF9pZFwiXSA9PT0gdXNlclRhc2tbXCJAX2lkXCJdICYmIGUuX18kJGVsZW1lbnQgPT09IHVzZXJUYXNrLl9fJCRlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAvLyAgbmV3c3ViamVjdCA9IGUuZGF0YUlucHV0QXNzb2NpYXRpb24/LlswXS50YXJnZXRSZWY/LlswXS5mcm9tPy5fXyQkdGV4dCA/PyAnJztcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIHN1YmplY3QuLi5cIn1cbiAgICAgICAgICAgIHN0eWxlPXt7IHJlc2l6ZTogXCJ2ZXJ0aWNhbFwiLCBtaW5IZWlnaHQ6IFwiNDBweFwiIH19XG4gICAgICAgICAgICByb3dzPXsxfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICA8Rm9ybUdyb3VwIGxhYmVsPVwiQ29udGVudFwiPlxuICAgICAgICAgIDxUZXh0QXJlYVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17XCJDb250ZW50XCJ9XG4gICAgICAgICAgICB0eXBlPXtcInRleHRcIn1cbiAgICAgICAgICAgIGlzRGlzYWJsZWQ9e3NldHRpbmdzLmlzUmVhZE9ubHl9XG4gICAgICAgICAgICB2YWx1ZT17dXNlclRhc2suY29udGVudD8uX18kJHRleHQgfHwgXCJcIn1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3Y29udGVudCkgPT5cbiAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBwcm9jZXNzIH0gPSBhZGRPckdldFByb2Nlc3NBbmREaWFncmFtRWxlbWVudHMoe1xuICAgICAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHMuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB2aXNpdEZsb3dFbGVtZW50c0FuZEFydGlmYWN0cyhwcm9jZXNzLCAoeyBlbGVtZW50OiBlIH0pID0+IHtcbiAgICAgICAgICAgICAgICAgIGlmIChlW1wiQF9pZFwiXSA9PT0gdXNlclRhc2tbXCJAX2lkXCJdICYmIGUuX18kJGVsZW1lbnQgPT09IHVzZXJUYXNrLl9fJCRlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGUuY29udGVudCA9IHsgX18kJHRleHQ6IG5ld2NvbnRlbnQgfTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIHRhc2sgbmFtZS4uLlwifVxuICAgICAgICAgICAgc3R5bGU9e3sgcmVzaXplOiBcInZlcnRpY2FsXCIsIG1pbkhlaWdodDogXCI0MHB4XCIgfX1cbiAgICAgICAgICAgIHJvd3M9ezN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Gb3JtR3JvdXA+XG4gICAgICAgIDxGb3JtR3JvdXAgbGFiZWw9XCJQcmlvcml0eVwiPlxuICAgICAgICAgIDxUZXh0QXJlYVxuICAgICAgICAgICAgYXJpYS1sYWJlbD17XCJUYXNrIE5hbWVcIn1cbiAgICAgICAgICAgIHR5cGU9e1widGV4dFwifVxuICAgICAgICAgICAgaXNEaXNhYmxlZD17c2V0dGluZ3MuaXNSZWFkT25seX1cbiAgICAgICAgICAgIHZhbHVlPXt1c2VyVGFzay5wcmlvcml0eT8uX18kJHRleHQgfHwgXCJcIn1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3cHJpb3JpdHkpID0+XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgocykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJvY2VzcyB9ID0gYWRkT3JHZXRQcm9jZXNzQW5kRGlhZ3JhbUVsZW1lbnRzKHtcbiAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiBzLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMocHJvY2VzcywgKHsgZWxlbWVudDogZSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZVtcIkBfaWRcIl0gPT09IHVzZXJUYXNrW1wiQF9pZFwiXSAmJiBlLl9fJCRlbGVtZW50ID09PSB1c2VyVGFzay5fXyQkZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBlLnByaW9yaXR5ID0geyBfXyQkdGV4dDogbmV3cHJpb3JpdHkgfTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtcIkVudGVyIHByaW9yaXR5Li4uXCJ9XG4gICAgICAgICAgICBzdHlsZT17eyByZXNpemU6IFwidmVydGljYWxcIiwgbWluSGVpZ2h0OiBcIjQwcHhcIiB9fVxuICAgICAgICAgICAgcm93cz17MX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgPEZvcm1Hcm91cCBsYWJlbD1cIkRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICBhcmlhLWxhYmVsPXtcIlRhc2sgTmFtZVwifVxuICAgICAgICAgICAgdHlwZT17XCJ0ZXh0XCJ9XG4gICAgICAgICAgICBpc0Rpc2FibGVkPXtzZXR0aW5ncy5pc1JlYWRPbmx5fVxuICAgICAgICAgICAgdmFsdWU9e3VzZXJUYXNrW1wiQF9kZXNjcmlwdGlvblwiXX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsobmV3RGVzY3JpcHRpb24pID0+XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgocykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJvY2VzcyB9ID0gYWRkT3JHZXRQcm9jZXNzQW5kRGlhZ3JhbUVsZW1lbnRzKHtcbiAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiBzLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMocHJvY2VzcywgKHsgZWxlbWVudDogZSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZVtcIkBfaWRcIl0gPT09IHVzZXJUYXNrW1wiQF9pZFwiXSAmJiBlLl9fJCRlbGVtZW50ID09PSB1c2VyVGFzay5fXyQkZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBlW1wiQF9kZXNjcmlwdGlvblwiXSA9IG5ld0Rlc2NyaXB0aW9uO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1wiRW50ZXIgZGVzY3JpcHRpb24uLi5cIn1cbiAgICAgICAgICAgIHN0eWxlPXt7IHJlc2l6ZTogXCJ2ZXJ0aWNhbFwiLCBtaW5IZWlnaHQ6IFwiNDBweFwiIH19XG4gICAgICAgICAgICByb3dzPXszfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRm9ybUdyb3VwPlxuICAgICAgICA8Rm9ybUdyb3VwID5cbiAgICAgICAgICA8Q2hlY2tib3hcbiAgICAgICAgICAgIGxhYmVsPVwiU2tpcHBhYmxlXCJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e1wiU2tpcHBhYmxlXCJ9XG4gICAgICAgICAgICBpZD1cImtpZS1icG1uLWVkaXRvci0tcHJvcGVydGllcy1wYW5lbC0tc2tpcHBhYmxlLWNoZWNrYm94XCJcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ9e3NldHRpbmdzLmlzUmVhZE9ubHl9XG4gICAgICAgICAgICBpc0NoZWNrZWQ9e3VzZXJUYXNrW1wiQF9za2lwcGFibGVcIl19XG4gICAgICAgICAgICBvbkNoYW5nZT17KGNoZWNrZWQpID0+XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgocykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJvY2VzcyB9ID0gYWRkT3JHZXRQcm9jZXNzQW5kRGlhZ3JhbUVsZW1lbnRzKHtcbiAgICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiBzLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMocHJvY2VzcywgKHsgZWxlbWVudDogZSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICBpZiAoZVtcIkBfaWRcIl0gPT09IHVzZXJUYXNrW1wiQF9pZFwiXSAmJiBlLl9fJCRlbGVtZW50ID09PSB1c2VyVGFzay5fXyQkZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBlW1wiQF9za2lwcGFibGVcIl0gPSBjaGVja2VkO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvRm9ybUdyb3VwPlxuXG4gICAgICAgIFxuXG4gICAgICAgIDxEaXZpZGVyIGluc2V0PXt7IGRlZmF1bHQ6IFwiaW5zZXRYc1wiIH19IC8+XG5cbiAgICAgICAgPEZvcm1Hcm91cCBsYWJlbD17XCJBY3RvcnNcIn0+PC9Gb3JtR3JvdXA+XG4gICAgICAgIDxGb3JtR3JvdXAgbGFiZWw9e1wiR3JvdXBzXCJ9PjwvRm9ybUdyb3VwPlxuICAgICAgICA8Rm9ybUdyb3VwIGxhYmVsPXtcIkNyZWF0ZWQgYnlcIn0+PC9Gb3JtR3JvdXA+XG5cbiAgICAgICAgPERpdmlkZXIgaW5zZXQ9e3sgZGVmYXVsdDogXCJpbnNldFhzXCIgfX0gLz5cblxuICAgICAgICA8UmVhc3NpZ25tZW50cyBpc09wZW49e3Nob3dSZWFzc2lnbm1lbnRzTW9kYWx9IG9uQ2xvc2U9e2Nsb3NlUmVhc3NpZ25tZW50c01vZGFsfSAvPlxuICAgICAgICA8Rm9ybVNlY3Rpb25cbiAgICAgICAgICB0aXRsZT17XG4gICAgICAgICAgICA8U2VjdGlvbkhlYWRlclxuICAgICAgICAgICAgICBleHBhbmRzPXtcIm1vZGFsXCJ9XG4gICAgICAgICAgICAgIGljb249ezxFeHRlcm5hbExpbmtBbHRJY29uIHdpZHRoPXsxNn0gaGVpZ2h0PXszNn0gc3R5bGU9e3sgbWFyZ2luTGVmdDogXCIxMnB4XCIgfX0gLz59XG4gICAgICAgICAgICAgIHRpdGxlPXtcIlJlYXNzaWdubWVudHNcIn1cbiAgICAgICAgICAgICAgdG9vZ2xlU2VjdGlvbkV4cGFuZGVkPXsoKSA9PiBzZXRTaG93UmVhc3NpZ25tZW50c01vZGFsKHRydWUpfVxuICAgICAgICAgICAgICBhY3Rpb249e1xuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHRpdGxlPXtcIk1hbmFnZVwifVxuICAgICAgICAgICAgICAgICAgdmFyaWFudD17QnV0dG9uVmFyaWFudC5wbGFpbn1cbiAgICAgICAgICAgICAgICAgIGlzRGlzYWJsZWQ9e3NldHRpbmdzLmlzUmVhZE9ubHl9XG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTaG93UmVhc3NpZ25tZW50c01vZGFsKHRydWUpfVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgcGFkZGluZ0JvdHRvbTogMCwgcGFkZGluZ1RvcDogMCB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxFZGl0SWNvbiAvPlxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIH1cbiAgICAgICAgLz5cbiAgICAgICAgPEZvcm1Hcm91cCBsYWJlbD17XCJOb3RpZmljYXRpb25zXCJ9PjwvRm9ybUdyb3VwPlxuXG4gICAgICAgIDxEaXZpZGVyIGluc2V0PXt7IGRlZmF1bHQ6IFwiaW5zZXRYc1wiIH19IC8+XG5cbiAgICAgICAgPFNsYUR1ZURhdGVJbnB1dCBlbGVtZW50PXt1c2VyVGFza30gLz5cbiAgICAgICAgPEFzeW5jQ2hlY2tib3ggZWxlbWVudD17dXNlclRhc2t9IC8+XG4gICAgICAgIDxBZGhvY0F1dG9zdGFydENoZWNrYm94IGVsZW1lbnQ9e3VzZXJUYXNrfSAvPlxuXG4gICAgICAgIDxEaXZpZGVyIGluc2V0PXt7IGRlZmF1bHQ6IFwiaW5zZXRYc1wiIH19IC8+XG5cbiAgICAgICAgPE11bHRpSW5zdGFuY2VDaGVja2JveCBlbGVtZW50PXt1c2VyVGFza30gLz5cbiAgICAgICAge3VzZXJUYXNrLmxvb3BDaGFyYWN0ZXJpc3RpY3M/Ll9fJCRlbGVtZW50ID09PSBcIm11bHRpSW5zdGFuY2VMb29wQ2hhcmFjdGVyaXN0aWNzXCIgJiYgKFxuICAgICAgICAgIDxNdWx0aUluc3RhbmNlUHJvcGVydGllcyBlbGVtZW50PXt1c2VyVGFza30gLz5cbiAgICAgICAgKX1cbiAgICAgIDwvUHJvcGVydGllc1BhbmVsSGVhZGVyRm9ybVNlY3Rpb24+XG5cbiAgICAgIDxCaWRpcmVjdGlvbmFsQXNzaWdubWVudHNGb3JtU2VjdGlvbiBlbGVtZW50PXt1c2VyVGFza30gLz5cblxuICAgICAgPE9uRW50cnlBbmRFeGl0U2NyaXB0c0Zvcm1TZWN0aW9uIGVsZW1lbnQ9e3VzZXJUYXNrfSAvPlxuICAgIDwvPlxuICApO1xufVxuIl0sIm5hbWVzIjpbIkRyYXdlciIsIkRyYXdlckNvbnRlbnQiLCJEcmF3ZXJDb250ZW50Qm9keSIsIm9yaWdpbmFsIiwiUmVhY3QiLCJ1c2VDYWxsYmFjayIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VNZW1vIiwidXNlUmVmIiwiUmVhY3RET00iLCJFcnJvckJvdW5kYXJ5IiwiUkYiLCJCcG1uRWRpdG9yQ29udGV4dFByb3ZpZGVyIiwidXNlQnBtbkVkaXRvciIsIkJwbW5FZGl0b3JFcnJvckZhbGxiYWNrIiwiQnBtbkRpYWdyYW0iLCJCcG1uVmVyc2lvbkxhYmVsIiwiQnBtbkVkaXRvckV4dGVybmFsTW9kZWxzQ29udGV4dFByb3ZpZGVyIiwibm9ybWFsaXplIiwiSU5JVElBTF9DT01QVVRFRF9DQUNIRSIsIkNvbXB1dGVkU3RhdGVDYWNoZSIsIlh5Rmxvd1JlYWN0S2llRGlhZ3JhbVN0b3JlQXBpQ29udGV4dCIsImNyZWF0ZUJwbW5FZGl0b3JTdG9yZSIsImdldERlZmF1bHRTdGF0aWNTdGF0ZSIsIkJwbW5FZGl0b3JTdG9yZUFwaUNvbnRleHQiLCJ1c2VCcG1uRWRpdG9yU3RvcmUiLCJ1c2VCcG1uRWRpdG9yU3RvcmVBcGkiLCJCcG1uRGlhZ3JhbVN2ZyIsInVzZVN0YXRlQXNJdFdhc0JlZm9yZUNvbmRpdGlvbkJlY2FtZVRydWUiLCJ1c2VFZmZlY3RBZnRlckZpcnN0UmVuZGVyIiwiQ29tbWFuZHNDb250ZXh0UHJvdmlkZXIiLCJ1c2VDb21tYW5kcyIsIlByb3BlcnRpZXNQYW5lbCIsIk9OX01PREVMX0NIQU5HRV9ERUJPVU5DRV9USU1FX0lOX01TIiwiU1ZHX1BBRERJTkciLCJCcG1uRWRpdG9ySW50ZXJuYWwiLCJfcmVmIiwibW9kZWwiLCJvcmlnaW5hbFZlcnNpb24iLCJvbk1vZGVsQ2hhbmdlIiwib25Nb2RlbERlYm91bmNlU3RhdGVDaGFuZ2VkIiwiZm9yd2FyZFJlZiIsImlzUHJvcGVydGllc1BhbmVsT3BlbiIsInMiLCJwcm9wZXJ0aWVzUGFuZWwiLCJpc09wZW4iLCJicG1uIiwiaXNEaWFncmFtRWRpdGluZ0luUHJvZ3Jlc3MiLCJjb21wdXRlZCIsImJwbW5FZGl0b3JTdG9yZUFwaSIsImNvbW1hbmRzUmVmIiwiYnBtbk1vZGVsQmVmb3JlRWRpdGluZ1JlZiIsImJwbW5FZGl0b3JSb290RWxlbWVudFJlZiIsImRpYWdyYW1SZWYiLCJkaWFncmFtQ29udGFpbmVyUmVmIiwicmVzZXQiLCJzdGF0ZSIsImdldFN0YXRlIiwiZGlzcGF0Y2giLCJnZXREaWFncmFtU3ZnIiwibm9kZXMiLCJfYiIsIl9hIiwiY3VycmVudCIsImdldFJlYWN0Rmxvd0luc3RhbmNlIiwiZ2V0Tm9kZXMiLCJlZGdlcyIsIl9kIiwiX2MiLCJnZXRFZGdlcyIsInVuZGVmaW5lZCIsImJvdW5kcyIsImdldE5vZGVzQm91bmRzIiwic3ZnIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50TlMiLCJzZXRBdHRyaWJ1dGUiLCJ3aWR0aCIsImhlaWdodCIsInJlbmRlciIsIl9qc3giLCJ0cmFuc2Zvcm0iLCJ4IiwieSIsImNoaWxkcmVuIiwic25hcEdyaWQiLCJ4eUZsb3dSZWFjdEtpZURpYWdyYW0iLCJYTUxTZXJpYWxpemVyIiwic2VyaWFsaXplVG9TdHJpbmciLCJnZXRDb21tYW5kcyIsInNldFN0YXRlIiwicHJldiIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiY29uc29sZSIsImRlYnVnIiwiY2xlYXJUaW1lb3V0IiwicmVmIiwiY2xhc3NOYW1lIiwiaXNFeHBhbmRlZCIsImlzSW5saW5lIiwicG9zaXRpb24iLCJwYW5lbENvbnRlbnQiLCJfanN4cyIsInZlcnNpb24iLCJjb250YWluZXIiLCJCcG1uRWRpdG9yIiwicHJvcHMiLCJzdG9yZSIsInN0b3JlUmVmIiwicmVzZXRTdGF0ZSIsIl9yZWYyIiwiYXJncyIsImRpYWdyYW0iLCJGYWxsYmFja0NvbXBvbmVudCIsIm9uUmVzZXQiLCJQcm92aWRlciIsInZhbHVlIiwicGFyc2VCcG1uMjBEcm9vbHMxME1ldGFEYXRhIiwiZ2V0Q29udGFpbm1lbnRSZWxhdGlvbnNoaXAiLCJwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcCIsIkVkaXRhYmxlTm9kZUxhYmVsIiwidXNlRWRpdGFibGVOb2RlTGFiZWwiLCJOb2RlUmVzaXplckhhbmRsZSIsInVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMiLCJ1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wIiwidXNlTm9kZUNsYXNzTmFtZSIsInVzZU5vZGVEaW1lbnNpb25zIiwidXNlTm9kZVJlc2l6aW5nIiwiSW5mb05vZGVQYW5lbCIsIk91dGdvaW5nU3R1ZmZOb2RlUGFuZWwiLCJQb3NpdGlvbmFsTm9kZUhhbmRsZXMiLCJ1c2VJc0hvdmVyZWQiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsInVwZGF0ZUZsb3dFbGVtZW50IiwidXBkYXRlTGFuZSIsInVwZGF0ZVRleHRBbm5vdGF0aW9uIiwiQWN0aXZpdHlOb2RlTWFya2VyIiwiQlBNTl9PVVRHT0lOR19TVFJVQ1RVUkUiLCJicG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZyIsImJwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nIiwiRURHRV9UWVBFUyIsIk1JTl9OT0RFX1NJWkVTIiwiTk9ERV9UWVBFUyIsImdldE5vZGVMYWJlbFBvc2l0aW9uIiwidXNlTm9kZVN0eWxlIiwiRGF0YU9iamVjdE5vZGVTdmciLCJFbmRFdmVudE5vZGVTdmciLCJHYXRld2F5Tm9kZVN2ZyIsIkdyb3VwTm9kZVN2ZyIsIkludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnIiwiSW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGVTdmciLCJMYW5lTm9kZVN2ZyIsIk5PREVfQ09MT1JTIiwiU3RhcnRFdmVudE5vZGVTdmciLCJTdWJQcm9jZXNzTm9kZVN2ZyIsIlRhc2tOb2RlU3ZnIiwiVGV4dEFubm90YXRpb25Ob2RlU3ZnIiwiVW5rbm93bk5vZGVTdmciLCJOb2RlTW9ycGhpbmdQYW5lbCIsInVzZUV2ZW50Tm9kZU1vcnBoaW5nQWN0aW9ucyIsInVzZUdhdGV3YXlOb2RlTW9ycGhpbmdBY3Rpb25zIiwidXNlVGFza05vZGVNb3JwaGluZ0FjdGlvbnMiLCJ1c2VTdWJQcm9jZXNzTm9kZU1vcnBoaW5nQWN0aW9ucyIsInVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zIiwiU3RhcnRFdmVudE5vZGUiLCJtZW1vIiwiZGF0YSIsImJwbW5FbGVtZW50Iiwic3RhcnRFdmVudCIsInNoYXBlIiwic2hhcGVJbmRleCIsInBhcmVudFh5Rmxvd05vZGUiLCJzZWxlY3RlZCIsImRyYWdnaW5nIiwiekluZGV4IiwidHlwZSIsImlkIiwicmVuZGVyQ291bnQiLCJpc0hvdmVyZWQiLCJpc1Jlc2l6aW5nIiwic2hvdWxkQWN0TGlrZUhvdmVyZWQiLCJkcmFnZ2luZ05vZGVzIiwibGVuZ3RoIiwiaXNFZGl0aW5nTGFiZWwiLCJzZXRFZGl0aW5nTGFiZWwiLCJ0cmlnZ2VyRWRpdGluZyIsInRyaWdnZXJFZGl0aW5nSWZFbnRlciIsImlzVGFyZ2V0ZWQiLCJpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCIsIm5vZGVEaW1lbnNpb25zIiwibm9kZVR5cGUiLCJzZXROYW1lIiwibmV3TmFtZSIsImRlZmluaXRpb25zIiwibmV3Rmxvd0VsZW1lbnQiLCJ0cmltIiwiaXNJY29uRXhwYW5kZWQiLCJzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQiLCJtb3JwaGluZ0FjdGlvbnMiLCJkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzIiwic3ViUHJvY2VzcyIsIlNldCIsIl9GcmFnbWVudCIsInZhcmlhbnQiLCJldmVudERlZmluaXRpb24iLCJfXyQkZWxlbWVudCIsIm5vZGVJZCIsIm9uRG91YmxlQ2xpY2siLCJvbktleURvd24iLCJ0YWJJbmRleCIsImlzVmlzaWJsZSIsIm9uQ2xpY2siLCJub2RlTWFwcGluZyIsImVkZ2VNYXBwaW5nIiwibm9kZUhyZWYiLCJub2RlVHlwZXMiLCJlZGdlVHlwZXMiLCJkaXNhYmxlZEFjdGlvbklkcyIsImlzVG9nZ2xlVmlzaWJsZSIsInNldEV4cGFuZGVkIiwiYWN0aW9ucyIsInByaW1hcnlDb2xvciIsImZvcmVncm91bmQiLCJzZWNvbmRhcnlDb2xvciIsImJhY2tncm91bmQiLCJzZWxlY3RlZEFjdGlvbklkIiwiX2UiLCJzdHlsZSIsImZsZXhTaHJpbmsiLCJOb2RlTGFiZWxBdFRoZUJvdHRvbSIsIm5hbWUiLCJpc0VkaXRpbmciLCJzZXRFZGl0aW5nIiwib25DaGFuZ2UiLCJ2YWxpZGF0ZSIsInNob3VsZENvbW1pdE9uQmx1ciIsImZvbnRDc3NQcm9wZXJ0aWVzIiwiSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGUiLCJpbnRlcm1lZGlhdGVDYXRjaEV2ZW50IiwiSW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGUiLCJfcmVmMyIsImludGVybWVkaWF0ZVRocm93RXZlbnQiLCJFbmRFdmVudE5vZGUiLCJfcmVmNCIsImVuZEV2ZW50Iiwic3Ryb2tlV2lkdGgiLCJUYXNrTm9kZSIsIl9yZWY1IiwidGFzayIsImVuYWJsZUN1c3RvbU5vZGVTdHlsZXMiLCJvdmVybGF5cyIsImlzRW5hYmxlZCIsImljb25zIiwidXNlQWN0aXZpdHlJY29ucyIsIm1hcmtlcnMiLCJub2RlU2hhcGVJbmRleCIsIlN1YlByb2Nlc3NOb2RlIiwiX3JlZjYiLCJpc09ubHlTZWxlY3RlZE5vZGUiLCJfc2VsZWN0ZWROb2RlcyIsImxvb3BDaGFyYWN0ZXJpc3RpY3MiLCJHYXRld2F5Tm9kZSIsIl9yZWY3IiwiZ2F0ZXdheSIsIkRhdGFPYmplY3ROb2RlIiwiX3JlZjgiLCJkYXRhT2JqZWN0Iiwibm9kZUhlaWdodCIsInNldE5vZGVIZWlnaHQiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsIm91dGxpbmUiLCJzaG93QXJyb3ciLCJzaG93Rm9sZGVkUGFnZSIsInNldExhYmVsSGVpZ2h0IiwiR3JvdXBOb2RlIiwiX3JlZjkiLCJncm91cCIsInJlYWN0RmxvdyIsInVzZVJlYWN0RmxvdyIsImZsYXRNYXAiLCJuIiwiY29udGFpbmVyTWluU2l6ZXMiLCJib3VuZHNNaW5TaXplcyIsImJvcmRlckFsbG93YW5jZUluUHgiLCJpc0NvbXBsZXRlbHlJbnNpZGUiLCJyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJMYW5lTm9kZSIsIl9yZWYxMCIsImxhbmUiLCJuZXdMYW5lIiwiVGV4dEFubm90YXRpb25Ob2RlIiwiX3JlZjExIiwidGV4dEFubm90YXRpb24iLCJzZXRUZXh0IiwibmV3VGV4dCIsIm5ld1RleHRBbm5vdGF0aW9uIiwidGV4dCIsIl9fJCR0ZXh0IiwiY29udGVudCIsIlN0cmluZyIsImdldCIsIlVua25vd25Ob2RlIiwiX3JlZjEyIiwiSGFuZGxlIiwib3BhY2l0eSIsIlBvc2l0aW9uIiwiVG9wIiwic2tpcFZhbGlkYXRpb24iLCJhY3Rpdml0eSIsInB1c2giLCJBZEhvY1N1YlByb2Nlc3MiLCJDb21wZW5zYXRpb24iLCJNdWx0aUluc3RhbmNlU2VxdWVudGlhbCIsIk11bHRpSW5zdGFuY2VQYXJhbGxlbCIsIkxvb3AiLCJDb2xsYXBzZWQiLCJfcmVmMTMiLCJmb250U2l6ZSIsIm1hcmdpblRvcCIsImJvcmRlclJhZGl1cyIsInBhZGRpbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJib3hTaGFkb3ciLCJiYWNrZHJvcEZpbHRlciIsInRleHRBbGlnbiIsIm1hcmdpbkxlZnQiLCJ2aXNpdEZsb3dFbGVtZW50c0FuZEFydGlmYWN0cyIsImFkZE9yR2V0UHJvY2Vzc0FuZERpYWdyYW1FbGVtZW50cyIsIkdhdGV3YXlJY29uIiwibW9ycGhHYXRld2F5IiwiZ2F0ZXdheUVsZW1lbnQiLCJwcm9jZXNzIiwiYXJyYXkiLCJpbmRleCIsIm93bmVyIiwiZWxlbWVudCIsImljb24iLCJpc0ljb24iLCJrZXkiLCJ0aXRsZSIsImFjdGlvbiIsIk5hbWVEb2N1bWVudGF0aW9uQW5kSWQiLCJCaWRpcmVjdGlvbmFsQXNzaWdubWVudHNGb3JtU2VjdGlvbiIsIk9uRW50cnlBbmRFeGl0U2NyaXB0c0Zvcm1TZWN0aW9uIiwiVGFza0ljb24iLCJQcm9wZXJ0aWVzUGFuZWxIZWFkZXJGb3JtU2VjdGlvbiIsIkRpdmlkZXIiLCJBc3luY0NoZWNrYm94IiwiU2xhRHVlRGF0ZUlucHV0IiwiTXVsdGlJbnN0YW5jZUNoZWNrYm94IiwiTXVsdGlJbnN0YW5jZVByb3BlcnRpZXMiLCJBZGhvY0F1dG9zdGFydENoZWNrYm94IiwiRm9ybUdyb3VwIiwiRm9ybVNlY3Rpb24iLCJUZXh0QXJlYSIsIlJlYXNzaWdubWVudHMiLCJTZWN0aW9uSGVhZGVyIiwiRXh0ZXJuYWxMaW5rQWx0SWNvbiIsIkJ1dHRvbiIsIkJ1dHRvblZhcmlhbnQiLCJFZGl0SWNvbiIsIkNoZWNrYm94IiwiVXNlclRhc2tQcm9wZXJ0aWVzIiwidXNlclRhc2siLCJzZXR0aW5ncyIsInNob3dSZWFzc2lnbm1lbnRzTW9kYWwiLCJzZXRTaG93UmVhc3NpZ25tZW50c01vZGFsIiwiY2xvc2VSZWFzc2lnbm1lbnRzTW9kYWwiLCJpbnNldCIsImRlZmF1bHQiLCJsYWJlbCIsImlzRGlzYWJsZWQiLCJpc1JlYWRPbmx5IiwidGFza05hbWUiLCJuZXdUYXNrTmFtZSIsImUiLCJwbGFjZWhvbGRlciIsInJlc2l6ZSIsIm1pbkhlaWdodCIsInJvd3MiLCJkYXRhSW5wdXRBc3NvY2lhdGlvbiIsImFzc2lnbm1lbnQiLCJmcm9tIiwibmV3c3ViamVjdCIsIl9mIiwibmV3Y29udGVudCIsIl9nIiwicHJpb3JpdHkiLCJuZXdwcmlvcml0eSIsIm5ld0Rlc2NyaXB0aW9uIiwiaXNDaGVja2VkIiwiY2hlY2tlZCIsIm9uQ2xvc2UiLCJleHBhbmRzIiwidG9vZ2xlU2VjdGlvbkV4cGFuZGVkIiwicGxhaW4iLCJwYWRkaW5nQm90dG9tIiwicGFkZGluZ1RvcCIsIl9oIl0sInNvdXJjZVJvb3QiOiIifQ==