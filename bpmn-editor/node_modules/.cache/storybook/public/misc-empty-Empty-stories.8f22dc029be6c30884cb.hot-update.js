"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/diagram/nodes/NodeIcons.tsx":
/*!*****************************************!*\
  !*** ./src/diagram/nodes/NodeIcons.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CallActivityIcon: () => (/* binding */ CallActivityIcon),
/* harmony export */   DataObjectIcon: () => (/* binding */ DataObjectIcon),
/* harmony export */   EndEventIcon: () => (/* binding */ EndEventIcon),
/* harmony export */   EventDefinitionIcon: () => (/* binding */ EventDefinitionIcon),
/* harmony export */   GatewayIcon: () => (/* binding */ GatewayIcon),
/* harmony export */   GroupIcon: () => (/* binding */ GroupIcon),
/* harmony export */   IntermediateCatchEventIcon: () => (/* binding */ IntermediateCatchEventIcon),
/* harmony export */   IntermediateThrowEventIcon: () => (/* binding */ IntermediateThrowEventIcon),
/* harmony export */   LaneIcon: () => (/* binding */ LaneIcon),
/* harmony export */   NodeIcon: () => (/* binding */ NodeIcon),
/* harmony export */   StartEventIcon: () => (/* binding */ StartEventIcon),
/* harmony export */   SubProcessIcon: () => (/* binding */ SubProcessIcon),
/* harmony export */   TaskIcon: () => (/* binding */ TaskIcon),
/* harmony export */   TextAnnotationIcon: () => (/* binding */ TextAnnotationIcon),
/* harmony export */   UnknownIcon: () => (/* binding */ UnknownIcon),
/* harmony export */   UnknownNodeIcon: () => (/* binding */ UnknownNodeIcon)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools-core/switch-expression-ts */ "../switch-expression-ts/dist/switchExpression.js");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_question_circle_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/question-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/question-circle-icon.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/NodeIcons */ "../xyflow-react-kie-diagram/dist/nodes/NodeIcons.js");






function NodeIcon(_ref) {
  let {
    nodeType
  } = _ref;
  return (0,_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_2__.switchExpression)(nodeType, {
    [_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPES.startEvent]: StartEventIcon,
    [_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPES.task]: TaskIcon,
    [_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPES.dataObject]: DataObjectIcon,
    [_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPES.textAnnotation]: TextAnnotationIcon,
    [_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_3__.NODE_TYPES.unknown]: UnknownIcon,
    default: () => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      children: "?"
    })
  });
}
function EventDefinitionIcon(_ref2) {
  let {
    variant,
    filled,
    fill,
    stroke
  } = _ref2;
  const cx = _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.x + _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.width / 2;
  const cy = _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.y + _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.height / 2;
  const r = _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.EventVariantSymbolSvg, {
      variant: variant !== null && variant !== void 0 ? variant : "none",
      strokeWidth: 16,
      isMorphingPanel: true,
      filled: filled,
      stroke: stroke,
      fill: fill,
      x: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.x,
      y: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.x,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 10,
      outerCircleRadius: r
    })
  });
}
function StartEventIcon(_ref3) {
  let {
    variant
  } = _ref3;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.StartEventNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      variant: variant !== null && variant !== void 0 ? variant : "none"
    })
  });
}
function IntermediateCatchEventIcon(_ref4) {
  let {
    variant
  } = _ref4;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.IntermediateCatchEventNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      rimWidth: 40,
      variant: variant !== null && variant !== void 0 ? variant : "none"
    })
  });
}
function IntermediateThrowEventIcon(_ref5) {
  let {
    variant
  } = _ref5;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.IntermediateThrowEventNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      rimWidth: 40,
      variant: variant !== null && variant !== void 0 ? variant : "none"
    })
  });
}
function EndEventIcon(_ref6) {
  let {
    variant
  } = _ref6;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.EndEventNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      variant: variant !== null && variant !== void 0 ? variant : "none"
    })
  });
}
function TaskIcon(_ref7) {
  let {
    variant
  } = _ref7;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.TaskNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      variant: variant !== null && variant !== void 0 ? variant : "none"
    })
  });
}
function CallActivityIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.TaskNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      markers: ["CallActivityPaletteIcon"],
      variant: "none"
    })
  });
}
function GatewayIcon(_ref8) {
  let {
    variant,
    isMorphingPanel = false
  } = _ref8;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.GatewayNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      width: 200,
      height: 200,
      variant: variant !== null && variant !== void 0 ? variant : "none",
      isMorphingPanel: isMorphingPanel
    })
  });
}
function LaneIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.LaneNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps
    })
  });
}
function SubProcessIcon(_ref9) {
  let {
    variant
  } = _ref9;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.SubProcessNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      strokeWidth: 10,
      rimWidth: 20,
      borderRadius: 20,
      variant: variant !== null && variant !== void 0 ? variant : "transaction"
    })
  });
}
function DataObjectIcon(props) {
  var _a, _b;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    padding: (_a = props.padding) !== null && _a !== void 0 ? _a : "0px",
    height: props.height,
    viewBox: props.viewBox,
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.DataObjectNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      showArrow: false,
      showFoldedPage: false,
      isIcon: true,
      width: 80,
      height: 100,
      strokeWidth: 10,
      transform: (_b = props.transform) !== null && _b !== void 0 ? _b : "translate(80, 60)"
    })
  });
}
function GroupIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.GroupNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      y: 12,
      height: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps.width,
      strokeDasharray: "28,28"
    })
  });
}
function TextAnnotationIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_1__.TextAnnotationNodeSvg, {
      ..._kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.nodeSvgProps,
      showPlaceholder: true
    })
  });
}
function UnknownNodeIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.RoundSvg, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_question_circle_icon__WEBPACK_IMPORTED_MODULE_5__.QuestionCircleIcon, {
      width: "100%",
      height: "100%"
    })
  });
}
function UnknownIcon() {
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      height: "100%"
    },
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_question_circle_icon__WEBPACK_IMPORTED_MODULE_5__.QuestionCircleIcon, {})
  });
}
try {
    // @ts-ignore
    NodeIcon.displayName = "NodeIcon";
    // @ts-ignore
    NodeIcon.__docgenInfo = { "description": "", "displayName": "NodeIcon", "props": { "nodeType": { "defaultValue": null, "description": "", "name": "nodeType", "required": true, "type": { "name": "enum", "value": [{ "value": "\"node_startEvent\"" }, { "value": "\"node_intermediateCatchEvent\"" }, { "value": "\"node_intermediateThrowEvent\"" }, { "value": "\"node_endEvent\"" }, { "value": "\"node_task\"" }, { "value": "\"node_subProcess\"" }, { "value": "\"node_gateway\"" }, { "value": "\"node_dataObject\"" }, { "value": "\"node_textAnnotation\"" }, { "value": "\"node_unknown\"" }, { "value": "\"node_group\"" }, { "value": "\"node_lane\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#NodeIcon"] = { docgenInfo: NodeIcon.__docgenInfo, name: "NodeIcon", path: "src/diagram/nodes/NodeIcons.tsx#NodeIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventDefinitionIcon.displayName = "EventDefinitionIcon";
    // @ts-ignore
    EventDefinitionIcon.__docgenInfo = { "description": "", "displayName": "EventDefinitionIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }] } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": false, "type": { "name": "string" } }, "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#EventDefinitionIcon"] = { docgenInfo: EventDefinitionIcon.__docgenInfo, name: "EventDefinitionIcon", path: "src/diagram/nodes/NodeIcons.tsx#EventDefinitionIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventIcon.displayName = "StartEventIcon";
    // @ts-ignore
    StartEventIcon.__docgenInfo = { "description": "", "displayName": "StartEventIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#StartEventIcon"] = { docgenInfo: StartEventIcon.__docgenInfo, name: "StartEventIcon", path: "src/diagram/nodes/NodeIcons.tsx#StartEventIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventIcon.displayName = "IntermediateCatchEventIcon";
    // @ts-ignore
    IntermediateCatchEventIcon.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#IntermediateCatchEventIcon"] = { docgenInfo: IntermediateCatchEventIcon.__docgenInfo, name: "IntermediateCatchEventIcon", path: "src/diagram/nodes/NodeIcons.tsx#IntermediateCatchEventIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventIcon.displayName = "IntermediateThrowEventIcon";
    // @ts-ignore
    IntermediateThrowEventIcon.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#IntermediateThrowEventIcon"] = { docgenInfo: IntermediateThrowEventIcon.__docgenInfo, name: "IntermediateThrowEventIcon", path: "src/diagram/nodes/NodeIcons.tsx#IntermediateThrowEventIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventIcon.displayName = "EndEventIcon";
    // @ts-ignore
    EndEventIcon.__docgenInfo = { "description": "", "displayName": "EndEventIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#EndEventIcon"] = { docgenInfo: EndEventIcon.__docgenInfo, name: "EndEventIcon", path: "src/diagram/nodes/NodeIcons.tsx#EndEventIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskIcon.displayName = "TaskIcon";
    // @ts-ignore
    TaskIcon.__docgenInfo = { "description": "", "displayName": "TaskIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"businessRuleTask\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#TaskIcon"] = { docgenInfo: TaskIcon.__docgenInfo, name: "TaskIcon", path: "src/diagram/nodes/NodeIcons.tsx#TaskIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayIcon.displayName = "GatewayIcon";
    // @ts-ignore
    GatewayIcon.__docgenInfo = { "description": "", "displayName": "GatewayIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }] } }, "isMorphingPanel": { "defaultValue": { value: "false" }, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#GatewayIcon"] = { docgenInfo: GatewayIcon.__docgenInfo, name: "GatewayIcon", path: "src/diagram/nodes/NodeIcons.tsx#GatewayIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessIcon.displayName = "SubProcessIcon";
    // @ts-ignore
    SubProcessIcon.__docgenInfo = { "description": "", "displayName": "SubProcessIcon", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"event\"" }, { "value": "\"transaction\"" }, { "value": "\"multi-instance\"" }, { "value": "\"other\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#SubProcessIcon"] = { docgenInfo: SubProcessIcon.__docgenInfo, name: "SubProcessIcon", path: "src/diagram/nodes/NodeIcons.tsx#SubProcessIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectIcon.displayName = "DataObjectIcon";
    // @ts-ignore
    DataObjectIcon.__docgenInfo = { "description": "", "displayName": "DataObjectIcon", "props": { "padding": { "defaultValue": null, "description": "", "name": "padding", "required": false, "type": { "name": "string" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "number" } }, "viewBox": { "defaultValue": null, "description": "", "name": "viewBox", "required": false, "type": { "name": "number" } }, "transform": { "defaultValue": null, "description": "", "name": "transform", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeIcons.tsx#DataObjectIcon"] = { docgenInfo: DataObjectIcon.__docgenInfo, name: "DataObjectIcon", path: "src/diagram/nodes/NodeIcons.tsx#DataObjectIcon" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/NodeSvgs.tsx":
/*!****************************************!*\
  !*** ./src/diagram/nodes/NodeSvgs.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeIcons: () => (/* binding */ ActivityNodeIcons),
/* harmony export */   CancelEventSymbolSvg: () => (/* binding */ CancelEventSymbolSvg),
/* harmony export */   CompensationEventSymbolSvg: () => (/* binding */ CompensationEventSymbolSvg),
/* harmony export */   ComplexGatewaySvg: () => (/* binding */ ComplexGatewaySvg),
/* harmony export */   ConditionalEventSymbolSvg: () => (/* binding */ ConditionalEventSymbolSvg),
/* harmony export */   DataObjectNodeSvg: () => (/* binding */ DataObjectNodeSvg),
/* harmony export */   EndEventNodeSvg: () => (/* binding */ EndEventNodeSvg),
/* harmony export */   ErrorEventSymbolSvg: () => (/* binding */ ErrorEventSymbolSvg),
/* harmony export */   EscalationEventSymbolSvg: () => (/* binding */ EscalationEventSymbolSvg),
/* harmony export */   EventBasedGatewaySvg: () => (/* binding */ EventBasedGatewaySvg),
/* harmony export */   EventVariantSymbolSvg: () => (/* binding */ EventVariantSymbolSvg),
/* harmony export */   ExclusiveGatewaySvg: () => (/* binding */ ExclusiveGatewaySvg),
/* harmony export */   GatewayBaseSvg: () => (/* binding */ GatewayBaseSvg),
/* harmony export */   GatewayNodeSvg: () => (/* binding */ GatewayNodeSvg),
/* harmony export */   GroupNodeSvg: () => (/* binding */ GroupNodeSvg),
/* harmony export */   InclusiveGatewaySvg: () => (/* binding */ InclusiveGatewaySvg),
/* harmony export */   IntermediateCatchEventNodeSvg: () => (/* binding */ IntermediateCatchEventNodeSvg),
/* harmony export */   IntermediateThrowEventNodeSvg: () => (/* binding */ IntermediateThrowEventNodeSvg),
/* harmony export */   LaneNodeSvg: () => (/* binding */ LaneNodeSvg),
/* harmony export */   LinkEventSymbolSvg: () => (/* binding */ LinkEventSymbolSvg),
/* harmony export */   MessageEventSymbolSvg: () => (/* binding */ MessageEventSymbolSvg),
/* harmony export */   NODE_COLORS: () => (/* binding */ NODE_COLORS),
/* harmony export */   ParallelGatewaySvg: () => (/* binding */ ParallelGatewaySvg),
/* harmony export */   SignalEventSymbolSvg: () => (/* binding */ SignalEventSymbolSvg),
/* harmony export */   StartEventNodeSvg: () => (/* binding */ StartEventNodeSvg),
/* harmony export */   SubProcessNodeSvg: () => (/* binding */ SubProcessNodeSvg),
/* harmony export */   TaskNodeSvg: () => (/* binding */ TaskNodeSvg),
/* harmony export */   TextAnnotationNodeSvg: () => (/* binding */ TextAnnotationNodeSvg),
/* harmony export */   TimerEventSymbolSvg: () => (/* binding */ TimerEventSymbolSvg),
/* harmony export */   UnknownNodeSvg: () => (/* binding */ UnknownNodeSvg)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/NodeSvgs */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");








function DataObjectNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      isIcon: _isIcon,
      showFoldedPage: _showFoldedPage,
      showArrow: _showArrow,
      ...props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const bevel = 25;
  const arrowStartingX = 6;
  const arrowStartingY = 10;
  const showFoldedPage = _showFoldedPage !== null && _showFoldedPage !== void 0 ? _showFoldedPage : false;
  const showArrow = _showArrow !== null && _showArrow !== void 0 ? _showArrow : false;
  const isIcon = _isIcon !== null && _isIcon !== void 0 ? _isIcon : false;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `0,0 0,${height} ${width},${height} ${width},${bevel} ${width - bevel},0 ${width - bevel},0`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: isIcon ? __props.transform : `translate(${x},${y})`
    }), showFoldedPage === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${width - bevel},0 ${width - bevel},${bevel} ${width},${bevel}`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    }), showArrow === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${arrowStartingX},${arrowStartingY} ${arrowStartingX},20 20,20 20,26 30,15 20,4 20,${arrowStartingY} `,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    })]
  });
}
const deg30 = Math.PI / 6;
const cos30 = Math.cos(deg30);
const sin30 = Math.sin(deg30);
const NODE_COLORS = {
  startEvent: {
    foreground: "#4aa241",
    background: "#e8fae6"
  },
  intermediateCatchEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  boundaryEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  intermediateThrowEvent: {
    foreground: "#007a87",
    background: "#bddee1"
  },
  endEvent: {
    foreground: "#a30000",
    background: "#fce7e7"
  },
  gateway: {
    background: "#fef5ea",
    foreground: "#ec7b08"
  },
  task: {
    foreground: "black",
    background: "#efefef"
  },
  subProcess: {
    foreground: "black",
    background: "#efefef"
  }
};
function StartEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.startEvent.background,
      stroke: NODE_COLORS.startEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.startEvent.background,
      filled: false,
      stroke: NODE_COLORS.startEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function IntermediateCatchEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      filled: false,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function IntermediateThrowEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      filled: true,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function EndEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.endEvent.background,
      stroke: NODE_COLORS.endEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.endEvent.background,
      filled: true,
      stroke: NODE_COLORS.endEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function TaskNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    markers: _markers,
    variant: _variant,
    ...props
  } = {
    ..._props
  };
  const markers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_markers), [_markers]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "none";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      ...props
    }), markers.has("CallActivityPaletteIcon") && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x + (width / 2 - width / 3 / 2),
      y: y + (height - height / 3),
      strokeWidth: strokeWidth,
      width: width / 3,
      height: height / 3,
      fill: "black",
      stroke: "black",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: markers
    })]
  });
}
function GatewayNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: 8 + x,
      y: 8 + y,
      transform: `rotate(45,${x + width / 2},${y + height / 2})`,
      strokeWidth: strokeWidth,
      width: width / 1.4,
      height: height / 1.4,
      fill: NODE_COLORS.gateway.background,
      stroke: NODE_COLORS.gateway.foreground,
      strokeLinejoin: "round",
      rx: "5",
      ry: "5",
      ...props
    }), variant === "parallelGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ParallelGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: 4.5,
      cx: x + width / 2,
      cy: y + height / 2,
      size: 30
    }), variant === "exclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ExclusiveGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: 4.5,
      cx: x + width / 2,
      cy: y + height / 2,
      size: 30
    }), variant === "inclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InclusiveGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: 4.5,
      cx: x + width / 2,
      cy: y + height / 2,
      size: 40
    }), variant === "eventBasedGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventBasedGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: 4.5,
      cx: x + width / 2,
      cy: y + height / 2,
      size: 100
    }), variant === "complexGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ComplexGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: 4.5,
      cx: x + width / 2,
      cy: y + height / 2,
      size: 50
    })]
  });
}
function GatewayBaseSvg(_ref) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref;
  const diamondPoints = [{
    x: cx,
    y: cy - size
  }, {
    x: cx + size,
    y: cy
  }, {
    x: cx,
    y: cy + size
  }, {
    x: cx - size,
    y: cy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
    points: diamondPoints.map(point => `${point.x},${point.y}`).join(" "),
    stroke: stroke,
    strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2,
    fill: "none"
  });
}
function ParallelGatewaySvg(_ref2) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy - size / 2,
      x2: cx,
      y2: cy + size / 2,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - size / 2,
      y1: cy,
      x2: cx + size / 2,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    })]
  });
}
function ExclusiveGatewaySvg(_ref3) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref3;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - size / 3,
      y1: cy - size / 3,
      x2: cx + size / 3,
      y2: cy + size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx + size / 3,
      y1: cy - size / 3,
      x2: cx - size / 3,
      y2: cy + size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    })]
  });
}
function InclusiveGatewaySvg(_ref4) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref4;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: "none"
    })
  });
}
function EventBasedGatewaySvg(_ref5) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref5;
  const pentagonPoints = Array.from({
    length: 5
  }, (_, i) => {
    const angle = i * 2 * Math.PI / 5 - Math.PI / 2;
    return {
      x: cx + size / 4 * Math.cos(angle),
      y: cy + size / 4 * Math.sin(angle)
    };
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 3,
      stroke: stroke,
      strokeWidth: 1.5,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 2.5,
      stroke: stroke,
      strokeWidth: 1.5,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: pentagonPoints.map(point => `${point.x},${point.y}`).join(" "),
      stroke: stroke,
      strokeWidth: 2,
      fill: "none"
    })]
  });
}
function ComplexGatewaySvg(_ref6) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref6;
  const lineLength = size / 3;
  const diagonalLength = lineLength / Math.sqrt(2);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy - lineLength,
      x2: cx,
      y2: cy + lineLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - lineLength,
      y1: cy,
      x2: cx + lineLength,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - diagonalLength,
      y1: cy - diagonalLength,
      x2: cx + diagonalLength,
      y2: cy + diagonalLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx + diagonalLength,
      y1: cy - diagonalLength,
      x2: cx - diagonalLength,
      y2: cy + diagonalLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    })]
  });
}
const LaneNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    gutterWidth: _gutterWidth,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const gutterWidth = _gutterWidth !== null && _gutterWidth !== void 0 ? _gutterWidth : 40;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: x + gutterWidth,
      y1: y,
      x2: x + gutterWidth,
      y2: y + height,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
const SubProcessNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    rimWidth: _rimWidth,
    borderRadius: _borderRadius,
    icons: _icons,
    variant: _variant,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const icons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_icons), [_icons]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "other";
  const rimWidth = variant === "transaction" ? _rimWidth !== null && _rimWidth !== void 0 ? _rimWidth : 5 : 0;
  const borderRadius = variant === "transaction" ? _borderRadius !== null && _borderRadius !== void 0 ? _borderRadius : 10 : 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "transaction" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x + rimWidth,
      y: y + rimWidth,
      width: width - rimWidth * 2,
      height: height - rimWidth * 2,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: borderRadius - rimWidth,
      ry: borderRadius - rimWidth,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeDasharray: variant === "event" ? "10,5" : undefined,
      strokeLinejoin: "round",
      rx: borderRadius,
      ry: borderRadius,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: icons
    })]
  });
});
function TextAnnotationNodeSvg(__props) {
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props: _props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    showPlaceholder,
    ...props
  } = _props;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      ...props,
      x: x,
      y: y,
      fill: "transparent",
      d: `M20,0 L0,0 M0,0 L0,${height} M0,${height} L20,${height}`,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth,
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), showPlaceholder && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      x: "20%",
      y: "62.5%",
      style: {
        fontSize: "5em",
        fontWeight: "bold"
      },
      children: "Text"
    })]
  });
}
const GroupNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ...__props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    strokeDasharray: interactionRectStrokeDasharray,
    ...interactionRectProps
  } = _interactionRectProps;
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "14,10,3,10";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray,
      rx: 40,
      ry: 40
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      rx: "30",
      ry: "30",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
function UnknownNodeSvg(_props) {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "2,4";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "red",
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray
    })
  });
}
function EventVariantSymbolSvg(_ref7) {
  let {
    variant,
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref7;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "messageEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MessageEventSymbolSvg, {
      fill: fill !== null && fill !== void 0 ? fill : "none",
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "timerEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TimerEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "errorEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "escalationEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EscalationEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "cancelEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "compensateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CompensationEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "conditionalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConditionalEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      outerCircleRadius: outerCircleRadius
    }), variant === "linkEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LinkEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "signalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SignalEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "terminateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: cx,
        cy: cy,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2.5,
        fill: NODE_COLORS.endEvent.foreground,
        stroke: NODE_COLORS.endEvent.foreground,
        strokeLinejoin: "round",
        r: outerCircleRadius / 2
      })
    })]
  });
}
function MessageEventSymbolSvg(_ref8) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    fill,
    filled
  } = _ref8;
  const scaleFactor = isMorphingPanel ? 1.9 : 1;
  const scaledBodyWidth = innerCircleRadius * 1.2 * scaleFactor;
  const scaledBodyHeight = innerCircleRadius * 0.8 * scaleFactor;
  const envelopeBody = {
    topLeft: {
      x: cx - scaledBodyWidth / 2,
      y: cy - scaledBodyHeight / 2
    },
    bottomRight: {
      x: cx + scaledBodyWidth / 2,
      y: cy + scaledBodyHeight / 2
    }
  };
  const scaledFlapHeight = scaledBodyHeight * 0.5;
  const envelopeFlap = [{
    x: envelopeBody.topLeft.x,
    y: envelopeBody.topLeft.y
  }, {
    x: envelopeBody.bottomRight.x,
    y: envelopeBody.topLeft.y
  }, {
    x: cx,
    y: envelopeBody.topLeft.y + scaledFlapHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: envelopeBody.topLeft.x,
      y: envelopeBody.topLeft.y,
      width: scaledBodyWidth,
      height: scaledBodyHeight,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: envelopeFlap.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), filled && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[0].x,
        y1: envelopeFlap[0].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[1].x,
        y1: envelopeFlap[1].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
      })]
    })]
  });
}
function TimerEventSymbolSvg(_ref9) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref9;
  const scaleFactor = isMorphingPanel ? 1.4 : 1;
  const scaledPadding = 1.2 * (outerCircleRadius - innerCircleRadius) * scaleFactor;
  const scaledClockRadius = (innerCircleRadius - scaledPadding) * scaleFactor;
  const scaledShortHandLength = scaledClockRadius * 0.5;
  const scaledLongHandLength = scaledClockRadius * 0.9;
  const hourHandAngle = Math.PI / 12;
  const minuteHandAngle = -5 * Math.PI / 12;
  const hourHand = {
    x: cx + scaledShortHandLength * Math.cos(hourHandAngle),
    y: cy + scaledShortHandLength * Math.sin(hourHandAngle)
  };
  const minuteHand = {
    x: cx + scaledLongHandLength * Math.cos(minuteHandAngle),
    y: cy + scaledLongHandLength * Math.sin(minuteHandAngle)
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: scaledClockRadius,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: filled ? stroke : "transparent"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: hourHand.x,
      y2: hourHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: minuteHand.x,
      y2: minuteHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), Array.from({
      length: 12
    }, (_, index) => {
      const angle = index / 12 * 2 * Math.PI;
      const x1 = cx + scaledClockRadius * Math.cos(angle);
      const y1 = cy + scaledClockRadius * Math.sin(angle);
      const x2 = cx + (scaledClockRadius - scaledPadding * 0.5) * Math.cos(angle);
      const y2 = cy + (scaledClockRadius - scaledPadding * 0.5) * Math.sin(angle);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2,
        stroke: stroke,
        strokeWidth: 1.5
      }, index);
    })]
  });
}
function ErrorEventSymbolSvg(_ref10) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref10;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = innerCircleRadius - padding;
  const hy = innerCircleRadius - padding;
  const scaleFactor = 20;
  const shiftLeft = 3.5;
  const shiftUp = 1;
  const points = [{
    x: cx - shiftLeft,
    y: cy
  }, {
    x: cx - hx * 0.037 * scaleFactor - shiftLeft,
    y: cy + hy * 0.052 * scaleFactor - shiftUp
  }, {
    x: cx - hx * 0.003 * scaleFactor - shiftLeft,
    y: cy - hy * 0.05 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.027 * scaleFactor - shiftLeft,
    y: cy + hy * 0.016 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.058 * scaleFactor - shiftLeft,
    y: cy - hy * 0.046 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.029 * scaleFactor - shiftLeft,
    y: cy + hy * 0.066 * scaleFactor - shiftUp
  }, {
    x: cx - shiftLeft,
    y: cy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: points.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function EscalationEventSymbolSvg(_ref11) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref11;
  const scaleFactor = isMorphingPanel ? 1.8 : 1;
  const scaledArrowHeight = innerCircleRadius * 1.2 * scaleFactor;
  const scaledArrowBaseWidth = innerCircleRadius * scaleFactor;
  const midCenterYOffset = innerCircleRadius * 1.2 / 20 * scaleFactor;
  const arrow = [{
    x: cx - scaledArrowBaseWidth / 2,
    y: cy + scaledArrowHeight / 2
  }, {
    x: cx,
    y: cy - scaledArrowHeight / 2
  }, {
    x: cx + scaledArrowBaseWidth / 2,
    y: cy + scaledArrowHeight / 2
  }, {
    x: cx,
    y: cy + midCenterYOffset
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: arrow.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CancelEventSymbolSvg(_ref12) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref12;
  const farXPoint = 1.3;
  const closeXPoint = 1.7;
  const lowYPoint = 9;
  const highYPoint = 5;
  const cross = [{
    x: cx - innerCircleRadius / farXPoint,
    y: cy - innerCircleRadius + lowYPoint
  }, {
    x: cx - innerCircleRadius / closeXPoint,
    y: cy - innerCircleRadius + highYPoint
  }, {
    x: cx,
    y: cy - innerCircleRadius / highYPoint
  }, {
    x: cx + innerCircleRadius / closeXPoint,
    y: cy - innerCircleRadius + highYPoint
  }, {
    x: cx + innerCircleRadius / farXPoint,
    y: cy - innerCircleRadius + lowYPoint
  }, {
    x: cx + innerCircleRadius / highYPoint,
    y: cy
  }, {
    x: cx + innerCircleRadius / farXPoint,
    y: cy + innerCircleRadius - lowYPoint
  }, {
    x: cx + innerCircleRadius / closeXPoint,
    y: cy + innerCircleRadius - highYPoint
  }, {
    x: cx,
    y: cy + innerCircleRadius / highYPoint
  }, {
    x: cx - innerCircleRadius / closeXPoint,
    y: cy + innerCircleRadius - highYPoint
  }, {
    x: cx - innerCircleRadius / farXPoint,
    y: cy + innerCircleRadius - lowYPoint
  }, {
    x: cx - innerCircleRadius / highYPoint,
    y: cy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: cross.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CompensationEventSymbolSvg(_ref13) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref13;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding * 0.6;
  const hy = y + innerCircleRadius - padding * 0.2;
  const rightOffset = 0.15 * innerCircleRadius;
  const firstTriangle = [{
    x: cx + hx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - rightOffset,
    y: cy
  }, {
    x: cx + hx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  const secondTriangle = [{
    x: cx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - hx - rightOffset,
    y: cy
  }, {
    x: cx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: firstTriangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: secondTriangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function ConditionalEventSymbolSvg(_ref14) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    outerCircleRadius,
    filled
  } = _ref14;
  const scaleFactor = isMorphingPanel ? 1.8 : 1;
  const squareSize = outerCircleRadius * 1.1 * scaleFactor;
  const halfSquareSize = squareSize / 2;
  const lineSpacing = squareSize / 5;
  const lineBuffer = isMorphingPanel ? 50 : 5;
  const x1 = cx - halfSquareSize + lineBuffer;
  const x2 = cx + halfSquareSize - lineBuffer;
  const squareX = cx - halfSquareSize;
  const squareY = cy - halfSquareSize;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: squareX,
      y: squareY,
      width: squareSize,
      height: squareSize,
      fill: filled ? stroke : "transparent",
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), [...Array(4)].map((_, index) => {
      const lineY = squareY + lineSpacing * (index + 1);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: lineY,
        x2: x2,
        y2: lineY,
        stroke: stroke,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
      }, index);
    })]
  });
}
function LinkEventSymbolSvg(_ref15) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref15;
  const scaleFactor = isMorphingPanel ? 50 : 1;
  const arrowHeight = innerCircleRadius * 1.2;
  const arrowBaseWidth = innerCircleRadius * 1;
  const shiftLeft = 6;
  const rectangleHeight = 5;
  const arrowPadding = 1;
  const arrow = [{
    x: cx - arrowBaseWidth / 2 - shiftLeft - scaleFactor,
    y: cy + arrowHeight / 2 - rectangleHeight
  }, {
    x: cx - arrowBaseWidth / 2 - shiftLeft - scaleFactor,
    y: cy - arrowHeight / 2 + rectangleHeight
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 + rectangleHeight
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 - arrowPadding - scaleFactor
  }, {
    x: cx + arrowBaseWidth / 2 + 7 + scaleFactor,
    y: cy
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 + arrowPadding + scaleFactor
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 - rectangleHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: arrow.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function SignalEventSymbolSvg(_ref16) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref16;
  const scaleFactor = isMorphingPanel ? 1.2 : 1;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = (x + innerCircleRadius - padding) * scaleFactor;
  const hy = (y + innerCircleRadius - padding) * scaleFactor;
  const triangle = [{
    x: cx + cos30 * hx,
    y: padding / 4 * scaleFactor + cy + sin30 * hy
  }, {
    x: cx - cos30 * hx,
    y: padding / 4 * scaleFactor + cy + sin30 * hy
  }, {
    x: cx,
    y: padding / 4 * scaleFactor + cy - hy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: triangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function ActivityNodeIcons(_ref17) {
  let {
    x,
    y,
    width,
    height,
    icons
  } = _ref17;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Loop) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u21BB"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.AdHocSubProcess) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "~"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Compensation) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u23EA"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Collapsed) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
        x: x + width / 2 - 15,
        y: y + height - 20 - _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH,
        width: 30,
        height: 20,
        fill: "transparent",
        stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
        strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
        fontSize: "2em",
        textAnchor: "middle",
        dominantBaseline: "auto",
        fontWeight: "bold",
        x: x + width / 2,
        y: 1 + y + height,
        children: "+"
      })]
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceParallel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2 - 7}, ${y + height - 15}) rotate(90)`,
      children: "\u2630"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceSequential) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u2630"
    })]
  });
}
try {
    // @ts-ignore
    DataObjectNodeSvg.displayName = "DataObjectNodeSvg";
    // @ts-ignore
    DataObjectNodeSvg.__docgenInfo = { "description": "", "displayName": "DataObjectNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isIcon": { "defaultValue": null, "description": "", "name": "isIcon", "required": false, "type": { "name": "boolean" } }, "showFoldedPage": { "defaultValue": null, "description": "", "name": "showFoldedPage", "required": false, "type": { "name": "boolean" } }, "showArrow": { "defaultValue": null, "description": "", "name": "showArrow", "required": false, "type": { "name": "boolean" } }, "transform": { "defaultValue": null, "description": "", "name": "transform", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg"] = { docgenInfo: DataObjectNodeSvg.__docgenInfo, name: "DataObjectNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNodeSvg.displayName = "StartEventNodeSvg";
    // @ts-ignore
    StartEventNodeSvg.__docgenInfo = { "description": "", "displayName": "StartEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg"] = { docgenInfo: StartEventNodeSvg.__docgenInfo, name: "StartEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNodeSvg.displayName = "IntermediateCatchEventNodeSvg";
    // @ts-ignore
    IntermediateCatchEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg"] = { docgenInfo: IntermediateCatchEventNodeSvg.__docgenInfo, name: "IntermediateCatchEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNodeSvg.displayName = "IntermediateThrowEventNodeSvg";
    // @ts-ignore
    IntermediateThrowEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg"] = { docgenInfo: IntermediateThrowEventNodeSvg.__docgenInfo, name: "IntermediateThrowEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNodeSvg.displayName = "EndEventNodeSvg";
    // @ts-ignore
    EndEventNodeSvg.__docgenInfo = { "description": "", "displayName": "EndEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg"] = { docgenInfo: EndEventNodeSvg.__docgenInfo, name: "EndEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNodeSvg.displayName = "TaskNodeSvg";
    // @ts-ignore
    TaskNodeSvg.__docgenInfo = { "description": "", "displayName": "TaskNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "markers": { "defaultValue": null, "description": "", "name": "markers", "required": false, "type": { "name": "(ActivityNodeMarker | \"CallActivityPaletteIcon\")[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"businessRuleTask\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"userTask\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg"] = { docgenInfo: TaskNodeSvg.__docgenInfo, name: "TaskNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNodeSvg.displayName = "GatewayNodeSvg";
    // @ts-ignore
    GatewayNodeSvg.__docgenInfo = { "description": "", "displayName": "GatewayNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg"] = { docgenInfo: GatewayNodeSvg.__docgenInfo, name: "GatewayNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayBaseSvg.displayName = "GatewayBaseSvg";
    // @ts-ignore
    GatewayBaseSvg.__docgenInfo = { "description": "", "displayName": "GatewayBaseSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GatewayBaseSvg"] = { docgenInfo: GatewayBaseSvg.__docgenInfo, name: "GatewayBaseSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GatewayBaseSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ParallelGatewaySvg.displayName = "ParallelGatewaySvg";
    // @ts-ignore
    ParallelGatewaySvg.__docgenInfo = { "description": "", "displayName": "ParallelGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ParallelGatewaySvg"] = { docgenInfo: ParallelGatewaySvg.__docgenInfo, name: "ParallelGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ParallelGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ExclusiveGatewaySvg.displayName = "ExclusiveGatewaySvg";
    // @ts-ignore
    ExclusiveGatewaySvg.__docgenInfo = { "description": "", "displayName": "ExclusiveGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ExclusiveGatewaySvg"] = { docgenInfo: ExclusiveGatewaySvg.__docgenInfo, name: "ExclusiveGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ExclusiveGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    InclusiveGatewaySvg.displayName = "InclusiveGatewaySvg";
    // @ts-ignore
    InclusiveGatewaySvg.__docgenInfo = { "description": "", "displayName": "InclusiveGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#InclusiveGatewaySvg"] = { docgenInfo: InclusiveGatewaySvg.__docgenInfo, name: "InclusiveGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#InclusiveGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventBasedGatewaySvg.displayName = "EventBasedGatewaySvg";
    // @ts-ignore
    EventBasedGatewaySvg.__docgenInfo = { "description": "", "displayName": "EventBasedGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventBasedGatewaySvg"] = { docgenInfo: EventBasedGatewaySvg.__docgenInfo, name: "EventBasedGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventBasedGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ComplexGatewaySvg.displayName = "ComplexGatewaySvg";
    // @ts-ignore
    ComplexGatewaySvg.__docgenInfo = { "description": "", "displayName": "ComplexGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ComplexGatewaySvg"] = { docgenInfo: ComplexGatewaySvg.__docgenInfo, name: "ComplexGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ComplexGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNodeSvg.displayName = "TextAnnotationNodeSvg";
    // @ts-ignore
    TextAnnotationNodeSvg.__docgenInfo = { "description": "", "displayName": "TextAnnotationNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "showPlaceholder": { "defaultValue": null, "description": "", "name": "showPlaceholder", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg"] = { docgenInfo: TextAnnotationNodeSvg.__docgenInfo, name: "TextAnnotationNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNodeSvg.displayName = "UnknownNodeSvg";
    // @ts-ignore
    UnknownNodeSvg.__docgenInfo = { "description": "", "displayName": "UnknownNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg"] = { docgenInfo: UnknownNodeSvg.__docgenInfo, name: "UnknownNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventVariantSymbolSvg.displayName = "EventVariantSymbolSvg";
    // @ts-ignore
    EventVariantSymbolSvg.__docgenInfo = { "description": "", "displayName": "EventVariantSymbolSvg", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } }, "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": false, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg"] = { docgenInfo: EventVariantSymbolSvg.__docgenInfo, name: "EventVariantSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    MessageEventSymbolSvg.displayName = "MessageEventSymbolSvg";
    // @ts-ignore
    MessageEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "MessageEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg"] = { docgenInfo: MessageEventSymbolSvg.__docgenInfo, name: "MessageEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TimerEventSymbolSvg.displayName = "TimerEventSymbolSvg";
    // @ts-ignore
    TimerEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "TimerEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg"] = { docgenInfo: TimerEventSymbolSvg.__docgenInfo, name: "TimerEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ErrorEventSymbolSvg.displayName = "ErrorEventSymbolSvg";
    // @ts-ignore
    ErrorEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ErrorEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg"] = { docgenInfo: ErrorEventSymbolSvg.__docgenInfo, name: "ErrorEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EscalationEventSymbolSvg.displayName = "EscalationEventSymbolSvg";
    // @ts-ignore
    EscalationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "EscalationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg"] = { docgenInfo: EscalationEventSymbolSvg.__docgenInfo, name: "EscalationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CancelEventSymbolSvg.displayName = "CancelEventSymbolSvg";
    // @ts-ignore
    CancelEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CancelEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg"] = { docgenInfo: CancelEventSymbolSvg.__docgenInfo, name: "CancelEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CompensationEventSymbolSvg.displayName = "CompensationEventSymbolSvg";
    // @ts-ignore
    CompensationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CompensationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg"] = { docgenInfo: CompensationEventSymbolSvg.__docgenInfo, name: "CompensationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ConditionalEventSymbolSvg.displayName = "ConditionalEventSymbolSvg";
    // @ts-ignore
    ConditionalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ConditionalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg"] = { docgenInfo: ConditionalEventSymbolSvg.__docgenInfo, name: "ConditionalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LinkEventSymbolSvg.displayName = "LinkEventSymbolSvg";
    // @ts-ignore
    LinkEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "LinkEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg"] = { docgenInfo: LinkEventSymbolSvg.__docgenInfo, name: "LinkEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SignalEventSymbolSvg.displayName = "SignalEventSymbolSvg";
    // @ts-ignore
    SignalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "SignalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg"] = { docgenInfo: SignalEventSymbolSvg.__docgenInfo, name: "SignalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ActivityNodeIcons.displayName = "ActivityNodeIcons";
    // @ts-ignore
    ActivityNodeIcons.__docgenInfo = { "description": "", "displayName": "ActivityNodeIcons", "props": { "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": true, "type": { "name": "number" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": true, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": true, "type": { "name": "Set<ActivityNodeMarker>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons"] = { docgenInfo: ActivityNodeIcons.__docgenInfo, name: "ActivityNodeIcons", path: "src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNodeSvg.displayName = "LaneNodeSvg";
    // @ts-ignore
    LaneNodeSvg.__docgenInfo = { "description": "", "displayName": "LaneNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "gutterWidth": { "defaultValue": null, "description": "", "name": "gutterWidth", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg"] = { docgenInfo: LaneNodeSvg.__docgenInfo, name: "LaneNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNodeSvg.displayName = "SubProcessNodeSvg";
    // @ts-ignore
    SubProcessNodeSvg.__docgenInfo = { "description": "", "displayName": "SubProcessNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "borderRadius": { "defaultValue": null, "description": "", "name": "borderRadius", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": false, "type": { "name": "ActivityNodeMarker[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"event\"" }, { "value": "\"transaction\"" }, { "value": "\"multi-instance\"" }, { "value": "\"other\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg"] = { docgenInfo: SubProcessNodeSvg.__docgenInfo, name: "SubProcessNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNodeSvg.displayName = "GroupNodeSvg";
    // @ts-ignore
    GroupNodeSvg.__docgenInfo = { "description": "", "displayName": "GroupNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg"] = { docgenInfo: GroupNodeSvg.__docgenInfo, name: "GroupNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"subProcess\"" }, { "value": "\"task\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"businessRuleTask\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx":
/*!********************************************************************!*\
  !*** ./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useEventNodeMorphingActions: () => (/* binding */ useEventNodeMorphingActions)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _NodeIcons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");








function useEventNodeMorphingActions(event) {
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const foregroundColor = _NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.NODE_COLORS[event.__$$element].foreground;
  const backgroundColor = _NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.NODE_COLORS[event.__$$element].background;
  const filled = event.__$$element === "intermediateThrowEvent" || event.__$$element === "endEvent";
  const morphEvent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(eventDefinitionElement => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_5__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_6__.visitFlowElementsAndArtifacts)(process, _ref => {
        let {
          array,
          index,
          owner,
          element
        } = _ref;
        var _a;
        if (element["@_id"] === event["@_id"] && element.__$$element === event.__$$element) {
          if (eventDefinitionElement === undefined) {
            element.eventDefinition = undefined;
            return false;
          }
          (_a = element.eventDefinition) !== null && _a !== void 0 ? _a : element.eventDefinition = [];
          switch (eventDefinitionElement) {
            case "cancelEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "cancelEventDefinition"
              };
              break;
            case "compensateEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "compensateEventDefinition"
              };
              break;
            case "conditionalEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "conditionalEventDefinition",
                condition: {
                  "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)()
                }
              };
              break;
            case "errorEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "errorEventDefinition"
              };
              break;
            case "escalationEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "escalationEventDefinition"
              };
              break;
            case "linkEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "linkEventDefinition",
                "@_name": ""
              };
              break;
            case "messageEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "messageEventDefinition"
              };
              break;
            case "signalEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "signalEventDefinition"
              };
              break;
            case "terminateEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "terminateEventDefinition"
              };
              break;
            case "timerEventDefinition":
              element.eventDefinition[0] = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
                __$$element: "timerEventDefinition"
              };
              break;
          }
          element.eventDefinition[0] = {
            "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_7__.generateUuid)(),
            __$$element: eventDefinitionElement
          };
          return false;
        }
      });
    });
  }, [bpmnEditorStoreApi, event]);
  const morphingActions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    return [{
      icon: event.__$$element === "startEvent" ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.StartEventIcon, {
        variant: undefined
      }) : event.__$$element === "intermediateThrowEvent" ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.IntermediateThrowEventIcon, {
        variant: undefined
      }) : event.__$$element === "endEvent" ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EndEventIcon, {
        variant: undefined
      }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}),
      key: "1",
      title: "None",
      id: "none",
      action: () => morphEvent(undefined)
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        fill: backgroundColor,
        variant: "messageEventDefinition"
      }),
      key: "2",
      title: "Message",
      id: "messageEventDefinition",
      action: () => morphEvent("messageEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "timerEventDefinition"
      }),
      key: "3",
      title: "Timer",
      id: "timerEventDefinition",
      action: () => morphEvent("timerEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "errorEventDefinition"
      }),
      key: "4",
      title: "Error",
      id: "errorEventDefinition",
      action: () => morphEvent("errorEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "escalationEventDefinition"
      }),
      key: "5",
      title: "Escalation",
      id: "escalationEventDefinition",
      action: () => morphEvent("escalationEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "cancelEventDefinition"
      }),
      key: "6",
      title: "Cancelation",
      id: "cancelEventDefinition",
      action: () => morphEvent("cancelEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "compensateEventDefinition"
      }),
      key: "7",
      title: "Compensation",
      id: "compensateEventDefinition",
      action: () => morphEvent("compensateEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "conditionalEventDefinition"
      }),
      key: "8",
      title: "Conditional",
      id: "conditionalEventDefinition",
      action: () => morphEvent("conditionalEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "linkEventDefinition"
      }),
      key: "9",
      title: "Link",
      id: "linkEventDefinition",
      action: () => morphEvent("linkEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EventDefinitionIcon, {
        stroke: foregroundColor,
        filled: filled,
        variant: "signalEventDefinition"
      }),
      key: "0",
      title: "Signal",
      id: "signalEventDefinition",
      action: () => morphEvent("signalEventDefinition")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.EndEventIcon, {
        variant: "terminateEventDefinition"
      }),
      key: "!",
      title: "Terminate",
      id: "terminateEventDefinition",
      action: () => morphEvent("terminateEventDefinition")
    }];
  }, [event.__$$element, foregroundColor, filled, morphEvent]);
  return morphingActions;
}
try {
    // @ts-ignore
    useEventNodeMorphingActions.displayName = "useEventNodeMorphingActions";
    // @ts-ignore
    useEventNodeMorphingActions.__docgenInfo = { "description": "", "displayName": "useEventNodeMorphingActions", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"boundaryEvent\"" }, { "value": "\"endEvent\"" }, { "value": "\"intermediateCatchEvent\"" }, { "value": "\"intermediateThrowEvent\"" }, { "value": "\"startEvent\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; } & BPMN20__tBoundaryEvent__extensionElements) | ({ __?: undefined; } & BPMN20__tEndEvent__extensionElements) | ({ ...; } & BPMN20__tIntermediateCatchEvent__extensionElements) | ({ ...; } & BPMN20__tIntermediateThrowEvent__extensionElements) | ({ ...; } & BPMN20__tStartEvent__extensionElements) | ..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "@_parallelMultiple": { "defaultValue": null, "description": "", "name": "@_parallelMultiple", "required": false, "type": { "name": "boolean" } }, "dataOutput": { "defaultValue": null, "description": "", "name": "dataOutput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "outputSet": { "defaultValue": null, "description": "", "name": "outputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; inputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "eventDefinition": { "defaultValue": null, "description": "", "name": "eventDefinition", "required": false, "type": { "name": "(({ __$$element: \"cancelEventDefinition\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tCancelEventDefinition__exten..." } }, "eventDefinitionRef": { "defaultValue": null, "description": "", "name": "eventDefinitionRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "@_cancelActivity": { "defaultValue": null, "description": "", "name": "@_cancelActivity", "required": false, "type": { "name": "boolean" } }, "@_attachedToRef": { "defaultValue": null, "description": "", "name": "@_attachedToRef", "required": true, "type": { "name": "string" } }, "dataInput": { "defaultValue": null, "description": "", "name": "dataInput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; })[] | undefined" } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "inputSet": { "defaultValue": null, "description": "", "name": "inputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; outputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "@_isInterrupting": { "defaultValue": null, "description": "", "name": "@_isInterrupting", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx#useEventNodeMorphingActions"] = { docgenInfo: useEventNodeMorphingActions.__docgenInfo, name: "useEventNodeMorphingActions", path: "src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx#useEventNodeMorphingActions" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,