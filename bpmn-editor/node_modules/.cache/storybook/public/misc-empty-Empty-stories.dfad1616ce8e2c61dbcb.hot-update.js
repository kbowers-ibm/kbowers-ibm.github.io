"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/dropdown/InteractiveDropdown.tsx":
/*!**************************************************************!*\
  !*** ./src/propertiesPanel/dropdown/InteractiveDropdown.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Dropdown/Dropdown */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Dropdown/Dropdown.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Dropdown_DropdownToggle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Dropdown/DropdownToggle */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Dropdown_DropdownItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Dropdown/DropdownItem */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Dropdown/DropdownItem.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_check_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/check-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/check-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/plus-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js");







const InteractiveDropdown = () => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [selectedValue, setSelectedValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);
  const [customItems, setCustomItems] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
  const [isCreatingNew, setIsCreatingNew] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [newItemInput, setNewItemInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
  const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (isCreatingNew && inputRef.current) {
      inputRef.current.focus();
    }
  }, [isCreatingNew]);
  const handleToggle = shouldOpen => {
    if (!isCreatingNew) {
      setIsOpen(shouldOpen);
    }
  };
  const handleNewItemInput = value => {
    setNewItemInput(value);
  };
  const saveNewItem = () => {
    if (newItemInput.trim()) {
      const updatedItems = [...customItems, newItemInput.trim()];
      setCustomItems(updatedItems);
      setSelectedValue(newItemInput.trim());
      setIsCreatingNew(false);
      setNewItemInput("");
    }
  };
  const handleKeyPress = event => {
    if (event.key === "Enter") {
      saveNewItem();
    }
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      width: "200px"
    },
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_2__.Dropdown, {
      isOpen: isOpen,
      toggle: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown_DropdownToggle__WEBPACK_IMPORTED_MODULE_3__.DropdownToggle, {
        onToggle: handleToggle,
        children: selectedValue || "Select an option"
      }),
      dropdownItems: isCreatingNew ? [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        style: {
          display: "flex",
          alignItems: "center",
          padding: "10px"
        },
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
          ref: inputRef,
          type: "text",
          value: newItemInput,
          onChange: e => handleNewItemInput(e.target.value),
          onKeyPress: handleKeyPress,
          placeholder: "Enter new item",
          style: {
            marginRight: "10px",
            flexGrow: 1
          }
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_check_icon__WEBPACK_IMPORTED_MODULE_4__.CheckIcon, {
          onClick: saveNewItem,
          style: {
            cursor: "pointer",
            color: "green"
          }
        })]
      }, "new-item-input")] : [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown_DropdownItem__WEBPACK_IMPORTED_MODULE_5__.DropdownItem, {
        icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_6__.PlusCircleIcon, {}),
        onClick: () => {
          setIsCreatingNew(true);
        },
        children: "New"
      }, "new-option"), ...customItems.map((item, index) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown_DropdownItem__WEBPACK_IMPORTED_MODULE_5__.DropdownItem, {
        onClick: () => {
          setSelectedValue(item);
          setIsOpen(false);
        },
        children: item
      }, `custom-item-${index}`))]
    })
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InteractiveDropdown);

/***/ }),

/***/ "./src/propertiesPanel/escalationCodeSelector/EscalationCodeSelector.tsx":
/*!*******************************************************************************!*\
  !*** ./src/propertiesPanel/escalationCodeSelector/EscalationCodeSelector.tsx ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EscalationCodeSelector: () => (/* binding */ EscalationCodeSelector)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _EscalationCodeSelector_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EscalationCodeSelector.css */ "./src/propertiesPanel/escalationCodeSelector/EscalationCodeSelector.css");
/* harmony import */ var _dropdown_InteractiveDropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dropdown/InteractiveDropdown */ "./src/propertiesPanel/dropdown/InteractiveDropdown.tsx");







function EscalationCodeSelector(_ref) {
  let {
    element
  } = _ref;
  var _a, _b;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings);
  const currentValue = ((_b = (_a = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(eventDef => eventDef.__$$element === "escalationEventDefinition")) === null || _b === void 0 ? void 0 : _b["@_drools:esccode"]) || "";
  const handleValueChange = newValue => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref2 => {
        let {
          element: e
        } = _ref2;
        var _a;
        if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
          const escalationEventDefinition = (_a = e.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(event => event.__$$element === "escalationEventDefinition");
          if (escalationEventDefinition) {
            escalationEventDefinition["@_drools:esccode"] = newValue;
            escalationEventDefinition["@_escalationRef"] = e["@_id"];
          }
        }
      });
    });
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.FormSection, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.FormGroup, {
      label: "Escalation Code",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_dropdown_InteractiveDropdown__WEBPACK_IMPORTED_MODULE_3__.InteractiveDropdown, {
        value: currentValue,
        onChange: handleValueChange,
        items: [],
        placeholder: "Select Escalation Code"
      })
    })
  });
}
try {
    // @ts-ignore
    EscalationCodeSelector.displayName = "EscalationCodeSelector";
    // @ts-ignore
    EscalationCodeSelector.__docgenInfo = { "description": "", "displayName": "EscalationCodeSelector", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithEscalationCode" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/escalationCodeSelector/EscalationCodeSelector.tsx#EscalationCodeSelector"] = { docgenInfo: EscalationCodeSelector.__docgenInfo, name: "EscalationCodeSelector", path: "src/propertiesPanel/escalationCodeSelector/EscalationCodeSelector.tsx#EscalationCodeSelector" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,