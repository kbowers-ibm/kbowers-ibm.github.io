"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js":
/*!**********************************************************!*\
  !*** ../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_NODE_STROKE_WIDTH: () => (/* binding */ DEFAULT_NODE_STROKE_WIDTH),
/* harmony export */   ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches: () => (/* binding */ ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches),
/* harmony export */   containerNodeInteractionRectCssClassName: () => (/* binding */ containerNodeInteractionRectCssClassName),
/* harmony export */   containerNodeVisibleRectCssClassName: () => (/* binding */ containerNodeVisibleRectCssClassName),
/* harmony export */   normalize: () => (/* binding */ normalize)
/* harmony export */ });
/* harmony import */ var _NodeSvgs_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NodeSvgs.css */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");

const DEFAULT_NODE_STROKE_WIDTH = 1.5;
const ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches = {
  flag: false
};
const containerNodeInteractionRectCssClassName = "xyflow-react-kie-diagram--node-containerNode-interactionRect";
const containerNodeVisibleRectCssClassName = "xyflow-react-kie-diagram--node-containerNode-visibleRect";
function normalize(_props) {
  const {
    strokeWidth: _strokeWidth,
    x: _x,
    y: _y,
    width: _width,
    height: _height,
    fillColor: _fillColor,
    strokeColor: _strokeColor,
    ...props
  } = _props;
  const strokeWidth = _strokeWidth !== null && _strokeWidth !== void 0 ? _strokeWidth : DEFAULT_NODE_STROKE_WIDTH;
  const halfStrokeWidth = strokeWidth / 2;
  const x = _x + halfStrokeWidth;
  const y = _y + halfStrokeWidth;
  const width = _width - strokeWidth;
  const height = _height - strokeWidth;
  return {
    strokeWidth,
    x,
    y,
    width: width + (___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches.flag ? 0.1 : 0),
    height: height + (___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches.flag ? 0 : 0.1),
    props
  };
}

/***/ }),

/***/ "./src/diagram/nodes/NodeSvgs.tsx":
/*!****************************************!*\
  !*** ./src/diagram/nodes/NodeSvgs.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeIcons: () => (/* binding */ ActivityNodeIcons),
/* harmony export */   CancelEventSymbolSvg: () => (/* binding */ CancelEventSymbolSvg),
/* harmony export */   CompensationEventSymbolSvg: () => (/* binding */ CompensationEventSymbolSvg),
/* harmony export */   ConditionalEventSymbolSvg: () => (/* binding */ ConditionalEventSymbolSvg),
/* harmony export */   DataObjectNodeSvg: () => (/* binding */ DataObjectNodeSvg),
/* harmony export */   EndEventNodeSvg: () => (/* binding */ EndEventNodeSvg),
/* harmony export */   ErrorEventSymbolSvg: () => (/* binding */ ErrorEventSymbolSvg),
/* harmony export */   EscalationEventSymbolSvg: () => (/* binding */ EscalationEventSymbolSvg),
/* harmony export */   EventVariantSymbolSvg: () => (/* binding */ EventVariantSymbolSvg),
/* harmony export */   GatewayNodeSvg: () => (/* binding */ GatewayNodeSvg),
/* harmony export */   GroupNodeSvg: () => (/* binding */ GroupNodeSvg),
/* harmony export */   IntermediateCatchEventNodeSvg: () => (/* binding */ IntermediateCatchEventNodeSvg),
/* harmony export */   IntermediateThrowEventNodeSvg: () => (/* binding */ IntermediateThrowEventNodeSvg),
/* harmony export */   LaneNodeSvg: () => (/* binding */ LaneNodeSvg),
/* harmony export */   LinkEventSymbolSvg: () => (/* binding */ LinkEventSymbolSvg),
/* harmony export */   MessageEventSymbolSvg: () => (/* binding */ MessageEventSymbolSvg),
/* harmony export */   NODE_COLORS: () => (/* binding */ NODE_COLORS),
/* harmony export */   SignalEventSymbolSvg: () => (/* binding */ SignalEventSymbolSvg),
/* harmony export */   StartEventNodeSvg: () => (/* binding */ StartEventNodeSvg),
/* harmony export */   SubProcessNodeSvg: () => (/* binding */ SubProcessNodeSvg),
/* harmony export */   TaskNodeSvg: () => (/* binding */ TaskNodeSvg),
/* harmony export */   TextAnnotationNodeSvg: () => (/* binding */ TextAnnotationNodeSvg),
/* harmony export */   TimerEventSymbolSvg: () => (/* binding */ TimerEventSymbolSvg),
/* harmony export */   UnknownNodeSvg: () => (/* binding */ UnknownNodeSvg)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/NodeSvgs */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");








function DataObjectNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      isIcon: _isIcon,
      showFoldedPage: _showFoldedPage,
      showArrow: _showArrow,
      ...props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const bevel = 25;
  const arrowStartingX = 6;
  const arrowStartingY = 10;
  const showFoldedPage = _showFoldedPage !== null && _showFoldedPage !== void 0 ? _showFoldedPage : false;
  const showArrow = _showArrow !== null && _showArrow !== void 0 ? _showArrow : false;
  const isIcon = _isIcon !== null && _isIcon !== void 0 ? _isIcon : false;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `0,0 0,${height} ${width},${height} ${width},${bevel} ${width - bevel},0 ${width - bevel},0`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: isIcon ? __props.transform : `translate(${x},${y})`
    }), showFoldedPage === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${width - bevel},0 ${width - bevel},${bevel} ${width},${bevel}`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    }), showArrow === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${arrowStartingX},${arrowStartingY} ${arrowStartingX},20 20,20 20,26 30,15 20,4 20,${arrowStartingY} `,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    })]
  });
}
const deg30 = Math.PI / 6;
const deg150 = 150 * (Math.PI / 180);
const deg140 = 140 * (Math.PI / 180);
const cos30 = Math.cos(deg30);
const sin30 = Math.sin(deg30);
const cos150 = Math.cos(deg150);
const sin150 = Math.sin(deg150);
const cos140 = Math.cos(deg140);
const sin140 = Math.sin(deg140);
const NODE_COLORS = {
  startEvent: {
    foreground: "#4aa241",
    background: "#e8fae6"
  },
  intermediateCatchEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  boundaryEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  intermediateThrowEvent: {
    foreground: "#007a87",
    background: "#bddee1"
  },
  endEvent: {
    foreground: "#a30000",
    background: "#fce7e7"
  },
  gateway: {
    background: "#fef5ea",
    foreground: "#ec7b08"
  },
  task: {
    foreground: "black",
    background: "#efefef"
  },
  subProcess: {
    foreground: "black",
    background: "#efefef"
  }
};
function StartEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#e8fae6",
      stroke: "#4aa241",
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: "#e8fae6",
      filled: false,
      stroke: "#4aa241",
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function IntermediateCatchEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#fbefcf",
      stroke: "#e6a000",
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#fbefcf",
      stroke: "#e6a000",
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: "#fbefcf",
      filled: false,
      stroke: "#e6a000",
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function IntermediateThrowEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      filled: true,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function EndEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.endEvent.background,
      stroke: NODE_COLORS.endEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.endEvent.background,
      filled: true,
      stroke: NODE_COLORS.endEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function TaskNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    markers: _markers,
    variant: _variant,
    ...props
  } = {
    ..._props
  };
  const markers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_markers), [_markers]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "none";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      ...props
    }), markers.has("CallActivityPaletteIcon") && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x + (width / 2 - width / 3 / 2),
      y: y + (height - height / 3),
      strokeWidth: strokeWidth,
      width: width / 3,
      height: height / 3,
      fill: "black",
      stroke: "black",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: markers
    })]
  });
}
function GatewayNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: 8 + x,
      y: 8 + y,
      transform: `rotate(45,${x + width / 2},${y + height / 2})`,
      strokeWidth: strokeWidth,
      width: width / 1.4,
      height: height / 1.4,
      fill: NODE_COLORS.gateway.background,
      stroke: NODE_COLORS.gateway.foreground,
      strokeLinejoin: "round",
      rx: "5",
      ry: "5",
      ...props
    }), variant === "parallelGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        strokeLinecap: "round",
        x1: "18",
        y1: 1 + height / 2,
        x2: width - 16,
        y2: 1 + height / 2,
        stroke: NODE_COLORS.gateway.foreground,
        strokeWidth: "6"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        strokeLinecap: "round",
        x1: 1 + width / 2,
        y1: "18",
        x2: 1 + width / 2,
        y2: height - 16,
        stroke: NODE_COLORS.gateway.foreground,
        strokeWidth: "6"
      })]
    }), variant === "exclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
        transform: `rotate(45,${x + width / 2},${y + height / 2})`,
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
          strokeLinecap: "round",
          x1: "18",
          y1: 1 + height / 2,
          x2: width - 16,
          y2: 1 + height / 2,
          stroke: NODE_COLORS.gateway.foreground,
          strokeWidth: "6"
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
          strokeLinecap: "round",
          x1: 1 + width / 2,
          y1: "18",
          x2: 1 + width / 2,
          y2: height - 16,
          stroke: NODE_COLORS.gateway.foreground,
          strokeWidth: "6"
        })]
      })
    }), variant === "inclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: x + width / 2,
        cy: y + height / 2,
        strokeWidth: 6,
        width: width / 2,
        height: height / 2,
        stroke: NODE_COLORS.gateway.foreground,
        strokeLinejoin: "round",
        fill: "transparent",
        r: width / 5,
        ...props
      })
    }), variant === "eventBasedGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}), variant === "complexGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {})]
  });
}
const LaneNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    gutterWidth: _gutterWidth,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const gutterWidth = _gutterWidth !== null && _gutterWidth !== void 0 ? _gutterWidth : 40;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: x + gutterWidth,
      y1: y,
      x2: x + gutterWidth,
      y2: y + height,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
const SubProcessNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    rimWidth: _rimWidth,
    borderRadius: _borderRadius,
    icons: _icons,
    variant: _variant,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const icons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_icons), [_icons]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "other";
  const rimWidth = variant === "transaction" ? _rimWidth !== null && _rimWidth !== void 0 ? _rimWidth : 5 : 0;
  const borderRadius = variant === "transaction" ? _borderRadius !== null && _borderRadius !== void 0 ? _borderRadius : 10 : 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "transaction" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x + rimWidth,
      y: y + rimWidth,
      width: width - rimWidth * 2,
      height: height - rimWidth * 2,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: borderRadius - rimWidth,
      ry: borderRadius - rimWidth,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeDasharray: variant === "event" ? "10,5" : undefined,
      strokeLinejoin: "round",
      rx: borderRadius,
      ry: borderRadius,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: icons
    })]
  });
});
function TextAnnotationNodeSvg(__props) {
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props: _props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    showPlaceholder,
    ...props
  } = _props;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      ...props,
      x: x,
      y: y,
      fill: "transparent",
      d: `M20,0 L0,0 M0,0 L0,${height} M0,${height} L20,${height}`,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth,
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), showPlaceholder && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      x: "20%",
      y: "62.5%",
      style: {
        fontSize: "5em",
        fontWeight: "bold"
      },
      children: "Text"
    })]
  });
}
const GroupNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ...__props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    strokeDasharray: interactionRectStrokeDasharray,
    ...interactionRectProps
  } = _interactionRectProps;
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "14,10,3,10";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray,
      rx: 40,
      ry: 40
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      rx: "30",
      ry: "30",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
function UnknownNodeSvg(_props) {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "2,4";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "red",
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray
    })
  });
}
function EventVariantSymbolSvg(_ref) {
  let {
    variant,
    stroke,
    strokeWidth,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "messageEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MessageEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "timerEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TimerEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "errorEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "escalationEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EscalationEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "cancelEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "compensateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CompensationEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "conditionalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConditionalEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "linkEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LinkEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "signalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SignalEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "terminateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: cx,
        cy: cy,
        strokeWidth: 1.5,
        fill: "#a30000",
        stroke: "#a30000",
        strokeLinejoin: "round",
        r: outerCircleRadius / 2
      })
    })]
  });
}
function MessageEventSymbolSvg(_ref2) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref2;
  const padding = 1.2 * (outerCircleRadius - innerCircleRadius);
  const bodyWidth = innerCircleRadius * 1.2;
  const bodyHeight = innerCircleRadius * 0.8;
  const envelopeBody = {
    topLeft: {
      x: cx - bodyWidth / 2,
      y: cy - bodyHeight / 2
    },
    bottomRight: {
      x: cx + bodyWidth / 2,
      y: cy + bodyHeight / 2
    }
  };
  const flapHeight = bodyHeight * 0.5;
  const envelopeFlap = [{
    x: envelopeBody.topLeft.x,
    y: envelopeBody.topLeft.y
  }, {
    x: envelopeBody.bottomRight.x,
    y: envelopeBody.topLeft.y
  }, {
    x: cx,
    y: envelopeBody.topLeft.y + flapHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: envelopeBody.topLeft.x,
      y: envelopeBody.topLeft.y,
      width: bodyWidth,
      height: bodyHeight,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${envelopeFlap[0].x},${envelopeFlap[0].y} ${envelopeFlap[1].x},${envelopeFlap[1].y} ${envelopeFlap[2].x},${envelopeFlap[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), filled && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[0].x,
        y1: envelopeFlap[0].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: 1.5
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[1].x,
        y1: envelopeFlap[1].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: 1.5
      })]
    })]
  });
}
function TimerEventSymbolSvg(_ref3) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref3;
  const padding = 1.2 * (outerCircleRadius - innerCircleRadius);
  const clockRadius = innerCircleRadius - padding;
  const shortHandLength = clockRadius * 0.5;
  const longHandLength = clockRadius * 0.90;
  const hourHandAngle = Math.PI / 6 * 3 - 75 * Math.PI / 180;
  const minuteHandAngle = 0 - 75 * Math.PI / 180;
  const hourHand = {
    x: cx + shortHandLength * Math.cos(hourHandAngle),
    y: cy + shortHandLength * Math.sin(hourHandAngle)
  };
  const minuteHand = {
    x: cx + longHandLength * Math.cos(minuteHandAngle),
    y: cy + longHandLength * Math.sin(minuteHandAngle)
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: clockRadius,
      stroke: stroke,
      strokeWidth: 1.5,
      fill: filled ? stroke : "transparent"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: hourHand.x,
      y2: hourHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: minuteHand.x,
      y2: minuteHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: 1.5
    }), Array.from({
      length: 12
    }, (_, index) => {
      const angle = index / 12 * 2 * Math.PI;
      const x1 = cx + clockRadius * Math.cos(angle);
      const y1 = cy + clockRadius * Math.sin(angle);
      const x2 = cx + (clockRadius - padding * 0.5) * Math.cos(angle);
      const y2 = cy + (clockRadius - padding * 0.5) * Math.sin(angle);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2,
        stroke: stroke,
        strokeWidth: 1.5
      }, index);
    })]
  });
}
function ErrorEventSymbolSvg(_ref4) {
  let {
    stroke,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref4;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = innerCircleRadius - padding;
  const hy = innerCircleRadius - padding;
  const scaleFactor = 21;
  const shiftLeft = 3;
  const points = [{
    x: cx - shiftLeft,
    y: cy
  }, {
    x: cx - hx * 0.037 * scaleFactor - shiftLeft,
    y: cy + hy * 0.052 * scaleFactor
  }, {
    x: cx - hx * 0.003 * scaleFactor - shiftLeft,
    y: cy - hy * 0.05 * scaleFactor
  }, {
    x: cx + hx * 0.027 * scaleFactor - shiftLeft,
    y: cy + hy * 0.016 * scaleFactor
  }, {
    x: cx + hx * 0.058 * scaleFactor - shiftLeft,
    y: cy - hy * 0.046 * scaleFactor
  }, {
    x: cx + hx * 0.029 * scaleFactor - shiftLeft,
    y: cy + hy * 0.066 * scaleFactor
  }, {
    x: cx - shiftLeft,
    y: cy
  }, {
    x: cx - hx * 0.037 * scaleFactor - shiftLeft,
    y: cy + hy * 0.052 * scaleFactor
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: points.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function EscalationEventSymbolSvg(_ref5) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref5;
  const arrowHeight = innerCircleRadius * 1.2;
  const arrowBaseWidth = innerCircleRadius * 1;
  const upperLeftPoint = {
    x: cx - arrowBaseWidth / 2,
    y: cy + arrowHeight / 2
  };
  const upperRightPoint = {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2
  };
  const topPoint = {
    x: cx,
    y: cy - arrowHeight / 2
  };
  const midPoint = {
    x: cx,
    y: cy + arrowHeight / 20
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${upperLeftPoint.x},${upperLeftPoint.y} ${topPoint.x},${topPoint.y} ${upperRightPoint.x},${upperRightPoint.y} ${midPoint.x}, ${midPoint.y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function SignalEventSymbolSvg(_ref6) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref6;
  const farXPoint = 7;
  const closeXPoint = 5;
  const highYPoint = 7;
  const lowYPoint = 2;
  const leftUpperLeftPoint = {
    x: cx - innerCircleRadius / 2 - 7,
    y: cy - innerCircleRadius / 2 + 2
  };
  const rightUpperLeftPoint = {
    x: cx - innerCircleRadius / 2 + 5,
    y: cy - innerCircleRadius / 2 - 7
  };
  const centerUpperPoint = {
    x: cx,
    y: cy - innerCircleRadius / 5
  };
  const leftUpperRightPoint = {
    x: cx + innerCircleRadius / 2 - 5,
    y: cy - innerCircleRadius / 2 - 7
  };
  const rightUpperRightPoint = {
    x: cx + innerCircleRadius / 2 + 7,
    y: cy - innerCircleRadius / 2 + 2
  };
  const centerRightPoint = {
    x: cx + innerCircleRadius / 5,
    y: cy
  };
  const rightLowerRightPoint = {
    x: cx + innerCircleRadius / 2 + 7,
    y: cy + innerCircleRadius / 2 - 2
  };
  const leftLowerRightPoint = {
    x: cx + innerCircleRadius / 2 - 5,
    y: cy + innerCircleRadius / 2 + 7
  };
  const centerLowerPoint = {
    x: cx,
    y: cy + innerCircleRadius / 5
  };
  const rightLowerLeftPoint = {
    x: cx - innerCircleRadius / 2 + 5,
    y: cy + innerCircleRadius / 2 + 7
  };
  const leftLowerLeftPoint = {
    x: cx - innerCircleRadius / 2 - 7,
    y: cy + innerCircleRadius / 2 - 2
  };
  const centerLeftPoint = {
    x: cx - innerCircleRadius / 5,
    y: cy
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${leftUpperLeftPoint.x},${leftUpperLeftPoint.y} ${rightUpperLeftPoint.x},${rightUpperLeftPoint.y} ${centerUpperPoint.x},${centerUpperPoint.y} 
        ${leftUpperRightPoint.x}, ${leftUpperRightPoint.y} ${rightUpperRightPoint.x}, ${rightUpperRightPoint.y} ${centerRightPoint.x}, ${centerRightPoint.y}
        ${rightLowerRightPoint.x}, ${rightLowerRightPoint.y}
        ${leftLowerRightPoint.x}, ${leftLowerRightPoint.y}
        ${centerLowerPoint.x}, ${centerLowerPoint.y}
        ${rightLowerLeftPoint.x}, ${rightLowerLeftPoint.y}
        ${leftLowerLeftPoint.x}, ${leftLowerLeftPoint.y}
        ${centerLeftPoint.x}, ${centerLeftPoint.y}
        `,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CompensationEventSymbolSvg(_ref7) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref7;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding * 0.6;
  const hy = y + innerCircleRadius - padding * 0.2;
  const rightOffset = 0.15 * innerCircleRadius;
  const firstTriangle = [{
    x: cx + hx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - rightOffset,
    y: cy
  }, {
    x: cx + hx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  const secondTriangle = [{
    x: cx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - hx - rightOffset,
    y: cy
  }, {
    x: cx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${firstTriangle[0].x},${firstTriangle[0].y} ${firstTriangle[1].x},${firstTriangle[1].y} ${firstTriangle[2].x},${firstTriangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${secondTriangle[0].x},${secondTriangle[0].y} ${secondTriangle[1].x},${secondTriangle[1].y} ${secondTriangle[2].x},${secondTriangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function ConditionalEventSymbolSvg(_ref8) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref8;
  const squareSize = outerCircleRadius * 1.1;
  const lineSpacing = squareSize / 5;
  const lineThickness = 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - squareSize / 2,
      y: cy - squareSize / 2,
      width: squareSize,
      height: squareSize,
      fill: filled ? fill : "transparent",
      stroke: stroke,
      strokeWidth: 1.5
    }), [...Array(4)].map((_, index) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - squareSize / 2 + 5,
      y1: cy - squareSize / 2 + lineSpacing * (index + 1),
      x2: cx + squareSize / 2 - 5,
      y2: cy - squareSize / 2 + lineSpacing * (index + 1),
      stroke: stroke,
      strokeWidth: lineThickness
    }, index))]
  });
}
function CancelEventSymbolSvg(_ref9) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref9;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding;
  const hy = y + innerCircleRadius - padding;
  const triangle = [{
    x: cx + cos140 * hx,
    y: padding / 4 + cy + sin140 * hy
  }, {
    x: cx - cos150 * hx,
    y: padding / 4 + cy + sin150 * hy
  }, {
    x: cx,
    y: padding / 4 + cy - hy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${triangle[0].x},${triangle[0].y} ${triangle[1].x},${triangle[1].y} ${triangle[2].x},${triangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function LinkEventSymbolSvg(_ref10) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref10;
  const arrowHeight = innerCircleRadius * 1.2;
  const arrowBaseWidth = innerCircleRadius * 1;
  const shiftLeft = 8;
  const lowerLeftPoint = {
    x: cx - arrowBaseWidth / 2 - shiftLeft,
    y: cy + arrowHeight / 2 - 5
  };
  const upperLeftPoint = {
    x: cx - arrowBaseWidth / 2 - shiftLeft,
    y: cy - arrowHeight / 2 + 5
  };
  const upperRightPoint = {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 + 5
  };
  const lowerRightPoint = {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 - 5
  };
  const upperRightPointArrow = {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 - 2
  };
  const lowerRightPointArrow = {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 + 2
  };
  const arrowHead = {
    x: cx + arrowBaseWidth / 2 + 8,
    y: cy
  };
  const midPoint = {
    x: cx,
    y: cy + arrowHeight / 20
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${lowerLeftPoint.x},${lowerLeftPoint.y} ${upperLeftPoint.x},${upperLeftPoint.y} ${upperRightPoint.x},${upperRightPoint.y} ${upperRightPointArrow.x}, ${upperRightPointArrow.y} ${arrowHead.x}, ${arrowHead.y} ${lowerRightPointArrow.x}, ${lowerRightPointArrow.y} ${lowerRightPoint.x}, ${lowerRightPoint.y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function ActivityNodeIcons(_ref11) {
  let {
    x,
    y,
    width,
    height,
    icons
  } = _ref11;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Loop) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u21BB"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.AdHocSubProcess) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "~"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Compensation) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u23EA"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Collapsed) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
        x: x + width / 2 - 15,
        y: y + height - 20 - _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH,
        width: 30,
        height: 20,
        fill: "transparent",
        stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
        strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
        fontSize: "2em",
        textAnchor: "middle",
        dominantBaseline: "auto",
        fontWeight: "bold",
        x: x + width / 2,
        y: 1 + y + height,
        children: "+"
      })]
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceParallel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2 - 7}, ${y + height - 15}) rotate(90)`,
      children: "\u2630"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceSequential) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u2630"
    })]
  });
}
try {
    // @ts-ignore
    DataObjectNodeSvg.displayName = "DataObjectNodeSvg";
    // @ts-ignore
    DataObjectNodeSvg.__docgenInfo = { "description": "", "displayName": "DataObjectNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isIcon": { "defaultValue": null, "description": "", "name": "isIcon", "required": false, "type": { "name": "boolean" } }, "showFoldedPage": { "defaultValue": null, "description": "", "name": "showFoldedPage", "required": false, "type": { "name": "boolean" } }, "showArrow": { "defaultValue": null, "description": "", "name": "showArrow", "required": false, "type": { "name": "boolean" } }, "transform": { "defaultValue": null, "description": "", "name": "transform", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg"] = { docgenInfo: DataObjectNodeSvg.__docgenInfo, name: "DataObjectNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNodeSvg.displayName = "StartEventNodeSvg";
    // @ts-ignore
    StartEventNodeSvg.__docgenInfo = { "description": "", "displayName": "StartEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg"] = { docgenInfo: StartEventNodeSvg.__docgenInfo, name: "StartEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNodeSvg.displayName = "IntermediateCatchEventNodeSvg";
    // @ts-ignore
    IntermediateCatchEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg"] = { docgenInfo: IntermediateCatchEventNodeSvg.__docgenInfo, name: "IntermediateCatchEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNodeSvg.displayName = "IntermediateThrowEventNodeSvg";
    // @ts-ignore
    IntermediateThrowEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg"] = { docgenInfo: IntermediateThrowEventNodeSvg.__docgenInfo, name: "IntermediateThrowEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNodeSvg.displayName = "EndEventNodeSvg";
    // @ts-ignore
    EndEventNodeSvg.__docgenInfo = { "description": "", "displayName": "EndEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg"] = { docgenInfo: EndEventNodeSvg.__docgenInfo, name: "EndEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNodeSvg.displayName = "TaskNodeSvg";
    // @ts-ignore
    TaskNodeSvg.__docgenInfo = { "description": "", "displayName": "TaskNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "markers": { "defaultValue": null, "description": "", "name": "markers", "required": false, "type": { "name": "(ActivityNodeMarker | \"CallActivityPaletteIcon\")[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"businessRuleTask\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"userTask\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg"] = { docgenInfo: TaskNodeSvg.__docgenInfo, name: "TaskNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNodeSvg.displayName = "GatewayNodeSvg";
    // @ts-ignore
    GatewayNodeSvg.__docgenInfo = { "description": "", "displayName": "GatewayNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg"] = { docgenInfo: GatewayNodeSvg.__docgenInfo, name: "GatewayNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNodeSvg.displayName = "TextAnnotationNodeSvg";
    // @ts-ignore
    TextAnnotationNodeSvg.__docgenInfo = { "description": "", "displayName": "TextAnnotationNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "showPlaceholder": { "defaultValue": null, "description": "", "name": "showPlaceholder", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg"] = { docgenInfo: TextAnnotationNodeSvg.__docgenInfo, name: "TextAnnotationNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNodeSvg.displayName = "UnknownNodeSvg";
    // @ts-ignore
    UnknownNodeSvg.__docgenInfo = { "description": "", "displayName": "UnknownNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg"] = { docgenInfo: UnknownNodeSvg.__docgenInfo, name: "UnknownNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventVariantSymbolSvg.displayName = "EventVariantSymbolSvg";
    // @ts-ignore
    EventVariantSymbolSvg.__docgenInfo = { "description": "", "displayName": "EventVariantSymbolSvg", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } }, "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg"] = { docgenInfo: EventVariantSymbolSvg.__docgenInfo, name: "EventVariantSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    MessageEventSymbolSvg.displayName = "MessageEventSymbolSvg";
    // @ts-ignore
    MessageEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "MessageEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg"] = { docgenInfo: MessageEventSymbolSvg.__docgenInfo, name: "MessageEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TimerEventSymbolSvg.displayName = "TimerEventSymbolSvg";
    // @ts-ignore
    TimerEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "TimerEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg"] = { docgenInfo: TimerEventSymbolSvg.__docgenInfo, name: "TimerEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ErrorEventSymbolSvg.displayName = "ErrorEventSymbolSvg";
    // @ts-ignore
    ErrorEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ErrorEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg"] = { docgenInfo: ErrorEventSymbolSvg.__docgenInfo, name: "ErrorEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EscalationEventSymbolSvg.displayName = "EscalationEventSymbolSvg";
    // @ts-ignore
    EscalationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "EscalationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg"] = { docgenInfo: EscalationEventSymbolSvg.__docgenInfo, name: "EscalationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SignalEventSymbolSvg.displayName = "SignalEventSymbolSvg";
    // @ts-ignore
    SignalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "SignalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg"] = { docgenInfo: SignalEventSymbolSvg.__docgenInfo, name: "SignalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CompensationEventSymbolSvg.displayName = "CompensationEventSymbolSvg";
    // @ts-ignore
    CompensationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CompensationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg"] = { docgenInfo: CompensationEventSymbolSvg.__docgenInfo, name: "CompensationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ConditionalEventSymbolSvg.displayName = "ConditionalEventSymbolSvg";
    // @ts-ignore
    ConditionalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ConditionalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg"] = { docgenInfo: ConditionalEventSymbolSvg.__docgenInfo, name: "ConditionalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CancelEventSymbolSvg.displayName = "CancelEventSymbolSvg";
    // @ts-ignore
    CancelEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CancelEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg"] = { docgenInfo: CancelEventSymbolSvg.__docgenInfo, name: "CancelEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LinkEventSymbolSvg.displayName = "LinkEventSymbolSvg";
    // @ts-ignore
    LinkEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "LinkEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg"] = { docgenInfo: LinkEventSymbolSvg.__docgenInfo, name: "LinkEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ActivityNodeIcons.displayName = "ActivityNodeIcons";
    // @ts-ignore
    ActivityNodeIcons.__docgenInfo = { "description": "", "displayName": "ActivityNodeIcons", "props": { "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": true, "type": { "name": "number" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": true, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": true, "type": { "name": "Set<ActivityNodeMarker>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons"] = { docgenInfo: ActivityNodeIcons.__docgenInfo, name: "ActivityNodeIcons", path: "src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNodeSvg.displayName = "LaneNodeSvg";
    // @ts-ignore
    LaneNodeSvg.__docgenInfo = { "description": "", "displayName": "LaneNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "gutterWidth": { "defaultValue": null, "description": "", "name": "gutterWidth", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg"] = { docgenInfo: LaneNodeSvg.__docgenInfo, name: "LaneNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNodeSvg.displayName = "SubProcessNodeSvg";
    // @ts-ignore
    SubProcessNodeSvg.__docgenInfo = { "description": "", "displayName": "SubProcessNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "borderRadius": { "defaultValue": null, "description": "", "name": "borderRadius", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": false, "type": { "name": "ActivityNodeMarker[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"event\"" }, { "value": "\"transaction\"" }, { "value": "\"multi-instance\"" }, { "value": "\"other\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg"] = { docgenInfo: SubProcessNodeSvg.__docgenInfo, name: "SubProcessNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNodeSvg.displayName = "GroupNodeSvg";
    // @ts-ignore
    GroupNodeSvg.__docgenInfo = { "description": "", "displayName": "GroupNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg"] = { docgenInfo: GroupNodeSvg.__docgenInfo, name: "GroupNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"subProcess\"" }, { "value": "\"task\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"businessRuleTask\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".xyflow-react-kie-diagram--node-containerNode-interactionRect {\n  pointer-events: stroke !important;\n  opacity: 0;\n  /* ⬇ Uncomment for debugging purposes:*/\n  /* stroke: purple;\n    opacity: 0.2; */\n}\n.xyflow-react-kie-diagram--node-containerNode-visibleRect {\n  pointer-events: none;\n}\n\n/* (begin) containerNodes */\n/* CONTAINER NODES HAVE A SPECIFIC SELECTION MECHANISM TO ALLOW EDITING EDGES INSIDE THEM */\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside {\n  pointer-events: none !important;\n  background: transparent;\n  box-shadow: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected) .xyflow-react-kie-diagram--node-shape {\n  filter: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside\n  .xyflow-react-kie-diagram--editable-node-name-input\n  span,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .xyflow-react-kie-diagram--info-node-panel,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .react-flow__resize-control div {\n  pointer-events: all !important;\n}\n\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected):hover\n  .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #006ba47b) !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside.selected:hover .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #004e77d6) !important;\n}\n\n/* (end) containerNodes */\n", "",{"version":3,"sources":["webpack://./../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css"],"names":[],"mappings":"AAAA;EACE,iCAAiC;EACjC,UAAU;EACV,uCAAuC;EACvC;mBACiB;AACnB;AACA;EACE,oBAAoB;AACtB;;AAEA,2BAA2B;AAC3B,2FAA2F;AAC3F;EACE,+BAA+B;EAC/B,uBAAuB;EACvB,2BAA2B;AAC7B;AACA;EACE,uBAAuB;AACzB;AACA;;;;;EAKE,8BAA8B;AAChC;;AAEA;;EAEE,qDAAqD;AACvD;AACA;EACE,qDAAqD;AACvD;;AAEA,yBAAyB","sourcesContent":[".xyflow-react-kie-diagram--node-containerNode-interactionRect {\n  pointer-events: stroke !important;\n  opacity: 0;\n  /* ⬇ Uncomment for debugging purposes:*/\n  /* stroke: purple;\n    opacity: 0.2; */\n}\n.xyflow-react-kie-diagram--node-containerNode-visibleRect {\n  pointer-events: none;\n}\n\n/* (begin) containerNodes */\n/* CONTAINER NODES HAVE A SPECIFIC SELECTION MECHANISM TO ALLOW EDITING EDGES INSIDE THEM */\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside {\n  pointer-events: none !important;\n  background: transparent;\n  box-shadow: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected) .xyflow-react-kie-diagram--node-shape {\n  filter: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside\n  .xyflow-react-kie-diagram--editable-node-name-input\n  span,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .xyflow-react-kie-diagram--info-node-panel,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .react-flow__resize-control div {\n  pointer-events: all !important;\n}\n\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected):hover\n  .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #006ba47b) !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside.selected:hover .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #004e77d6) !important;\n}\n\n/* (end) containerNodes */\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css":
/*!***********************************************************!*\
  !*** ../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }
  var p;
  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (a[p] !== b[p]) {
      return false;
    }
  }
  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (!a[p]) {
      return false;
    }
  }
  return true;
};
    var isNamedExport = !_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlzYy1lbXB0eS1FbXB0eS1zdG9yaWVzLjFhNzA1NTk1MzZkOWRhMDVjZjU4LmhvdC11cGRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQ2pCLE1BQU1BLHlCQUF5QixHQUFHLEdBQUc7QUFDckMsTUFBTUMsMkVBQTJFLEdBQUc7RUFDekZDLElBQUksRUFBRTtBQUNSLENBQUM7QUFDTSxNQUFNQyx3Q0FBd0MsR0FBRyw4REFBOEQ7QUFDL0csTUFBTUMsb0NBQW9DLEdBQUcsMERBQTBEO0FBQ3ZHLFNBQVNDLFNBQVNBLENBQUNDLE1BQU0sRUFBRTtFQUNoQyxNQUFNO0lBQ0pDLFdBQVcsRUFBRUMsWUFBWTtJQUN6QkMsQ0FBQyxFQUFFQyxFQUFFO0lBQ0xDLENBQUMsRUFBRUMsRUFBRTtJQUNMQyxLQUFLLEVBQUVDLE1BQU07SUFDYkMsTUFBTSxFQUFFQyxPQUFPO0lBQ2ZDLFNBQVMsRUFBRUMsVUFBVTtJQUNyQkMsV0FBVyxFQUFFQyxZQUFZO0lBQ3pCLEdBQUdDO0VBQ0wsQ0FBQyxHQUFHZixNQUFNO0VBQ1YsTUFBTUMsV0FBVyxHQUFHQyxZQUFZLEtBQUssSUFBSSxJQUFJQSxZQUFZLEtBQUssS0FBSyxDQUFDLEdBQUdBLFlBQVksR0FBR1IseUJBQXlCO0VBQy9HLE1BQU1zQixlQUFlLEdBQUdmLFdBQVcsR0FBRyxDQUFDO0VBQ3ZDLE1BQU1FLENBQUMsR0FBR0MsRUFBRSxHQUFHWSxlQUFlO0VBQzlCLE1BQU1YLENBQUMsR0FBR0MsRUFBRSxHQUFHVSxlQUFlO0VBQzlCLE1BQU1ULEtBQUssR0FBR0MsTUFBTSxHQUFHUCxXQUFXO0VBQ2xDLE1BQU1RLE1BQU0sR0FBR0MsT0FBTyxHQUFHVCxXQUFXO0VBQ3BDLE9BQU87SUFDTEEsV0FBVztJQUNYRSxDQUFDO0lBQ0RFLENBQUM7SUFDREUsS0FBSyxFQUFFQSxLQUFLLElBQUlaLDJFQUEyRSxDQUFDQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUMzR2EsTUFB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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNOQUFPO0FBQ2hDLG9DQUFvQywyTUFBVyxHQUFHLHNOQUFPOztBQUV6RCxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLCthQUFzTTtBQUM1TSxNQUFNO0FBQUE7QUFDTixzREFBc0QsMk1BQVcsR0FBRyxzTkFBTztBQUMzRSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQSwwQ0FBMEMsMk1BQVcsR0FBRyxzTkFBTzs7QUFFL0QscUJBQXFCLHNOQUFPO0FBQzVCLE9BQU87QUFDUDtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOzs7QUFHcU47QUFDck4sT0FBTyxpRUFBZSxzTkFBTyxJQUFJLHNOQUFPLFVBQVUsc05BQU8sbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4uL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL05vZGVTdmdzLmpzIiwid2VicGFjazovL0BraWUtdG9vbHMvYnBtbi1lZGl0b3IvLi9zcmMvZGlhZ3JhbS9ub2Rlcy9Ob2RlU3Zncy50c3giLCJ3ZWJwYWNrOi8vQGtpZS10b29scy9icG1uLWVkaXRvci8uL3NyYy9kaWFncmFtL25vZGVzL05vZGVzLnRzeCIsIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4uL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL05vZGVTdmdzLmNzcyIsIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4uL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL05vZGVTdmdzLmNzcz9lY2QwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIi4vTm9kZVN2Z3MuY3NzXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9OT0RFX1NUUk9LRV9XSURUSCA9IDEuNTtcbmV4cG9ydCBjb25zdCBfX19OQVNUWV9IQUNLX0ZPUl9TQUZBUklfdG9fZm9yY2VfcmVkcmF3aW5nX3N2Z3NfYW5kX2F2b2lkX3JlcGFpbnRfZ2xpdGNoZXMgPSB7XG4gIGZsYWc6IGZhbHNlXG59O1xuZXhwb3J0IGNvbnN0IGNvbnRhaW5lck5vZGVJbnRlcmFjdGlvblJlY3RDc3NDbGFzc05hbWUgPSBcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1jb250YWluZXJOb2RlLWludGVyYWN0aW9uUmVjdFwiO1xuZXhwb3J0IGNvbnN0IGNvbnRhaW5lck5vZGVWaXNpYmxlUmVjdENzc0NsYXNzTmFtZSA9IFwieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLWNvbnRhaW5lck5vZGUtdmlzaWJsZVJlY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemUoX3Byb3BzKSB7XG4gIGNvbnN0IHtcbiAgICBzdHJva2VXaWR0aDogX3N0cm9rZVdpZHRoLFxuICAgIHg6IF94LFxuICAgIHk6IF95LFxuICAgIHdpZHRoOiBfd2lkdGgsXG4gICAgaGVpZ2h0OiBfaGVpZ2h0LFxuICAgIGZpbGxDb2xvcjogX2ZpbGxDb2xvcixcbiAgICBzdHJva2VDb2xvcjogX3N0cm9rZUNvbG9yLFxuICAgIC4uLnByb3BzXG4gIH0gPSBfcHJvcHM7XG4gIGNvbnN0IHN0cm9rZVdpZHRoID0gX3N0cm9rZVdpZHRoICE9PSBudWxsICYmIF9zdHJva2VXaWR0aCAhPT0gdm9pZCAwID8gX3N0cm9rZVdpZHRoIDogREVGQVVMVF9OT0RFX1NUUk9LRV9XSURUSDtcbiAgY29uc3QgaGFsZlN0cm9rZVdpZHRoID0gc3Ryb2tlV2lkdGggLyAyO1xuICBjb25zdCB4ID0gX3ggKyBoYWxmU3Ryb2tlV2lkdGg7XG4gIGNvbnN0IHkgPSBfeSArIGhhbGZTdHJva2VXaWR0aDtcbiAgY29uc3Qgd2lkdGggPSBfd2lkdGggLSBzdHJva2VXaWR0aDtcbiAgY29uc3QgaGVpZ2h0ID0gX2hlaWdodCAtIHN0cm9rZVdpZHRoO1xuICByZXR1cm4ge1xuICAgIHN0cm9rZVdpZHRoLFxuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aDogd2lkdGggKyAoX19fTkFTVFlfSEFDS19GT1JfU0FGQVJJX3RvX2ZvcmNlX3JlZHJhd2luZ19zdmdzX2FuZF9hdm9pZF9yZXBhaW50X2dsaXRjaGVzLmZsYWcgPyAwLjEgOiAwKSxcbiAgICBoZWlnaHQ6IGhlaWdodCArIChfX19OQVNUWV9IQUNLX0ZPUl9TQUZBUklfdG9fZm9yY2VfcmVkcmF3aW5nX3N2Z3NfYW5kX2F2b2lkX3JlcGFpbnRfZ2xpdGNoZXMuZmxhZyA/IDAgOiAwLjEpLFxuICAgIHByb3BzXG4gIH07XG59IiwiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBERUZBVUxUX0lOVFJBQ1RJT05fV0lEVEggfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9tYXRocy9EY01hdGhzXCI7XG5pbXBvcnQgeyBERUZBVUxUX05PREVfRklMTCwgREVGQVVMVF9OT0RFX1NUUk9LRV9DT0xPUiB9IGZyb20gXCIuL05vZGVTdHlsZVwiO1xuaW1wb3J0IHtcbiAgY29udGFpbmVyTm9kZUludGVyYWN0aW9uUmVjdENzc0NsYXNzTmFtZSxcbiAgREVGQVVMVF9OT0RFX1NUUk9LRV9XSURUSCxcbiAgTm9kZVN2Z1Byb3BzLFxuICBub3JtYWxpemUsXG59IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL05vZGVTdmdzXCI7XG5pbXBvcnQgeyBjb250YWluZXJOb2RlVmlzaWJsZVJlY3RDc3NDbGFzc05hbWUgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Ob2RlU3Znc1wiO1xuaW1wb3J0IHsgQWN0aXZpdHlOb2RlTWFya2VyLCBFdmVudFZhcmlhbnQsIEdhdGV3YXlWYXJpYW50LCBTdWJQcm9jZXNzVmFyaWFudCwgVGFza1ZhcmlhbnQgfSBmcm9tIFwiLi4vQnBtbkRpYWdyYW1Eb21haW5cIjtcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIERhdGFPYmplY3ROb2RlU3ZnKFxuICBfX3Byb3BzOiBOb2RlU3ZnUHJvcHMgJiB7IGlzSWNvbj86IGJvb2xlYW47IHNob3dGb2xkZWRQYWdlPzogYm9vbGVhbjsgc2hvd0Fycm93PzogYm9vbGVhbjsgdHJhbnNmb3JtPzogc3RyaW5nIH1cbikge1xuICBjb25zdCB7XG4gICAgeCxcbiAgICB5LFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBzdHJva2VXaWR0aCxcbiAgICBwcm9wczogeyBpc0ljb246IF9pc0ljb24sIHNob3dGb2xkZWRQYWdlOiBfc2hvd0ZvbGRlZFBhZ2UsIHNob3dBcnJvdzogX3Nob3dBcnJvdywgLi4ucHJvcHMgfSxcbiAgfSA9IG5vcm1hbGl6ZShfX3Byb3BzKTtcblxuICBjb25zdCBiZXZlbCA9IDI1O1xuICBjb25zdCBhcnJvd1N0YXJ0aW5nWCA9IDY7XG4gIGNvbnN0IGFycm93U3RhcnRpbmdZID0gMTA7XG5cbiAgY29uc3Qgc2hvd0ZvbGRlZFBhZ2UgPSBfc2hvd0ZvbGRlZFBhZ2UgPz8gZmFsc2U7XG4gIGNvbnN0IHNob3dBcnJvdyA9IF9zaG93QXJyb3cgPz8gZmFsc2U7XG4gIGNvbnN0IGlzSWNvbiA9IF9pc0ljb24gPz8gZmFsc2U7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHBvbHlnb25cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICBwb2ludHM9e2AwLDAgMCwke2hlaWdodH0gJHt3aWR0aH0sJHtoZWlnaHR9ICR7d2lkdGh9LCR7YmV2ZWx9ICR7d2lkdGggLSBiZXZlbH0sMCAke3dpZHRoIC0gYmV2ZWx9LDBgfVxuICAgICAgICBmaWxsPXtERUZBVUxUX05PREVfRklMTH1cbiAgICAgICAgc3Ryb2tlPXtERUZBVUxUX05PREVfU1RST0tFX0NPTE9SfVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgIHRyYW5zZm9ybT17aXNJY29uID8gX19wcm9wcy50cmFuc2Zvcm0gOiBgdHJhbnNsYXRlKCR7eH0sJHt5fSlgfVxuICAgICAgLz5cbiAgICAgIHtzaG93Rm9sZGVkUGFnZSA9PT0gdHJ1ZSAmJiAoXG4gICAgICAgIDxwb2x5Z29uXG4gICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgIHBvaW50cz17YCR7d2lkdGggLSBiZXZlbH0sMCAke3dpZHRoIC0gYmV2ZWx9LCR7YmV2ZWx9ICR7d2lkdGh9LCR7YmV2ZWx9YH1cbiAgICAgICAgICBmaWxsPXtERUZBVUxUX05PREVfRklMTH1cbiAgICAgICAgICBzdHJva2U9e0RFRkFVTFRfTk9ERV9TVFJPS0VfQ09MT1J9XG4gICAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7eH0sJHt5fSlgfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtzaG93QXJyb3cgPT09IHRydWUgJiYgKFxuICAgICAgICA8cG9seWdvblxuICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICBwb2ludHM9e2Ake2Fycm93U3RhcnRpbmdYfSwke2Fycm93U3RhcnRpbmdZfSAke2Fycm93U3RhcnRpbmdYfSwyMCAyMCwyMCAyMCwyNiAzMCwxNSAyMCw0IDIwLCR7YXJyb3dTdGFydGluZ1l9IGB9XG4gICAgICAgICAgZmlsbD17REVGQVVMVF9OT0RFX0ZJTEx9XG4gICAgICAgICAgc3Ryb2tlPXtERUZBVUxUX05PREVfU1RST0tFX0NPTE9SfVxuICAgICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke3h9LCR7eX0pYH1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59XG5cbmNvbnN0IGRlZzMwID0gTWF0aC5QSSAvIDY7XG5jb25zdCBkZWcxNTAgPSAxNTAgKiAoTWF0aC5QSSAvIDE4MCk7XG5jb25zdCBkZWcxNDAgPSAxNDAgKiAoTWF0aC5QSSAvIDE4MCk7XG5jb25zdCBjb3MzMCA9IE1hdGguY29zKGRlZzMwKTtcbmNvbnN0IHNpbjMwID0gTWF0aC5zaW4oZGVnMzApO1xuY29uc3QgY29zMTUwID0gTWF0aC5jb3MoZGVnMTUwKTtcbmNvbnN0IHNpbjE1MCA9IE1hdGguc2luKGRlZzE1MCk7XG5jb25zdCBjb3MxNDAgPSBNYXRoLmNvcyhkZWcxNDApO1xuY29uc3Qgc2luMTQwID0gTWF0aC5zaW4oZGVnMTQwKTtcblxuXG5cbmV4cG9ydCBjb25zdCBOT0RFX0NPTE9SUyA9IHtcbiAgc3RhcnRFdmVudDoge1xuICAgIGZvcmVncm91bmQ6IFwiIzRhYTI0MVwiLFxuICAgIGJhY2tncm91bmQ6IFwiI2U4ZmFlNlwiLFxuICB9LFxuICBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50OiB7XG4gICAgZm9yZWdyb3VuZDogXCIjZTZhMDAwXCIsXG4gICAgYmFja2dyb3VuZDogXCIjZmJlZmNmXCIsXG4gIH0sXG4gIGJvdW5kYXJ5RXZlbnQ6IHtcbiAgICBmb3JlZ3JvdW5kOiBcIiNlNmEwMDBcIixcbiAgICBiYWNrZ3JvdW5kOiBcIiNmYmVmY2ZcIixcbiAgfSxcbiAgaW50ZXJtZWRpYXRlVGhyb3dFdmVudDoge1xuICAgIGZvcmVncm91bmQ6IFwiIzAwN2E4N1wiLFxuICAgIGJhY2tncm91bmQ6IFwiI2JkZGVlMVwiLFxuICB9LFxuICBlbmRFdmVudDoge1xuICAgIGZvcmVncm91bmQ6IFwiI2EzMDAwMFwiLFxuICAgIGJhY2tncm91bmQ6IFwiI2ZjZTdlN1wiLFxuICB9LFxuICBnYXRld2F5OiB7XG4gICAgYmFja2dyb3VuZDogXCIjZmVmNWVhXCIsXG4gICAgZm9yZWdyb3VuZDogXCIjZWM3YjA4XCIsXG4gIH0sXG4gIHRhc2s6IHtcbiAgICBmb3JlZ3JvdW5kOiBcImJsYWNrXCIsXG4gICAgYmFja2dyb3VuZDogXCIjZWZlZmVmXCIsXG4gIH0sXG4gIHN1YlByb2Nlc3M6IHtcbiAgICBmb3JlZ3JvdW5kOiBcImJsYWNrXCIsXG4gICAgYmFja2dyb3VuZDogXCIjZWZlZmVmXCIsXG4gIH0sXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgZnVuY3Rpb24gU3RhcnRFdmVudE5vZGVTdmcoX19wcm9wczogTm9kZVN2Z1Byb3BzICYgeyB2YXJpYW50OiBFdmVudFZhcmlhbnQgfCBcIm5vbmVcIiB9KSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHN0cm9rZVdpZHRoLFxuICAgIHByb3BzOiB7IC4uLl9wcm9wcyB9LFxuICB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuXG4gIGNvbnN0IHsgdmFyaWFudCwgLi4ucHJvcHMgfSA9IHsgLi4uX3Byb3BzIH07XG5cbiAgY29uc3QgY3ggPSB4ICsgd2lkdGggLyAyO1xuICBjb25zdCBjeSA9IHkgKyBoZWlnaHQgLyAyO1xuXG4gIGNvbnN0IHIgPSB3aWR0aCAvIDI7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGNpcmNsZVxuICAgICAgICBjeD17Y3h9XG4gICAgICAgIGN5PXtjeX1cbiAgICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICBmaWxsPXtcIiNlOGZhZTZcIn1cbiAgICAgICAgc3Ryb2tlPXtcIiM0YWEyNDFcIn1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgcj17cn1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICAgIDxFdmVudFZhcmlhbnRTeW1ib2xTdmdcbiAgICAgICAgdmFyaWFudD17dmFyaWFudH1cbiAgICAgICAgZmlsbD17XCIjZThmYWU2XCJ9XG4gICAgICAgIGZpbGxlZD17ZmFsc2V9XG4gICAgICAgIHN0cm9rZT17XCIjNGFhMjQxXCJ9XG4gICAgICAgIHg9e3h9XG4gICAgICAgIHk9e3l9XG4gICAgICAgIGN4PXtjeH1cbiAgICAgICAgY3k9e2N5fVxuICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17ciAtIDV9XG4gICAgICAgIG91dGVyQ2lyY2xlUmFkaXVzPXtyfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBJbnRlcm1lZGlhdGVDYXRjaEV2ZW50Tm9kZVN2ZyhcbiAgX19wcm9wczogTm9kZVN2Z1Byb3BzICYgeyByaW1XaWR0aD86IG51bWJlcjsgdmFyaWFudDogRXZlbnRWYXJpYW50IHwgXCJub25lXCIgfVxuKSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHN0cm9rZVdpZHRoLFxuICAgIHByb3BzOiB7IC4uLl9wcm9wcyB9LFxuICB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuXG4gIGNvbnN0IHsgcmltV2lkdGgsIHZhcmlhbnQsIC4uLnByb3BzIH0gPSB7IC4uLl9wcm9wcyB9O1xuXG4gIGNvbnN0IG91dGVyQ2lyY2xlUmFkaXVzID0gd2lkdGggLyAyO1xuICBjb25zdCBpbm5lckNpcmNsZVJhZGl1cyA9IG91dGVyQ2lyY2xlUmFkaXVzIC0gKHJpbVdpZHRoID8/IDUpO1xuXG4gIGNvbnN0IGN4ID0geCArIHdpZHRoIC8gMjtcbiAgY29uc3QgY3kgPSB5ICsgaGVpZ2h0IC8gMjtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Y2lyY2xlXG4gICAgICAgIGN4PXtjeH1cbiAgICAgICAgY3k9e2N5fVxuICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIGZpbGw9e1wiI2ZiZWZjZlwifVxuICAgICAgICBzdHJva2U9e1wiI2U2YTAwMFwifVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICByPXtvdXRlckNpcmNsZVJhZGl1c31cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICAgIDxjaXJjbGVcbiAgICAgICAgY3g9e2N4fVxuICAgICAgICBjeT17Y3l9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17XCIjZmJlZmNmXCJ9XG4gICAgICAgIHN0cm9rZT17XCIjZTZhMDAwXCJ9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIHI9e2lubmVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgICAgPEV2ZW50VmFyaWFudFN5bWJvbFN2Z1xuICAgICAgICB2YXJpYW50PXt2YXJpYW50fVxuICAgICAgICBmaWxsPXtcIiNmYmVmY2ZcIn1cbiAgICAgICAgZmlsbGVkPXtmYWxzZX1cbiAgICAgICAgc3Ryb2tlPXtcIiNlNmEwMDBcIn1cbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgY3g9e2N4fVxuICAgICAgICBjeT17Y3l9XG4gICAgICAgIGlubmVyQ2lyY2xlUmFkaXVzPXtpbm5lckNpcmNsZVJhZGl1c31cbiAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZVN2ZyhcbiAgX19wcm9wczogTm9kZVN2Z1Byb3BzICYgeyByaW1XaWR0aD86IG51bWJlcjsgdmFyaWFudDogRXZlbnRWYXJpYW50IHwgXCJub25lXCIgfVxuKSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHN0cm9rZVdpZHRoLFxuICAgIHByb3BzOiB7IC4uLl9wcm9wcyB9LFxuICB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuXG4gIGNvbnN0IHsgcmltV2lkdGgsIHZhcmlhbnQsIC4uLnByb3BzIH0gPSB7IC4uLl9wcm9wcyB9O1xuXG4gIGNvbnN0IG91dGVyQ2lyY2xlUmFkaXVzID0gd2lkdGggLyAyO1xuICBjb25zdCBpbm5lckNpcmNsZVJhZGl1cyA9IG91dGVyQ2lyY2xlUmFkaXVzIC0gKHJpbVdpZHRoID8/IDUpO1xuXG4gIGNvbnN0IGN4ID0geCArIHdpZHRoIC8gMjtcbiAgY29uc3QgY3kgPSB5ICsgaGVpZ2h0IC8gMjtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Y2lyY2xlXG4gICAgICAgIGN4PXt4ICsgd2lkdGggLyAyfVxuICAgICAgICBjeT17eSArIGhlaWdodCAvIDJ9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICBzdHJva2U9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgcj17b3V0ZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgICA8Y2lyY2xlXG4gICAgICAgIGN4PXt4ICsgd2lkdGggLyAyfVxuICAgICAgICBjeT17eSArIGhlaWdodCAvIDJ9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICBzdHJva2U9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgcj17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgICA8RXZlbnRWYXJpYW50U3ltYm9sU3ZnXG4gICAgICAgIHZhcmlhbnQ9e3ZhcmlhbnR9XG4gICAgICAgIGZpbGw9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuYmFja2dyb3VuZH1cbiAgICAgICAgZmlsbGVkPXt0cnVlfVxuICAgICAgICBzdHJva2U9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgY3g9e2N4fVxuICAgICAgICBjeT17Y3l9XG4gICAgICAgIGlubmVyQ2lyY2xlUmFkaXVzPXtpbm5lckNpcmNsZVJhZGl1c31cbiAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBFbmRFdmVudE5vZGVTdmcoX19wcm9wczogTm9kZVN2Z1Byb3BzICYgeyB2YXJpYW50OiBFdmVudFZhcmlhbnQgfCBcIm5vbmVcIiB9KSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHN0cm9rZVdpZHRoLFxuICAgIHByb3BzOiB7IC4uLl9wcm9wcyB9LFxuICB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuXG4gIGNvbnN0IHsgdmFyaWFudCwgLi4ucHJvcHMgfSA9IHsgLi4uX3Byb3BzIH07XG5cbiAgY29uc3QgY3ggPSB4ICsgd2lkdGggLyAyO1xuICBjb25zdCBjeSA9IHkgKyBoZWlnaHQgLyAyO1xuXG4gIGNvbnN0IHIgPSB3aWR0aCAvIDI7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGNpcmNsZVxuICAgICAgICBjeD17Y3h9XG4gICAgICAgIGN5PXtjeX1cbiAgICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICBmaWxsPXtOT0RFX0NPTE9SUy5lbmRFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICBzdHJva2U9e05PREVfQ09MT1JTLmVuZEV2ZW50LmZvcmVncm91bmR9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIHI9e3J9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgICA8RXZlbnRWYXJpYW50U3ltYm9sU3ZnXG4gICAgICAgIHZhcmlhbnQ9e3ZhcmlhbnR9XG4gICAgICAgIGZpbGw9e05PREVfQ09MT1JTLmVuZEV2ZW50LmJhY2tncm91bmR9XG4gICAgICAgIGZpbGxlZD17dHJ1ZX1cbiAgICAgICAgc3Ryb2tlPXtOT0RFX0NPTE9SUy5lbmRFdmVudC5mb3JlZ3JvdW5kfVxuICAgICAgICB4PXt4fVxuICAgICAgICB5PXt5fVxuICAgICAgICBjeD17Y3h9XG4gICAgICAgIGN5PXtjeX1cbiAgICAgICAgaW5uZXJDaXJjbGVSYWRpdXM9e3IgLSA1fVxuICAgICAgICBvdXRlckNpcmNsZVJhZGl1cz17cn1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUYXNrTm9kZVN2ZyhcbiAgX19wcm9wczogTm9kZVN2Z1Byb3BzICYge1xuICAgIG1hcmtlcnM/OiAoQWN0aXZpdHlOb2RlTWFya2VyIHwgXCJDYWxsQWN0aXZpdHlQYWxldHRlSWNvblwiKVtdO1xuICAgIHZhcmlhbnQ/OiBUYXNrVmFyaWFudCB8IFwibm9uZVwiO1xuICB9XG4pIHtcbiAgY29uc3Qge1xuICAgIHgsXG4gICAgeSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgc3Ryb2tlV2lkdGgsXG4gICAgcHJvcHM6IHsgLi4uX3Byb3BzIH0sXG4gIH0gPSBub3JtYWxpemUoX19wcm9wcyk7XG5cbiAgY29uc3QgeyBtYXJrZXJzOiBfbWFya2VycywgdmFyaWFudDogX3ZhcmlhbnQsIC4uLnByb3BzIH0gPSB7IC4uLl9wcm9wcyB9O1xuXG4gIGNvbnN0IG1hcmtlcnMgPSB1c2VNZW1vKCgpID0+IG5ldyBTZXQoX21hcmtlcnMpLCBbX21hcmtlcnNdKTtcbiAgY29uc3QgdmFyaWFudCA9IF92YXJpYW50ID8/IFwibm9uZVwiO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxyZWN0XG4gICAgICAgIHg9e3h9XG4gICAgICAgIHk9e3l9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17REVGQVVMVF9OT0RFX0ZJTEx9XG4gICAgICAgIHN0cm9rZT17REVGQVVMVF9OT0RFX1NUUk9LRV9DT0xPUn1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgcng9XCIzXCJcbiAgICAgICAgcnk9XCIzXCJcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICAgIHttYXJrZXJzLmhhcyhcIkNhbGxBY3Rpdml0eVBhbGV0dGVJY29uXCIpICYmIChcbiAgICAgICAgPHJlY3RcbiAgICAgICAgICB4PXt4ICsgKHdpZHRoIC8gMiAtIHdpZHRoIC8gMyAvIDIpfVxuICAgICAgICAgIHk9e3kgKyAoaGVpZ2h0IC0gaGVpZ2h0IC8gMyl9XG4gICAgICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgICAgICAgIHdpZHRoPXt3aWR0aCAvIDN9XG4gICAgICAgICAgaGVpZ2h0PXtoZWlnaHQgLyAzfVxuICAgICAgICAgIGZpbGw9e1wiYmxhY2tcIn1cbiAgICAgICAgICBzdHJva2U9e1wiYmxhY2tcIn1cbiAgICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICAgIHJ4PVwiMFwiXG4gICAgICAgICAgcnk9XCIwXCJcbiAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAgPEFjdGl2aXR5Tm9kZUljb25zIHg9e3h9IHk9e3l9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9IGljb25zPXttYXJrZXJzIGFzIFNldDxBY3Rpdml0eU5vZGVNYXJrZXI+fSAvPlxuICAgIDwvPlxuICApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIEdhdGV3YXlOb2RlU3ZnKF9fcHJvcHM6IE5vZGVTdmdQcm9wcyAmIHsgdmFyaWFudDogR2F0ZXdheVZhcmlhbnQgfCBcIm5vbmVcIiB9KSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIHN0cm9rZVdpZHRoLFxuICAgIHByb3BzOiB7IC4uLl9wcm9wcyB9LFxuICB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuXG4gIGNvbnN0IHsgdmFyaWFudCwgLi4ucHJvcHMgfSA9IHsgLi4uX3Byb3BzIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHJlY3RcbiAgICAgICAgeD17OCArIHh9XG4gICAgICAgIHk9ezggKyB5fVxuICAgICAgICB0cmFuc2Zvcm09e2Byb3RhdGUoNDUsJHt4ICsgd2lkdGggLyAyfSwke3kgKyBoZWlnaHQgLyAyfSlgfVxuICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgIHdpZHRoPXt3aWR0aCAvIDEuNH0gLy8gc3FydCgyKVxuICAgICAgICBoZWlnaHQ9e2hlaWdodCAvIDEuNH0gLy8gc3FydCgyKVxuICAgICAgICBmaWxsPXtOT0RFX0NPTE9SUy5nYXRld2F5LmJhY2tncm91bmR9XG4gICAgICAgIHN0cm9rZT17Tk9ERV9DT0xPUlMuZ2F0ZXdheS5mb3JlZ3JvdW5kfVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICByeD1cIjVcIlxuICAgICAgICByeT1cIjVcIlxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgICAge3ZhcmlhbnQgPT09IFwicGFyYWxsZWxHYXRld2F5XCIgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxsaW5lXG4gICAgICAgICAgICBzdHJva2VMaW5lY2FwPXtcInJvdW5kXCJ9XG4gICAgICAgICAgICB4MT1cIjE4XCJcbiAgICAgICAgICAgIHkxPXsxICsgaGVpZ2h0IC8gMn1cbiAgICAgICAgICAgIHgyPXt3aWR0aCAtIDE2fVxuICAgICAgICAgICAgeTI9ezEgKyBoZWlnaHQgLyAyfVxuICAgICAgICAgICAgc3Ryb2tlPXtOT0RFX0NPTE9SUy5nYXRld2F5LmZvcmVncm91bmR9XG4gICAgICAgICAgICBzdHJva2VXaWR0aD1cIjZcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA9e1wicm91bmRcIn1cbiAgICAgICAgICAgIHgxPXsxICsgd2lkdGggLyAyfVxuICAgICAgICAgICAgeTE9XCIxOFwiXG4gICAgICAgICAgICB4Mj17MSArIHdpZHRoIC8gMn1cbiAgICAgICAgICAgIHkyPXtoZWlnaHQgLSAxNn1cbiAgICAgICAgICAgIHN0cm9rZT17Tk9ERV9DT0xPUlMuZ2F0ZXdheS5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9XCI2XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICB7dmFyaWFudCA9PT0gXCJleGNsdXNpdmVHYXRld2F5XCIgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxnIHRyYW5zZm9ybT17YHJvdGF0ZSg0NSwke3ggKyB3aWR0aCAvIDJ9LCR7eSArIGhlaWdodCAvIDJ9KWB9PlxuICAgICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcD17XCJyb3VuZFwifVxuICAgICAgICAgICAgICB4MT1cIjE4XCJcbiAgICAgICAgICAgICAgeTE9ezEgKyBoZWlnaHQgLyAyfVxuICAgICAgICAgICAgICB4Mj17d2lkdGggLSAxNn1cbiAgICAgICAgICAgICAgeTI9ezEgKyBoZWlnaHQgLyAyfVxuICAgICAgICAgICAgICBzdHJva2U9e05PREVfQ09MT1JTLmdhdGV3YXkuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg9XCI2XCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8bGluZVxuICAgICAgICAgICAgICBzdHJva2VMaW5lY2FwPXtcInJvdW5kXCJ9XG4gICAgICAgICAgICAgIHgxPXsxICsgd2lkdGggLyAyfVxuICAgICAgICAgICAgICB5MT1cIjE4XCJcbiAgICAgICAgICAgICAgeDI9ezEgKyB3aWR0aCAvIDJ9XG4gICAgICAgICAgICAgIHkyPXtoZWlnaHQgLSAxNn1cbiAgICAgICAgICAgICAgc3Ryb2tlPXtOT0RFX0NPTE9SUy5nYXRld2F5LmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHN0cm9rZVdpZHRoPVwiNlwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZz5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgICAge3ZhcmlhbnQgPT09IFwiaW5jbHVzaXZlR2F0ZXdheVwiICYmIChcbiAgICAgICAgPD5cbiAgICAgICAgICA8Y2lyY2xlXG4gICAgICAgICAgICBjeD17eCArIHdpZHRoIC8gMn1cbiAgICAgICAgICAgIGN5PXt5ICsgaGVpZ2h0IC8gMn1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXs2fVxuICAgICAgICAgICAgd2lkdGg9e3dpZHRoIC8gMn1cbiAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0IC8gMn1cbiAgICAgICAgICAgIHN0cm9rZT17Tk9ERV9DT0xPUlMuZ2F0ZXdheS5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgICAgIGZpbGw9XCJ0cmFuc3BhcmVudFwiXG4gICAgICAgICAgICByPXt3aWR0aCAvIDV9XG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgICAge3ZhcmlhbnQgPT09IFwiZXZlbnRCYXNlZEdhdGV3YXlcIiAmJiA8PnsvKiBUT0RPOiBUaWFnbyAqL308Lz59XG4gICAgICB7dmFyaWFudCA9PT0gXCJjb21wbGV4R2F0ZXdheVwiICYmIDw+ey8qIFRPRE86IFRpYWdvICovfTwvPn1cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IExhbmVOb2RlU3ZnID0gUmVhY3QuZm9yd2FyZFJlZjxTVkdSZWN0RWxlbWVudCwgTm9kZVN2Z1Byb3BzICYgeyBndXR0ZXJXaWR0aD86IG51bWJlciB9PigoX19wcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHsgZ3V0dGVyV2lkdGg6IF9ndXR0ZXJXaWR0aCwgLi4uX3Byb3BzIH0gPSB7IC4uLl9fcHJvcHMgfTtcbiAgY29uc3QgeyB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBzdHJva2VXaWR0aCwgcHJvcHMgfSA9IG5vcm1hbGl6ZShfcHJvcHMpO1xuXG4gIGNvbnN0IHtcbiAgICBzdHJva2VXaWR0aDogaW50ZXJhY3Rpb25SZWN0U3Ryb2tlV2lkdGgsXG4gICAgeDogaW50ZXJhY3Rpb25SZWN0WCxcbiAgICB5OiBpbnRlcmFjdGlvblJlY3RZLFxuICAgIHdpZHRoOiBpbnRlcmFjdGlvblJlY3RXaWR0aCxcbiAgICBoZWlnaHQ6IGludGVyYWN0aW9uUmVjdEhlaWdodCxcbiAgICBwcm9wczogX2ludGVyYWN0aW9uUmVjdFByb3BzLFxuICB9ID0gbm9ybWFsaXplKHsgLi4uX3Byb3BzLCBzdHJva2VXaWR0aDogREVGQVVMVF9JTlRSQUNUSU9OX1dJRFRIIC8gMiB9KTtcblxuICBjb25zdCB7IC4uLmludGVyYWN0aW9uUmVjdFByb3BzIH0gPSBfaW50ZXJhY3Rpb25SZWN0UHJvcHM7XG5cbiAgY29uc3QgZ3V0dGVyV2lkdGggPSBfZ3V0dGVyV2lkdGggPz8gNDA7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHJlY3RcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICB4PXt4fVxuICAgICAgICB5PXt5fVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgIGZpbGw9e1widHJhbnNwYXJlbnRcIn1cbiAgICAgICAgc3Ryb2tlPXtERUZBVUxUX05PREVfU1RST0tFX0NPTE9SfVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICByeD17XCIzXCJ9XG4gICAgICAgIHJ5PXtcIjNcIn1cbiAgICAgICAgY2xhc3NOYW1lPXtjb250YWluZXJOb2RlVmlzaWJsZVJlY3RDc3NDbGFzc05hbWV9XG4gICAgICAvPlxuICAgICAgPGxpbmVcbiAgICAgICAgeDE9e3ggKyBndXR0ZXJXaWR0aH1cbiAgICAgICAgeTE9e3l9XG4gICAgICAgIHgyPXt4ICsgZ3V0dGVyV2lkdGh9XG4gICAgICAgIHkyPXt5ICsgaGVpZ2h0fVxuICAgICAgICBzdHJva2U9e0RFRkFVTFRfTk9ERV9TVFJPS0VfQ09MT1J9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgIC8+XG4gICAgICA8cmVjdFxuICAgICAgICB7Li4uaW50ZXJhY3Rpb25SZWN0UHJvcHN9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB4PXtpbnRlcmFjdGlvblJlY3RYfVxuICAgICAgICB5PXtpbnRlcmFjdGlvblJlY3RZfVxuICAgICAgICB3aWR0aD17aW50ZXJhY3Rpb25SZWN0V2lkdGh9XG4gICAgICAgIGhlaWdodD17aW50ZXJhY3Rpb25SZWN0SGVpZ2h0fVxuICAgICAgICBzdHJva2VXaWR0aD17aW50ZXJhY3Rpb25SZWN0U3Ryb2tlV2lkdGh9XG4gICAgICAgIGZpbGw9e1widHJhbnNwYXJlbnRcIn1cbiAgICAgICAgc3Ryb2tlPXtcInRyYW5zcGFyZW50XCJ9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIHJ4PXtcIjBcIn1cbiAgICAgICAgcnk9e1wiMFwifVxuICAgICAgICBjbGFzc05hbWU9e2NvbnRhaW5lck5vZGVJbnRlcmFjdGlvblJlY3RDc3NDbGFzc05hbWV9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufSk7XG5cbmV4cG9ydCBjb25zdCBTdWJQcm9jZXNzTm9kZVN2ZyA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFNWR1JlY3RFbGVtZW50LFxuICBOb2RlU3ZnUHJvcHMgJiB7XG4gICAgYm9yZGVyUmFkaXVzPzogbnVtYmVyO1xuICAgIHJpbVdpZHRoPzogbnVtYmVyO1xuICAgIGljb25zPzogQWN0aXZpdHlOb2RlTWFya2VyW107XG4gICAgdmFyaWFudD86IFN1YlByb2Nlc3NWYXJpYW50O1xuICB9XG4+KChfX3Byb3BzLCByZWYpID0+IHtcbiAgY29uc3Qge1xuICAgIHJpbVdpZHRoOiBfcmltV2lkdGgsXG4gICAgYm9yZGVyUmFkaXVzOiBfYm9yZGVyUmFkaXVzLFxuICAgIGljb25zOiBfaWNvbnMsXG4gICAgdmFyaWFudDogX3ZhcmlhbnQsXG4gICAgLi4uX3Byb3BzXG4gIH0gPSB7IC4uLl9fcHJvcHMgfTtcbiAgY29uc3QgeyB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBzdHJva2VXaWR0aCwgcHJvcHMgfSA9IG5vcm1hbGl6ZShfcHJvcHMpO1xuXG4gIGNvbnN0IHtcbiAgICBzdHJva2VXaWR0aDogaW50ZXJhY3Rpb25SZWN0U3Ryb2tlV2lkdGgsXG4gICAgeDogaW50ZXJhY3Rpb25SZWN0WCxcbiAgICB5OiBpbnRlcmFjdGlvblJlY3RZLFxuICAgIHdpZHRoOiBpbnRlcmFjdGlvblJlY3RXaWR0aCxcbiAgICBoZWlnaHQ6IGludGVyYWN0aW9uUmVjdEhlaWdodCxcbiAgICBwcm9wczogX2ludGVyYWN0aW9uUmVjdFByb3BzLFxuICB9ID0gbm9ybWFsaXplKHsgLi4uX3Byb3BzLCBzdHJva2VXaWR0aDogREVGQVVMVF9JTlRSQUNUSU9OX1dJRFRIIC8gMiB9KTtcblxuICBjb25zdCB7IC4uLmludGVyYWN0aW9uUmVjdFByb3BzIH0gPSBfaW50ZXJhY3Rpb25SZWN0UHJvcHM7XG5cbiAgY29uc3QgaWNvbnMgPSB1c2VNZW1vKCgpID0+IG5ldyBTZXQoX2ljb25zKSwgW19pY29uc10pO1xuICBjb25zdCB2YXJpYW50ID0gX3ZhcmlhbnQgPz8gXCJvdGhlclwiO1xuICBjb25zdCByaW1XaWR0aCA9IHZhcmlhbnQgPT09IFwidHJhbnNhY3Rpb25cIiA/IF9yaW1XaWR0aCA/PyA1IDogMDtcbiAgY29uc3QgYm9yZGVyUmFkaXVzID0gdmFyaWFudCA9PT0gXCJ0cmFuc2FjdGlvblwiID8gX2JvcmRlclJhZGl1cyA/PyAxMCA6IDI7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge3ZhcmlhbnQgPT09IFwidHJhbnNhY3Rpb25cIiAmJiAoXG4gICAgICAgIDxyZWN0XG4gICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgIHg9e3ggKyByaW1XaWR0aH1cbiAgICAgICAgICB5PXt5ICsgcmltV2lkdGh9XG4gICAgICAgICAgd2lkdGg9e3dpZHRoIC0gcmltV2lkdGggKiAyfVxuICAgICAgICAgIGhlaWdodD17aGVpZ2h0IC0gcmltV2lkdGggKiAyfVxuICAgICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgICBmaWxsPXtcInRyYW5zcGFyZW50XCJ9XG4gICAgICAgICAgc3Ryb2tlPXtERUZBVUxUX05PREVfU1RST0tFX0NPTE9SfVxuICAgICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgICAgcng9e2JvcmRlclJhZGl1cyAtIHJpbVdpZHRofVxuICAgICAgICAgIHJ5PXtib3JkZXJSYWRpdXMgLSByaW1XaWR0aH1cbiAgICAgICAgICBjbGFzc05hbWU9e2NvbnRhaW5lck5vZGVWaXNpYmxlUmVjdENzc0NsYXNzTmFtZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICA8cmVjdFxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIHg9e3h9XG4gICAgICAgIHk9e3l9XG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e0RFRkFVTFRfTk9ERV9TVFJPS0VfQ09MT1J9XG4gICAgICAgIHN0cm9rZURhc2hhcnJheT17dmFyaWFudCA9PT0gXCJldmVudFwiID8gXCIxMCw1XCIgOiB1bmRlZmluZWR9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIHJ4PXtib3JkZXJSYWRpdXN9XG4gICAgICAgIHJ5PXtib3JkZXJSYWRpdXN9XG4gICAgICAgIGNsYXNzTmFtZT17Y29udGFpbmVyTm9kZVZpc2libGVSZWN0Q3NzQ2xhc3NOYW1lfVxuICAgICAgLz5cbiAgICAgIHsvKiDihpMgaW50ZXJhY3Rpb24gcmVjdCAqL31cbiAgICAgIDxyZWN0XG4gICAgICAgIHsuLi5pbnRlcmFjdGlvblJlY3RQcm9wc31cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIHg9e2ludGVyYWN0aW9uUmVjdFh9XG4gICAgICAgIHk9e2ludGVyYWN0aW9uUmVjdFl9XG4gICAgICAgIHdpZHRoPXtpbnRlcmFjdGlvblJlY3RXaWR0aH1cbiAgICAgICAgaGVpZ2h0PXtpbnRlcmFjdGlvblJlY3RIZWlnaHR9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtpbnRlcmFjdGlvblJlY3RTdHJva2VXaWR0aH1cbiAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e1widHJhbnNwYXJlbnRcIn1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgcng9e1wiMFwifVxuICAgICAgICByeT17XCIwXCJ9XG4gICAgICAgIGNsYXNzTmFtZT17Y29udGFpbmVyTm9kZUludGVyYWN0aW9uUmVjdENzc0NsYXNzTmFtZX1cbiAgICAgIC8+XG4gICAgICA8QWN0aXZpdHlOb2RlSWNvbnMgeD17eH0geT17eX0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0gaWNvbnM9e2ljb25zfSAvPlxuICAgIDwvPlxuICApO1xufSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBUZXh0QW5ub3RhdGlvbk5vZGVTdmcoX19wcm9wczogTm9kZVN2Z1Byb3BzICYgeyBzaG93UGxhY2Vob2xkZXI/OiBib29sZWFuIH0pIHtcbiAgY29uc3QgeyBzdHJva2VXaWR0aCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgcHJvcHM6IF9wcm9wcyB9ID0gbm9ybWFsaXplKF9fcHJvcHMpO1xuICBjb25zdCB7IHNob3dQbGFjZWhvbGRlciwgLi4ucHJvcHMgfSA9IF9wcm9wcztcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHJlY3RcbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e1widHJhbnNwYXJlbnRcIn1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7eH0sJHt5fSlgfVxuICAgICAgLz5cbiAgICAgIDxwYXRoXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBkPXtgTTIwLDAgTDAsMCBNMCwwIEwwLCR7aGVpZ2h0fSBNMCwke2hlaWdodH0gTDIwLCR7aGVpZ2h0fWB9XG4gICAgICAgIHN0cm9rZT17REVGQVVMVF9OT0RFX1NUUk9LRV9DT0xPUn1cbiAgICAgICAgc3Ryb2tlV2lkdGg9e3N0cm9rZVdpZHRofVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHt4fSwke3l9KWB9XG4gICAgICAvPlxuICAgICAge3Nob3dQbGFjZWhvbGRlciAmJiAoXG4gICAgICAgIDx0ZXh0IHg9e1wiMjAlXCJ9IHk9e1wiNjIuNSVcIn0gc3R5bGU9e3sgZm9udFNpemU6IFwiNWVtXCIsIGZvbnRXZWlnaHQ6IFwiYm9sZFwiIH19PlxuICAgICAgICAgIFRleHRcbiAgICAgICAgPC90ZXh0PlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IEdyb3VwTm9kZVN2ZyA9IFJlYWN0LmZvcndhcmRSZWY8U1ZHUmVjdEVsZW1lbnQsIE5vZGVTdmdQcm9wcyAmIHsgc3Ryb2tlRGFzaGFycmF5Pzogc3RyaW5nIH0+KFxuICAoX19wcm9wcywgcmVmKSA9PiB7XG4gICAgY29uc3QgeyBzdHJva2VXaWR0aCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgcHJvcHMgfSA9IG5vcm1hbGl6ZShfX3Byb3BzKTtcbiAgICBjb25zdCB7XG4gICAgICBzdHJva2VXaWR0aDogaW50ZXJhY3Rpb25SZWN0U3Ryb2tlV2lkdGgsXG4gICAgICB4OiBpbnRlcmFjdGlvblJlY3RYLFxuICAgICAgeTogaW50ZXJhY3Rpb25SZWN0WSxcbiAgICAgIHdpZHRoOiBpbnRlcmFjdGlvblJlY3RXaWR0aCxcbiAgICAgIGhlaWdodDogaW50ZXJhY3Rpb25SZWN0SGVpZ2h0LFxuICAgICAgcHJvcHM6IF9pbnRlcmFjdGlvblJlY3RQcm9wcyxcbiAgICB9ID0gbm9ybWFsaXplKHsgLi4uX19wcm9wcywgc3Ryb2tlV2lkdGg6IERFRkFVTFRfSU5UUkFDVElPTl9XSURUSCAvIDIgfSk7XG5cbiAgICBjb25zdCB7IHN0cm9rZURhc2hhcnJheTogaW50ZXJhY3Rpb25SZWN0U3Ryb2tlRGFzaGFycmF5LCAuLi5pbnRlcmFjdGlvblJlY3RQcm9wcyB9ID0gX2ludGVyYWN0aW9uUmVjdFByb3BzO1xuXG4gICAgY29uc3Qgc3Ryb2tlRGFzaGFycmF5ID0gcHJvcHMuc3Ryb2tlRGFzaGFycmF5ID8/IFwiMTQsMTAsMywxMFwiO1xuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8cmVjdFxuICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICB4PXt4fVxuICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgIGZpbGw9e1widHJhbnNwYXJlbnRcIn1cbiAgICAgICAgICBzdHJva2U9e0RFRkFVTFRfTk9ERV9TVFJPS0VfQ09MT1J9XG4gICAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAgICAgc3Ryb2tlRGFzaGFycmF5PXtzdHJva2VEYXNoYXJyYXl9XG4gICAgICAgICAgcng9ezQwfVxuICAgICAgICAgIHJ5PXs0MH1cbiAgICAgICAgLz5cbiAgICAgICAgPHJlY3RcbiAgICAgICAgICB7Li4uaW50ZXJhY3Rpb25SZWN0UHJvcHN9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgeD17aW50ZXJhY3Rpb25SZWN0WH1cbiAgICAgICAgICB5PXtpbnRlcmFjdGlvblJlY3RZfVxuICAgICAgICAgIHdpZHRoPXtpbnRlcmFjdGlvblJlY3RXaWR0aH1cbiAgICAgICAgICBoZWlnaHQ9e2ludGVyYWN0aW9uUmVjdEhlaWdodH1cbiAgICAgICAgICBzdHJva2VXaWR0aD17aW50ZXJhY3Rpb25SZWN0U3Ryb2tlV2lkdGh9XG4gICAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICAgIHN0cm9rZT17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICAgIHJ4PXtcIjMwXCJ9XG4gICAgICAgICAgcnk9e1wiMzBcIn1cbiAgICAgICAgICBjbGFzc05hbWU9e2NvbnRhaW5lck5vZGVJbnRlcmFjdGlvblJlY3RDc3NDbGFzc05hbWV9XG4gICAgICAgIC8+XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gVW5rbm93bk5vZGVTdmcoX3Byb3BzOiBOb2RlU3ZnUHJvcHMgJiB7IHN0cm9rZURhc2hhcnJheT86IHN0cmluZyB9KSB7XG4gIGNvbnN0IHsgc3Ryb2tlV2lkdGgsIHgsIHksIHdpZHRoLCBoZWlnaHQsIHByb3BzIH0gPSBub3JtYWxpemUoX3Byb3BzKTtcbiAgY29uc3Qgc3Ryb2tlRGFzaGFycmF5ID0gcHJvcHMuc3Ryb2tlRGFzaGFycmF5ID8/IFwiMiw0XCI7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxyZWN0XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e1wicmVkXCJ9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgc3Ryb2tlRGFzaGFycmF5PXtzdHJva2VEYXNoYXJyYXl9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRXZlbnRWYXJpYW50U3ltYm9sU3ZnKHtcbiAgdmFyaWFudCxcbiAgc3Ryb2tlLFxuICBzdHJva2VXaWR0aCxcbiAgY3gsXG4gIGN5LFxuICB4LFxuICB5LFxuICBpbm5lckNpcmNsZVJhZGl1cyxcbiAgb3V0ZXJDaXJjbGVSYWRpdXMsXG4gIGZpbGwsXG4gIGZpbGxlZCxcbn06IHtcbiAgdmFyaWFudDogRXZlbnRWYXJpYW50IHwgXCJub25lXCI7XG4gIHN0cm9rZTogc3RyaW5nO1xuICBzdHJva2VXaWR0aD86IG51bWJlcjtcbiAgY3g6IG51bWJlcjtcbiAgY3k6IG51bWJlcjtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIGlubmVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIG91dGVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIGZpbGw6IHN0cmluZ1xuICBmaWxsZWQ6IGJvb2xlYW47XG59KSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHt2YXJpYW50ID09PSBcIm1lc3NhZ2VFdmVudERlZmluaXRpb25cIiAmJiAoXG4gICAgICAgIDxNZXNzYWdlRXZlbnRTeW1ib2xTdmdcbiAgICAgICAgICBmaWxsPXtmaWxsfVxuICAgICAgICAgIGZpbGxlZD17ZmlsbGVkfVxuICAgICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgICAgIHg9e3h9XG4gICAgICAgICAgeT17eX1cbiAgICAgICAgICBjeD17Y3h9XG4gICAgICAgICAgY3k9e2N5fVxuICAgICAgICAgIGlubmVyQ2lyY2xlUmFkaXVzPXtpbm5lckNpcmNsZVJhZGl1c31cbiAgICAgICAgICBvdXRlckNpcmNsZVJhZGl1cz17b3V0ZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAge3ZhcmlhbnQgPT09IFwidGltZXJFdmVudERlZmluaXRpb25cIiAmJiAoXG4gICAgICAgIDxUaW1lckV2ZW50U3ltYm9sU3ZnXG4gICAgICAgICAgZmlsbD17ZmlsbH1cbiAgICAgICAgICBmaWxsZWQ9e2ZpbGxlZH1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICB4PXt4fVxuICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgY3g9e2N4fVxuICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHt2YXJpYW50ID09PSBcImVycm9yRXZlbnREZWZpbml0aW9uXCIgJiYgKFxuICAgICAgICA8RXJyb3JFdmVudFN5bWJvbFN2Z1xuICAgICAgICAgIGZpbGw9e2ZpbGx9XG4gICAgICAgICAgZmlsbGVkPXtmaWxsZWR9XG4gICAgICAgICAgc3Ryb2tlPXtzdHJva2V9XG4gICAgICAgICAgY3g9e2N4fVxuICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHt2YXJpYW50ID09PSBcImVzY2FsYXRpb25FdmVudERlZmluaXRpb25cIiAmJiAoXG4gICAgICAgIDxFc2NhbGF0aW9uRXZlbnRTeW1ib2xTdmdcbiAgICAgICAgICBmaWxsPXtmaWxsfVxuICAgICAgICAgIGZpbGxlZD17ZmlsbGVkfVxuICAgICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgICAgIHg9e3h9XG4gICAgICAgICAgeT17eX1cbiAgICAgICAgICBjeD17Y3h9XG4gICAgICAgICAgY3k9e2N5fVxuICAgICAgICAgIGlubmVyQ2lyY2xlUmFkaXVzPXtpbm5lckNpcmNsZVJhZGl1c31cbiAgICAgICAgICBvdXRlckNpcmNsZVJhZGl1cz17b3V0ZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAge3ZhcmlhbnQgPT09IFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIgJiYgKFxuICAgICAgICA8Q2FuY2VsRXZlbnRTeW1ib2xTdmdcbiAgICAgICAgICBmaWxsPXtmaWxsfVxuICAgICAgICAgIGZpbGxlZD17ZmlsbGVkfVxuICAgICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgICAgIHg9e3h9XG4gICAgICAgICAgeT17eX1cbiAgICAgICAgICBjeD17Y3h9XG4gICAgICAgICAgY3k9e2N5fVxuICAgICAgICAgIGlubmVyQ2lyY2xlUmFkaXVzPXtpbm5lckNpcmNsZVJhZGl1c31cbiAgICAgICAgICBvdXRlckNpcmNsZVJhZGl1cz17b3V0ZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAge3ZhcmlhbnQgPT09IFwiY29tcGVuc2F0ZUV2ZW50RGVmaW5pdGlvblwiICYmIChcbiAgICAgICAgPENvbXBlbnNhdGlvbkV2ZW50U3ltYm9sU3ZnXG4gICAgICAgICAgZmlsbD17ZmlsbH1cbiAgICAgICAgICBmaWxsZWQ9e2ZpbGxlZH1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICB4PXt4fVxuICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgY3g9e2N4fVxuICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHt2YXJpYW50ID09PSBcImNvbmRpdGlvbmFsRXZlbnREZWZpbml0aW9uXCIgJiYgKFxuICAgICAgICA8Q29uZGl0aW9uYWxFdmVudFN5bWJvbFN2Z1xuICAgICAgICAgIGZpbGw9e2ZpbGx9XG4gICAgICAgICAgZmlsbGVkPXtmaWxsZWR9XG4gICAgICAgICAgc3Ryb2tlPXtzdHJva2V9XG4gICAgICAgICAgeD17eH1cbiAgICAgICAgICB5PXt5fVxuICAgICAgICAgIGN4PXtjeH1cbiAgICAgICAgICBjeT17Y3l9XG4gICAgICAgICAgaW5uZXJDaXJjbGVSYWRpdXM9e2lubmVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAgIG91dGVyQ2lyY2xlUmFkaXVzPXtvdXRlckNpcmNsZVJhZGl1c31cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICB7dmFyaWFudCA9PT0gXCJsaW5rRXZlbnREZWZpbml0aW9uXCIgJiYgKFxuICAgICAgICA8TGlua0V2ZW50U3ltYm9sU3ZnXG4gICAgICAgICAgZmlsbD17ZmlsbH1cbiAgICAgICAgICBmaWxsZWQ9e2ZpbGxlZH1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICB4PXt4fVxuICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgY3g9e2N4fVxuICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHt2YXJpYW50ID09PSBcInNpZ25hbEV2ZW50RGVmaW5pdGlvblwiICYmIChcbiAgICAgICAgPFNpZ25hbEV2ZW50U3ltYm9sU3ZnXG4gICAgICAgICAgZmlsbD17ZmlsbH1cbiAgICAgICAgICBmaWxsZWQ9e2ZpbGxlZH1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICB4PXt4fVxuICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgY3g9e2N4fVxuICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICBpbm5lckNpcmNsZVJhZGl1cz17aW5uZXJDaXJjbGVSYWRpdXN9XG4gICAgICAgICAgb3V0ZXJDaXJjbGVSYWRpdXM9e291dGVyQ2lyY2xlUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgKX1cblxuICAgICAge3ZhcmlhbnQgPT09IFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCIgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxjaXJjbGVcbiAgICAgICAgICAgIGN4PXtjeH1cbiAgICAgICAgICAgIGN5PXtjeX1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsxLjV9XG4gICAgICAgICAgICBmaWxsPXtcIiNhMzAwMDBcIn1cbiAgICAgICAgICAgIHN0cm9rZT17XCIjYTMwMDAwXCJ9XG4gICAgICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICAgICAgcj17b3V0ZXJDaXJjbGVSYWRpdXMgLyAyfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICAgIHsvKiBtdWx0aXBsZSAqL31cbiAgICAgIHsvKiBwYXJhbGxlbCBtdWx0aXBsZSAqL31cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE1lc3NhZ2VFdmVudFN5bWJvbFN2Zyh7XG4gIHN0cm9rZSxcbiAgY3gsXG4gIGN5LFxuICB4LFxuICB5LFxuICBpbm5lckNpcmNsZVJhZGl1cyxcbiAgb3V0ZXJDaXJjbGVSYWRpdXMsXG4gIGZpbGwsXG4gIGZpbGxlZCxcbn06IHtcbiAgc3Ryb2tlOiBzdHJpbmc7XG4gIGN4OiBudW1iZXI7XG4gIGN5OiBudW1iZXI7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xuICBpbm5lckNpcmNsZVJhZGl1czogbnVtYmVyO1xuICBvdXRlckNpcmNsZVJhZGl1czogbnVtYmVyO1xuICBmaWxsOiBzdHJpbmc7XG4gIGZpbGxlZDogYm9vbGVhbjtcbn0pIHtcbiAgY29uc3QgcGFkZGluZyA9IDEuMiAqIChvdXRlckNpcmNsZVJhZGl1cyAtIGlubmVyQ2lyY2xlUmFkaXVzKTtcbiAgY29uc3QgYm9keVdpZHRoID0gaW5uZXJDaXJjbGVSYWRpdXMgKiAxLjI7XG4gIGNvbnN0IGJvZHlIZWlnaHQgPSBpbm5lckNpcmNsZVJhZGl1cyAqIDAuODtcblxuICAvLyBFbnZlbG9wZSBib2R5IHBhcnQgY29vcmRpbmF0ZXNcbiAgY29uc3QgZW52ZWxvcGVCb2R5ID0ge1xuICAgIHRvcExlZnQ6IHsgeDogY3ggLSBib2R5V2lkdGggLyAyLCB5OiBjeSAtIGJvZHlIZWlnaHQgLyAyIH0sXG4gICAgYm90dG9tUmlnaHQ6IHsgeDogY3ggKyBib2R5V2lkdGggLyAyLCB5OiBjeSArIGJvZHlIZWlnaHQgLyAyIH0sXG4gIH07XG5cbiAgLy8gQ29vcmRpbmF0ZXMgZm9yIHRoZSBkb3dud2FyZC1mYWNpbmcgdHJpYW5nbGUgKGZsYXApXG4gIGNvbnN0IGZsYXBIZWlnaHQgPSBib2R5SGVpZ2h0ICogMC41O1xuICBjb25zdCBlbnZlbG9wZUZsYXAgPSBbXG4gICAgeyB4OiBlbnZlbG9wZUJvZHkudG9wTGVmdC54LCB5OiBlbnZlbG9wZUJvZHkudG9wTGVmdC55IH0sIC8vIHRvcCBsZWZ0XG4gICAgeyB4OiBlbnZlbG9wZUJvZHkuYm90dG9tUmlnaHQueCwgeTogZW52ZWxvcGVCb2R5LnRvcExlZnQueSB9LCAvLyB0b3AgcmlnaHRcbiAgICB7IHg6IGN4LCB5OiBlbnZlbG9wZUJvZHkudG9wTGVmdC55ICsgZmxhcEhlaWdodCB9LCAvLyBib3R0b20gbWlkZGxlIChmbGFwIHBvaW50KVxuICBdO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHsvKiBFbnZlbG9wZSBib2R5IChyZWN0YW5nbGUpICovfVxuICAgICAgPHJlY3RcbiAgICAgICAgeD17ZW52ZWxvcGVCb2R5LnRvcExlZnQueH1cbiAgICAgICAgeT17ZW52ZWxvcGVCb2R5LnRvcExlZnQueX1cbiAgICAgICAgd2lkdGg9e2JvZHlXaWR0aH1cbiAgICAgICAgaGVpZ2h0PXtib2R5SGVpZ2h0fVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICBmaWxsPXtmaWxsZWQgPyBzdHJva2UgOiBmaWxsfSAvLyBXaGl0ZSB3aGVuIG5vdCBmaWxsZWQsIGZpbGxlZCBjb2xvciB3aGVuIGZpbGxlZFxuICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgIC8+XG5cbiAgICAgIHsvKiBFbnZlbG9wZSBmbGFwIChkb3dud2FyZC1mYWNpbmcgdHJpYW5nbGUpICovfVxuICAgICAgPHBvbHlnb25cbiAgICAgICAgcG9pbnRzPXtgJHtlbnZlbG9wZUZsYXBbMF0ueH0sJHtlbnZlbG9wZUZsYXBbMF0ueX0gJHtlbnZlbG9wZUZsYXBbMV0ueH0sJHtlbnZlbG9wZUZsYXBbMV0ueX0gJHtlbnZlbG9wZUZsYXBbMl0ueH0sJHtlbnZlbG9wZUZsYXBbMl0ueX1gfVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICBmaWxsPXtmaWxsZWQgPyBzdHJva2UgOiBmaWxsfSAvLyBGaWxsZWQgd2l0aCBzdHJva2UgY29sb3IsIGJ1dCB3aGl0ZSB3aGVuIG5vdCBmaWxsZWRcbiAgICAgICAgc3Ryb2tlPXtzdHJva2V9XG4gICAgICAvPlxuXG4gICAgICB7LyogV2hpdGUgc2lkZXMgb2YgdGhlIHRyaWFuZ2xlIHdoZW4gZmlsbGVkICovfVxuICAgICAge2ZpbGxlZCAmJiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgIHgxPXtlbnZlbG9wZUZsYXBbMF0ueH1cbiAgICAgICAgICAgIHkxPXtlbnZlbG9wZUZsYXBbMF0ueX1cbiAgICAgICAgICAgIHgyPXtlbnZlbG9wZUZsYXBbMl0ueH1cbiAgICAgICAgICAgIHkyPXtlbnZlbG9wZUZsYXBbMl0ueX1cbiAgICAgICAgICAgIHN0cm9rZT17ZmlsbH1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsxLjV9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8bGluZVxuICAgICAgICAgICAgeDE9e2VudmVsb3BlRmxhcFsxXS54fVxuICAgICAgICAgICAgeTE9e2VudmVsb3BlRmxhcFsxXS55fVxuICAgICAgICAgICAgeDI9e2VudmVsb3BlRmxhcFsyXS54fVxuICAgICAgICAgICAgeTI9e2VudmVsb3BlRmxhcFsyXS55fVxuICAgICAgICAgICAgc3Ryb2tlPXtmaWxsfVxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUaW1lckV2ZW50U3ltYm9sU3ZnKHtcbiAgc3Ryb2tlLFxuICBjeCxcbiAgY3ksXG4gIHgsXG4gIHksXG4gIGlubmVyQ2lyY2xlUmFkaXVzLFxuICBvdXRlckNpcmNsZVJhZGl1cyxcbiAgZmlsbCxcbiAgZmlsbGVkLFxufToge1xuICBzdHJva2U6IHN0cmluZztcbiAgY3g6IG51bWJlcjtcbiAgY3k6IG51bWJlcjtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIGlubmVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIG91dGVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIGZpbGw6IHN0cmluZztcbiAgZmlsbGVkOiBib29sZWFuO1xufSkge1xuICBjb25zdCBwYWRkaW5nID0gMS4yICogKG91dGVyQ2lyY2xlUmFkaXVzIC0gaW5uZXJDaXJjbGVSYWRpdXMpO1xuICBjb25zdCBjbG9ja1JhZGl1cyA9IGlubmVyQ2lyY2xlUmFkaXVzIC0gcGFkZGluZztcblxuICAvLyBEZWZpbmUgY2xvY2sgaGFuZCBsZW5ndGhzXG4gIGNvbnN0IHNob3J0SGFuZExlbmd0aCA9IGNsb2NrUmFkaXVzICogMC41OyAvLyBIb3VyIGhhbmQgbGVuZ3RoXG4gIGNvbnN0IGxvbmdIYW5kTGVuZ3RoID0gY2xvY2tSYWRpdXMgKiAwLjkwOyAvLyBNaW51dGUgaGFuZCBsZW5ndGhcblxuICAvLyBOZXcgcG9zaXRpb25zIGFmdGVyIHN1YnRyYWN0aW5nIDg1IGRlZ3JlZXNcbiAgY29uc3QgaG91ckhhbmRBbmdsZSA9IChNYXRoLlBJIC8gNikgKiAzIC0gKDc1ICogTWF0aC5QSSkgLyAxODA7IC8vIEhvdXIgaGFuZCBhdCA1IGRlZ3JlZXNcbiAgY29uc3QgbWludXRlSGFuZEFuZ2xlID0gMCAtICg3NSAqIE1hdGguUEkpIC8gMTgwOyAvLyBNaW51dGUgaGFuZCBhdCAtODUgZGVncmVlcyAoMjc1IGRlZ3JlZXMpXG5cbiAgLy8gSG91ciBoYW5kIGNvb3JkaW5hdGVzXG4gIGNvbnN0IGhvdXJIYW5kID0ge1xuICAgIHg6IGN4ICsgc2hvcnRIYW5kTGVuZ3RoICogTWF0aC5jb3MoaG91ckhhbmRBbmdsZSksXG4gICAgeTogY3kgKyBzaG9ydEhhbmRMZW5ndGggKiBNYXRoLnNpbihob3VySGFuZEFuZ2xlKSxcbiAgfTtcblxuICAvLyBNaW51dGUgaGFuZCBjb29yZGluYXRlc1xuICBjb25zdCBtaW51dGVIYW5kID0ge1xuICAgIHg6IGN4ICsgbG9uZ0hhbmRMZW5ndGggKiBNYXRoLmNvcyhtaW51dGVIYW5kQW5nbGUpLFxuICAgIHk6IGN5ICsgbG9uZ0hhbmRMZW5ndGggKiBNYXRoLnNpbihtaW51dGVIYW5kQW5nbGUpLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHsvKiBDbG9jayBGYWNlIChpbm5lciBjaXJjbGUpICovfVxuICAgICAgPGNpcmNsZVxuICAgICAgICBjeD17Y3h9XG4gICAgICAgIGN5PXtjeX1cbiAgICAgICAgcj17Y2xvY2tSYWRpdXN9XG4gICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgICBmaWxsPXtmaWxsZWQgPyBzdHJva2UgOiBcInRyYW5zcGFyZW50XCJ9IC8vIFdoaXRlIHdoZW4gbm90IGZpbGxlZCwgc3Ryb2tlIGNvbG9yIHdoZW4gZmlsbGVkXG4gICAgICAvPlxuXG4gICAgICB7LyogU2hvcnQgSG91ciBIYW5kICovfVxuICAgICAgPGxpbmVcbiAgICAgICAgeDE9e2N4fVxuICAgICAgICB5MT17Y3l9XG4gICAgICAgIHgyPXtob3VySGFuZC54fVxuICAgICAgICB5Mj17aG91ckhhbmQueX1cbiAgICAgICAgc3Ryb2tlPXtmaWxsZWQgPyBcInRyYW5zcGFyZW50XCIgOiBzdHJva2V9IC8vIFdoaXRlIHdoZW4gZmlsbGVkLCBzdHJva2UgY29sb3Igb3RoZXJ3aXNlXG4gICAgICAgIHN0cm9rZVdpZHRoPXsxLjV9XG4gICAgICAvPlxuXG4gICAgICB7LyogTG9uZyBNaW51dGUgSGFuZCAqL31cbiAgICAgIDxsaW5lXG4gICAgICAgIHgxPXtjeH1cbiAgICAgICAgeTE9e2N5fVxuICAgICAgICB4Mj17bWludXRlSGFuZC54fVxuICAgICAgICB5Mj17bWludXRlSGFuZC55fVxuICAgICAgICBzdHJva2U9e2ZpbGxlZCA/IFwidHJhbnNwYXJlbnRcIiA6IHN0cm9rZX0gLy8gV2hpdGUgd2hlbiBmaWxsZWQsIHN0cm9rZSBjb2xvciBvdGhlcndpc2VcbiAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgIC8+XG5cbiAgICAgIHsvKiAxMiBTcG9rZXMgYXJvdW5kIHRoZSBjbG9jayBmYWNlICovfVxuICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IDEyIH0sIChfLCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBhbmdsZSA9IChpbmRleCAvIDEyKSAqIDIgKiBNYXRoLlBJOyAvLyBBbmdsZSBmb3IgZWFjaCBob3VyXG4gICAgICAgIGNvbnN0IHgxID0gY3ggKyBjbG9ja1JhZGl1cyAqIE1hdGguY29zKGFuZ2xlKTsgLy8gT3V0ZXIgY2lyY2xlIHBvaW50XG4gICAgICAgIGNvbnN0IHkxID0gY3kgKyBjbG9ja1JhZGl1cyAqIE1hdGguc2luKGFuZ2xlKTtcbiAgICAgICAgY29uc3QgeDIgPSBjeCArIChjbG9ja1JhZGl1cyAtIHBhZGRpbmcgKiAwLjUpICogTWF0aC5jb3MoYW5nbGUpOyAvLyBJbm5lciBjaXJjbGUgcG9pbnRcbiAgICAgICAgY29uc3QgeTIgPSBjeSArIChjbG9ja1JhZGl1cyAtIHBhZGRpbmcgKiAwLjUpICogTWF0aC5zaW4oYW5nbGUpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICB4MT17eDF9XG4gICAgICAgICAgICB5MT17eTF9XG4gICAgICAgICAgICB4Mj17eDJ9XG4gICAgICAgICAgICB5Mj17eTJ9XG4gICAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsxLjV9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRXJyb3JFdmVudFN5bWJvbFN2Zyh7XG4gIHN0cm9rZSxcbiAgY3gsXG4gIGN5LFxuICBpbm5lckNpcmNsZVJhZGl1cyxcbiAgb3V0ZXJDaXJjbGVSYWRpdXMsXG4gIGZpbGwsXG4gIGZpbGxlZCxcbn06IHtcbiAgc3Ryb2tlOiBzdHJpbmc7XG4gIGN4OiBudW1iZXI7XG4gIGN5OiBudW1iZXI7XG4gIGlubmVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIG91dGVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIGZpbGw6IHN0cmluZztcbiAgZmlsbGVkOiBib29sZWFuO1xufSkge1xuICAvLyBQYWRkaW5nIGNhbGN1bGF0aW9uXG4gIGNvbnN0IHBhZGRpbmcgPSAxLjUgKiAob3V0ZXJDaXJjbGVSYWRpdXMgLSBpbm5lckNpcmNsZVJhZGl1cyk7XG4gIGNvbnN0IGh4ID0gaW5uZXJDaXJjbGVSYWRpdXMgLSBwYWRkaW5nOyAvLyBob3Jpem9udGFsIG9mZnNldFxuICBjb25zdCBoeSA9IGlubmVyQ2lyY2xlUmFkaXVzIC0gcGFkZGluZzsgLy8gdmVydGljYWwgb2Zmc2V0XG5cbiAgLy8gRGVmaW5lIHRoZSBzaGFwZSBwb2ludHMgdXNpbmcgaHggYW5kIGh5IGZvciBwb3NpdGlvbmluZyB3aXRoIHNjYWxpbmdcbiAgY29uc3Qgc2NhbGVGYWN0b3IgPSAyMTsgLy8gQWRqdXN0IHNjYWxlIGZhY3RvciBhcyBuZWVkZWQgZm9yIHZpc2liaWxpdHlcbiAgY29uc3Qgc2hpZnRMZWZ0ID0gMzsgLy8gQW1vdW50IHRvIHNoaWZ0IHRoZSBzaGFwZSB0byB0aGUgbGVmdFxuXG4gIGNvbnN0IHBvaW50cyA9IFtcbiAgICB7IHg6IGN4IC0gc2hpZnRMZWZ0LCB5OiBjeSB9LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2VudGVyIHBvaW50IHNoaWZ0ZWQgbGVmdFxuICAgIHsgeDogY3ggLSBoeCAqIDAuMDM3ICogc2NhbGVGYWN0b3IgLSBzaGlmdExlZnQsIHk6IGN5ICsgaHkgKiAwLjA1MiAqIHNjYWxlRmFjdG9yIH0sIC8vICgyNTksIDM5NikgYWRqdXN0ZWRcbiAgICB7IHg6IGN4IC0gaHggKiAwLjAwMyAqIHNjYWxlRmFjdG9yIC0gc2hpZnRMZWZ0LCB5OiBjeSAtIGh5ICogMC4wNSAqIHNjYWxlRmFjdG9yIH0sICAgLy8gKDMzOCwgMTk1KSBhZGp1c3RlZFxuICAgIHsgeDogY3ggKyBoeCAqIDAuMDI3ICogc2NhbGVGYWN0b3IgLSBzaGlmdExlZnQsIHk6IGN5ICsgaHkgKiAwLjAxNiAqIHNjYWxlRmFjdG9yIH0sICAvLyAoNDA3LCAzMjUpIGFkanVzdGVkXG4gICAgeyB4OiBjeCArIGh4ICogMC4wNTggKiBzY2FsZUZhY3RvciAtIHNoaWZ0TGVmdCwgeTogY3kgLSBoeSAqIDAuMDQ2ICogc2NhbGVGYWN0b3IgfSwgIC8vICg0NzgsIDIyMykgYWRqdXN0ZWRcbiAgICB7IHg6IGN4ICsgaHggKiAwLjAyOSAqIHNjYWxlRmFjdG9yIC0gc2hpZnRMZWZ0LCB5OiBjeSArIGh5ICogMC4wNjYgKiBzY2FsZUZhY3RvciB9LCAgIC8vICg0MTEsIDQyMSkgYWRqdXN0ZWRcbiAgICB7IHg6IGN4IC0gc2hpZnRMZWZ0LCB5OiBjeSB9LCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVwZWF0IGNlbnRlciBwb2ludCBzaGlmdGVkIGxlZnRcbiAgICB7IHg6IGN4IC0gaHggKiAwLjAzNyAqIHNjYWxlRmFjdG9yIC0gc2hpZnRMZWZ0LCB5OiBjeSArIGh5ICogMC4wNTIgKiBzY2FsZUZhY3RvciB9LCAvLyAoMjU5LCAzOTYpIGFkanVzdGVkXG4gIF07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHBvbHlnb25cbiAgICAgICAgcG9pbnRzPXtwb2ludHNcbiAgICAgICAgICAubWFwKHBvaW50ID0+IGAke3BvaW50Lnh9LCR7cG9pbnQueX1gKVxuICAgICAgICAgIC5qb2luKFwiIFwiKX1cbiAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgZmlsbD17ZmlsbGVkID8gc3Ryb2tlIDogXCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBFc2NhbGF0aW9uRXZlbnRTeW1ib2xTdmcoe1xuICBzdHJva2UsXG4gIGN4LFxuICBjeSxcbiAgeCxcbiAgeSxcbiAgaW5uZXJDaXJjbGVSYWRpdXMsXG4gIG91dGVyQ2lyY2xlUmFkaXVzLFxuICBmaWxsLFxuICBmaWxsZWQsXG59OiB7XG4gIHN0cm9rZTogc3RyaW5nO1xuICBjeDogbnVtYmVyO1xuICBjeTogbnVtYmVyO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgaW5uZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgb3V0ZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgZmlsbDogc3RyaW5nO1xuICBmaWxsZWQ6IGJvb2xlYW47XG59KSB7XG4gIGNvbnN0IGFycm93SGVpZ2h0ID0gaW5uZXJDaXJjbGVSYWRpdXMgKiAxLjI7IC8vIEhlaWdodCBvZiB0aGUgYXJyb3dcbiAgY29uc3QgYXJyb3dCYXNlV2lkdGggPSBpbm5lckNpcmNsZVJhZGl1cyAqIDE7IC8vIEJhc2Ugd2lkdGggb2YgdGhlIGFycm93XG5cbiAgLy8gRGVmaW5lIHBvaW50cyBmb3IgdGhlIHR3byBsb25nZXIgZGlhZ29uYWwgbGluZXMgKGZvcm1pbmcgdGhlIHVwcGVyIHRyaWFuZ2xlKVxuICBjb25zdCB1cHBlckxlZnRQb2ludCA9IHsgeDogY3ggLSBhcnJvd0Jhc2VXaWR0aCAvIDIsIHk6IGN5ICsgYXJyb3dIZWlnaHQgLyAyIH07IC8vIEJvdHRvbSBsZWZ0XG4gIGNvbnN0IHVwcGVyUmlnaHRQb2ludCA9IHsgeDogY3ggKyBhcnJvd0Jhc2VXaWR0aCAvIDIsIHk6IGN5ICsgYXJyb3dIZWlnaHQgLyAyIH07IC8vIEJvdHRvbSByaWdodFxuICBjb25zdCB0b3BQb2ludCA9IHsgeDogY3gsIHk6IGN5IC0gYXJyb3dIZWlnaHQgLyAyIH07IC8vIFRvcCBwb2ludFxuXG4gIC8vIERlZmluZSBwb2ludHMgZm9yIHRoZSB0d28gc2hvcnRlciBkaWFnb25hbCBsaW5lcyAoZm9ybWluZyB0aGUgbWlkZGxlIHBhcnQpXG4gIGNvbnN0IG1pZFBvaW50ID0geyB4OiBjeCwgeTogY3kgKyBhcnJvd0hlaWdodCAvIDIwIH07IC8vIE1pZGRsZSBwb2ludFxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxwb2x5Z29uXG4gICAgICAgIHBvaW50cz17YCR7dXBwZXJMZWZ0UG9pbnQueH0sJHt1cHBlckxlZnRQb2ludC55fSAke3RvcFBvaW50Lnh9LCR7dG9wUG9pbnQueX0gJHt1cHBlclJpZ2h0UG9pbnQueH0sJHt1cHBlclJpZ2h0UG9pbnQueX0gJHttaWRQb2ludC54fSwgJHttaWRQb2ludC55fWB9XG4gICAgICAgIHN0cm9rZVdpZHRoPXsxLjV9XG4gICAgICAgIHN0cm9rZUxpbmVqb2luPXtcInJvdW5kXCJ9XG4gICAgICAgIGZpbGw9e2ZpbGxlZCA/IHN0cm9rZSA6IFwidHJhbnNwYXJlbnRcIn1cbiAgICAgICAgc3Ryb2tlPXtzdHJva2V9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xuXG59XG5cblxuXG5leHBvcnQgZnVuY3Rpb24gU2lnbmFsRXZlbnRTeW1ib2xTdmcoe1xuICBzdHJva2UsXG4gIGN4LFxuICBjeSxcbiAgeCxcbiAgeSxcbiAgaW5uZXJDaXJjbGVSYWRpdXMsXG4gIG91dGVyQ2lyY2xlUmFkaXVzLFxuICBmaWxsLFxuICBmaWxsZWQsXG59OiB7XG4gIHN0cm9rZTogc3RyaW5nO1xuICBjeDogbnVtYmVyO1xuICBjeTogbnVtYmVyO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgaW5uZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgb3V0ZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgZmlsbDogc3RyaW5nO1xuICBmaWxsZWQ6IGJvb2xlYW47XG59KSB7XG5cbiAgY29uc3QgZmFyWFBvaW50ID0gNztcbiAgY29uc3QgY2xvc2VYUG9pbnQgPSA1OyBcbiAgY29uc3QgaGlnaFlQb2ludCA9IDc7XG4gIGNvbnN0IGxvd1lQb2ludCA9IDI7XG4gIGNvbnN0IGxlZnRVcHBlckxlZnRQb2ludCA9IHsgeDogY3ggLSBpbm5lckNpcmNsZVJhZGl1cyAvIDIgLSA3LCB5OiBjeSAtIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiArIDIgfTsgXG4gIGNvbnN0IHJpZ2h0VXBwZXJMZWZ0UG9pbnQgPSB7IHg6IGN4IC0gaW5uZXJDaXJjbGVSYWRpdXMgLyAyICsgNSwgeTogY3kgLSBpbm5lckNpcmNsZVJhZGl1cyAvIDIgLSA3IH07IFxuICBjb25zdCBjZW50ZXJVcHBlclBvaW50ID0geyB4OiBjeCwgeTogY3kgLSAoaW5uZXJDaXJjbGVSYWRpdXMgLyA1KSB9OyBcbiAgY29uc3QgbGVmdFVwcGVyUmlnaHRQb2ludCA9IHsgeDogY3ggKyBpbm5lckNpcmNsZVJhZGl1cyAvIDIgLSA1LCB5OiBjeSAtIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiAtIDcgfTsgXG4gIGNvbnN0IHJpZ2h0VXBwZXJSaWdodFBvaW50ID0geyB4OiBjeCArIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiArIDcsIHk6IGN5IC0gaW5uZXJDaXJjbGVSYWRpdXMgLyAyICsgMiB9OyBcbiAgY29uc3QgY2VudGVyUmlnaHRQb2ludCA9IHsgeDogY3ggKyBpbm5lckNpcmNsZVJhZGl1cyAvIDUsIHk6IGN5IH07IFxuICBjb25zdCByaWdodExvd2VyUmlnaHRQb2ludCA9IHsgeDogY3ggKyBpbm5lckNpcmNsZVJhZGl1cyAvIDIgKyA3LCB5OiBjeSArIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiAtIDIgfTsgXG4gIGNvbnN0IGxlZnRMb3dlclJpZ2h0UG9pbnQgPSB7IHg6IGN4ICsgaW5uZXJDaXJjbGVSYWRpdXMgLyAyIC0gNSwgeTogY3kgKyBpbm5lckNpcmNsZVJhZGl1cyAvIDIgKyA3ICB9O1xuICBjb25zdCBjZW50ZXJMb3dlclBvaW50ID0geyB4OiBjeCwgeTogY3kgKyAoaW5uZXJDaXJjbGVSYWRpdXMgLyA1KSB9OyBcbiAgY29uc3QgcmlnaHRMb3dlckxlZnRQb2ludCA9IHsgeDogY3ggLSBpbm5lckNpcmNsZVJhZGl1cyAvIDIgKyA1LCB5OiBjeSArIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiArIDcgfTsgXG4gIGNvbnN0IGxlZnRMb3dlckxlZnRQb2ludCA9IHsgeDogY3ggLSBpbm5lckNpcmNsZVJhZGl1cyAvIDIgLSA3LCB5OiBjeSArIGlubmVyQ2lyY2xlUmFkaXVzIC8gMiAtIDIgfTsgXG4gIGNvbnN0IGNlbnRlckxlZnRQb2ludCA9IHsgeDogY3ggLSBpbm5lckNpcmNsZVJhZGl1cyAvIDUsIHk6IGN5IH07IFxuICBcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPHBvbHlnb25cbiAgICAgICAgcG9pbnRzPXtgJHtsZWZ0VXBwZXJMZWZ0UG9pbnQueH0sJHtsZWZ0VXBwZXJMZWZ0UG9pbnQueX0gJHtyaWdodFVwcGVyTGVmdFBvaW50Lnh9LCR7cmlnaHRVcHBlckxlZnRQb2ludC55fSAke2NlbnRlclVwcGVyUG9pbnQueH0sJHtjZW50ZXJVcHBlclBvaW50Lnl9IFxuICAgICAgICAke2xlZnRVcHBlclJpZ2h0UG9pbnQueH0sICR7bGVmdFVwcGVyUmlnaHRQb2ludC55fSAke3JpZ2h0VXBwZXJSaWdodFBvaW50Lnh9LCAke3JpZ2h0VXBwZXJSaWdodFBvaW50Lnl9ICR7Y2VudGVyUmlnaHRQb2ludC54fSwgJHtjZW50ZXJSaWdodFBvaW50Lnl9XG4gICAgICAgICR7cmlnaHRMb3dlclJpZ2h0UG9pbnQueH0sICR7cmlnaHRMb3dlclJpZ2h0UG9pbnQueX1cbiAgICAgICAgJHtsZWZ0TG93ZXJSaWdodFBvaW50Lnh9LCAke2xlZnRMb3dlclJpZ2h0UG9pbnQueX1cbiAgICAgICAgJHtjZW50ZXJMb3dlclBvaW50Lnh9LCAke2NlbnRlckxvd2VyUG9pbnQueX1cbiAgICAgICAgJHtyaWdodExvd2VyTGVmdFBvaW50Lnh9LCAke3JpZ2h0TG93ZXJMZWZ0UG9pbnQueX1cbiAgICAgICAgJHtsZWZ0TG93ZXJMZWZ0UG9pbnQueH0sICR7bGVmdExvd2VyTGVmdFBvaW50Lnl9XG4gICAgICAgICR7Y2VudGVyTGVmdFBvaW50Lnh9LCAke2NlbnRlckxlZnRQb2ludC55fVxuICAgICAgICBgfVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICBmaWxsPXtmaWxsZWQgPyBzdHJva2UgOiBcInRyYW5zcGFyZW50XCJ9XG4gICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcblxufVxuXG5leHBvcnQgZnVuY3Rpb24gQ29tcGVuc2F0aW9uRXZlbnRTeW1ib2xTdmcoe1xuICBzdHJva2UsXG4gIGN4LFxuICBjeSxcbiAgeCxcbiAgeSxcbiAgaW5uZXJDaXJjbGVSYWRpdXMsXG4gIG91dGVyQ2lyY2xlUmFkaXVzLFxuICBmaWxsLFxuICBmaWxsZWQsXG59OiB7XG4gIHN0cm9rZTogc3RyaW5nO1xuICBjeDogbnVtYmVyO1xuICBjeTogbnVtYmVyO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgaW5uZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgb3V0ZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgZmlsbDogc3RyaW5nO1xuICBmaWxsZWQ6IGJvb2xlYW47XG59KSB7XG4gIGNvbnN0IHBhZGRpbmcgPSAxLjUgKiAob3V0ZXJDaXJjbGVSYWRpdXMgLSBpbm5lckNpcmNsZVJhZGl1cyk7XG5cbiAgLy8gSW5jcmVhc2UgdGhlIGJhc2Ugb2YgdGhlIHRyaWFuZ2xlcyBieSBhZGp1c3RpbmcgaHggZnVydGhlclxuICBjb25zdCBoeCA9IHggKyBpbm5lckNpcmNsZVJhZGl1cyAtIHBhZGRpbmcgKiAwLjY7IC8vIEJhc2Ugd2lkZXIsIHNtYWxsZXIgcGFkZGluZyBtdWx0aXBsaWVyXG4gIGNvbnN0IGh5ID0geSArIGlubmVyQ2lyY2xlUmFkaXVzIC0gcGFkZGluZyAqIDAuMjsgLy8gS2VlcCB0aGUgaGVpZ2h0IGFkanVzdG1lbnRcblxuICAvLyBBZGp1c3QgdGhlIGhvcml6b250YWwgcG9zaXRpb24sIG1vdmluZyBzbGlnaHRseSB0byB0aGUgcmlnaHQgKGhhbGYgb2YgcHJldmlvdXMgbGVmdCBvZmZzZXQpXG4gIGNvbnN0IHJpZ2h0T2Zmc2V0ID0gMC4xNSAqIGlubmVyQ2lyY2xlUmFkaXVzOyAvLyAxNSUgb2YgaW5uZXJDaXJjbGVSYWRpdXMsIGhhbGYgb2YgcHJldmlvdXMgMzAlIGxlZnRPZmZzZXRcblxuICAvLyBGaXJzdCB0cmlhbmdsZSAoYmlnZ2VyIGJhc2UsIGFkanVzdGVkIHBvc2l0aW9uIHNsaWdodGx5IHRvIHRoZSByaWdodClcbiAgY29uc3QgZmlyc3RUcmlhbmdsZSA9IFtcbiAgICB7IHg6IGN4ICsgaHggLSByaWdodE9mZnNldCwgeTogY3kgLSBoeSArIChvdXRlckNpcmNsZVJhZGl1cyAtIGlubmVyQ2lyY2xlUmFkaXVzKSB9LCAvLyByaWdodCB0b3BcbiAgICB7IHg6IGN4IC0gcmlnaHRPZmZzZXQsIHk6IGN5IH0sIC8vIGxlZnRcbiAgICB7IHg6IGN4ICsgaHggLSByaWdodE9mZnNldCwgeTogY3kgKyBoeSAtIChvdXRlckNpcmNsZVJhZGl1cyAtIGlubmVyQ2lyY2xlUmFkaXVzKSB9LCAvLyByaWdodCBib3R0b21cbiAgXSBhcyBjb25zdDtcblxuICAvLyBTZWNvbmQgdHJpYW5nbGUgKHNhbWUgYXMgdGhlIGZpcnN0LCBidXQgbWlycm9yZWQgYW5kIG1vdmVkIHNsaWdodGx5IHRvIHRoZSByaWdodClcbiAgY29uc3Qgc2Vjb25kVHJpYW5nbGUgPSBbXG4gICAgeyB4OiBjeCAtIHJpZ2h0T2Zmc2V0LCB5OiBjeSAtIGh5ICsgKG91dGVyQ2lyY2xlUmFkaXVzIC0gaW5uZXJDaXJjbGVSYWRpdXMpIH0sIC8vIHJpZ2h0IHRvcFxuICAgIHsgeDogY3ggLSBoeCAtIHJpZ2h0T2Zmc2V0LCB5OiBjeSB9LCAvLyBsZWZ0XG4gICAgeyB4OiBjeCAtIHJpZ2h0T2Zmc2V0LCB5OiBjeSArIGh5IC0gKG91dGVyQ2lyY2xlUmFkaXVzIC0gaW5uZXJDaXJjbGVSYWRpdXMpIH0sIC8vIHJpZ2h0IGJvdHRvbVxuICBdIGFzIGNvbnN0O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHsvKiBGaXJzdCBUcmlhbmdsZSAqL31cbiAgICAgIDxwb2x5Z29uXG4gICAgICAgIHBvaW50cz17YCR7Zmlyc3RUcmlhbmdsZVswXS54fSwke2ZpcnN0VHJpYW5nbGVbMF0ueX0gJHtmaXJzdFRyaWFuZ2xlWzFdLnh9LCR7Zmlyc3RUcmlhbmdsZVsxXS55fSAke2ZpcnN0VHJpYW5nbGVbMl0ueH0sJHtmaXJzdFRyaWFuZ2xlWzJdLnl9YH1cbiAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgZmlsbD17ZmlsbGVkID8gc3Ryb2tlIDogXCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgIC8+XG4gICAgICB7LyogU2Vjb25kIFRyaWFuZ2xlICovfVxuICAgICAgPHBvbHlnb25cbiAgICAgICAgcG9pbnRzPXtgJHtzZWNvbmRUcmlhbmdsZVswXS54fSwke3NlY29uZFRyaWFuZ2xlWzBdLnl9ICR7c2Vjb25kVHJpYW5nbGVbMV0ueH0sJHtzZWNvbmRUcmlhbmdsZVsxXS55fSAke3NlY29uZFRyaWFuZ2xlWzJdLnh9LCR7c2Vjb25kVHJpYW5nbGVbMl0ueX1gfVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgICBzdHJva2VMaW5lam9pbj17XCJyb3VuZFwifVxuICAgICAgICBmaWxsPXtmaWxsZWQgPyBzdHJva2UgOiBcInRyYW5zcGFyZW50XCJ9XG4gICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENvbmRpdGlvbmFsRXZlbnRTeW1ib2xTdmcoe1xuICBzdHJva2UsXG4gIGN4LFxuICBjeSxcbiAgeCxcbiAgeSxcbiAgaW5uZXJDaXJjbGVSYWRpdXMsXG4gIG91dGVyQ2lyY2xlUmFkaXVzLFxuICBmaWxsLFxuICBmaWxsZWQsXG59OiB7XG4gIHN0cm9rZTogc3RyaW5nO1xuICBjeDogbnVtYmVyO1xuICBjeTogbnVtYmVyO1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbiAgaW5uZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgb3V0ZXJDaXJjbGVSYWRpdXM6IG51bWJlcjtcbiAgZmlsbDogc3RyaW5nO1xuICBmaWxsZWQ6IGJvb2xlYW47XG59KSB7XG4gIC8vIFNpemUgb2YgdGhlIHNxdWFyZVxuICBjb25zdCBzcXVhcmVTaXplID0gb3V0ZXJDaXJjbGVSYWRpdXMgKiAxLjE7IC8vIE1ha2UgdGhlIHNxdWFyZSBsYXJnZXIgdGhhbiB0aGUgb3V0ZXIgY2lyY2xlXG4gIGNvbnN0IGxpbmVTcGFjaW5nID0gc3F1YXJlU2l6ZSAvIDU7IC8vIFNwYWNpbmcgYmV0d2VlbiBsaW5lc1xuICBjb25zdCBsaW5lVGhpY2tuZXNzID0gMjsgLy8gVGhpY2tuZXNzIG9mIHRoZSBob3Jpem9udGFsIGxpbmVzXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgey8qIERyYXcgdGhlIHNxdWFyZSBzaGFwZSAqL31cbiAgICAgIDxyZWN0XG4gICAgICAgIHg9e2N4IC0gc3F1YXJlU2l6ZSAvIDJ9XG4gICAgICAgIHk9e2N5IC0gc3F1YXJlU2l6ZSAvIDJ9XG4gICAgICAgIHdpZHRoPXtzcXVhcmVTaXplfVxuICAgICAgICBoZWlnaHQ9e3NxdWFyZVNpemV9XG4gICAgICAgIGZpbGw9e2ZpbGxlZCA/IGZpbGwgOiBcInRyYW5zcGFyZW50XCJ9XG4gICAgICAgIHN0cm9rZT17c3Ryb2tlfVxuICAgICAgICBzdHJva2VXaWR0aD17MS41fVxuICAgICAgLz5cblxuICAgICAgey8qIERyYXcgZm91ciBob3Jpem9udGFsIGxpbmVzIGluc2lkZSB0aGUgc3F1YXJlICovfVxuICAgICAge1suLi5BcnJheSg0KV0ubWFwKChfLCBpbmRleCkgPT4gKFxuICAgICAgICA8bGluZVxuICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgeDE9e2N4IC0gc3F1YXJlU2l6ZSAvIDIgKyA1fSAvLyBMZWZ0IG1hcmdpblxuICAgICAgICAgIHkxPXtjeSAtIHNxdWFyZVNpemUgLyAyICsgbGluZVNwYWNpbmcgKiAoaW5kZXggKyAxKX1cbiAgICAgICAgICB4Mj17Y3ggKyBzcXVhcmVTaXplIC8gMiAtIDV9IC8vIFJpZ2h0IG1hcmdpblxuICAgICAgICAgIHkyPXtjeSAtIHNxdWFyZVNpemUgLyAyICsgbGluZVNwYWNpbmcgKiAoaW5kZXggKyAxKX1cbiAgICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgICAgICBzdHJva2VXaWR0aD17bGluZVRoaWNrbmVzc30gLy8gU2V0IHRoZSB0aGlja25lc3Mgb2YgdGhlIGxpbmVzXG4gICAgICAgIC8+XG4gICAgICApKX1cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENhbmNlbEV2ZW50U3ltYm9sU3ZnKHtcbiAgc3Ryb2tlLFxuICBjeCxcbiAgY3ksXG4gIHgsXG4gIHksXG4gIGlubmVyQ2lyY2xlUmFkaXVzLFxuICBvdXRlckNpcmNsZVJhZGl1cyxcbiAgZmlsbCxcbiAgZmlsbGVkLFxufToge1xuICBzdHJva2U6IHN0cmluZztcbiAgY3g6IG51bWJlcjtcbiAgY3k6IG51bWJlcjtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIGlubmVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIG91dGVyQ2lyY2xlUmFkaXVzOiBudW1iZXI7XG4gIGZpbGw6IHN0cmluZztcbiAgZmlsbGVkOiBib29sZWFuO1xufSkge1xuICBjb25zdCBwYWRkaW5nID0gMS41ICogKG91dGVyQ2lyY2xlUmFkaXVzIC0gaW5uZXJDaXJjbGVSYWRpdXMpO1xuICBjb25zdCBoeCA9IHggKyBpbm5lckNpcmNsZVJhZGl1cyAtIHBhZGRpbmc7XG4gIGNvbnN0IGh5ID0geSArIGlubmVyQ2lyY2xlUmFkaXVzIC0gcGFkZGluZztcbiAgY29uc3QgdHJpYW5nbGUgPSBbXG4gICAgeyB4OiBjeCArIGNvczE0MCAqIGh4LCB5OiBwYWRkaW5nIC8gNCArIGN5ICsgc2luMTQwICogaHkgfSwgLy8gcmlnaHRcbiAgICB7IHg6IGN4IC0gY29zMTUwICogaHgsIHk6IHBhZGRpbmcgLyA0ICsgY3kgKyBzaW4xNTAgKiBoeSB9LCAvLyBsZWZ0XG4gICAgeyB4OiBjeCwgeTogcGFkZGluZyAvIDQgKyBjeSAtIGh5IH0sIC8vIHRvcFxuICBdIGFzIGNvbnN0O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxwb2x5Z29uXG4gICAgICAgIHBvaW50cz17YCR7dHJpYW5nbGVbMF0ueH0sJHt0cmlhbmdsZVswXS55fSAke3RyaWFuZ2xlWzFdLnh9LCR7dHJpYW5nbGVbMV0ueX0gJHt0cmlhbmdsZVsyXS54fSwke3RyaWFuZ2xlWzJdLnl9YH1cbiAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgZmlsbD17ZmlsbGVkID8gc3Ryb2tlIDogXCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIExpbmtFdmVudFN5bWJvbFN2Zyh7XG4gIHN0cm9rZSxcbiAgY3gsXG4gIGN5LFxuICB4LFxuICB5LFxuICBpbm5lckNpcmNsZVJhZGl1cyxcbiAgb3V0ZXJDaXJjbGVSYWRpdXMsXG4gIGZpbGwsXG4gIGZpbGxlZCxcbn06IHtcbiAgc3Ryb2tlOiBzdHJpbmc7XG4gIGN4OiBudW1iZXI7XG4gIGN5OiBudW1iZXI7XG4gIHg6IG51bWJlcjtcbiAgeTogbnVtYmVyO1xuICBpbm5lckNpcmNsZVJhZGl1czogbnVtYmVyO1xuICBvdXRlckNpcmNsZVJhZGl1czogbnVtYmVyO1xuICBmaWxsOiBzdHJpbmc7XG4gIGZpbGxlZDogYm9vbGVhbjtcbn0pIHtcbiAgY29uc3QgYXJyb3dIZWlnaHQgPSBpbm5lckNpcmNsZVJhZGl1cyAqIDEuMjsgLy8gSGVpZ2h0IG9mIHRoZSBhcnJvd1xuICBjb25zdCBhcnJvd0Jhc2VXaWR0aCA9IGlubmVyQ2lyY2xlUmFkaXVzICogMTsgLy8gQmFzZSB3aWR0aCBvZiB0aGUgYXJyb3dcbiAgY29uc3Qgc2hpZnRMZWZ0ID0gOFxuXG4gIC8vIERlZmluZSBwb2ludHMgZm9yIHRoZSB0d28gbG9uZ2VyIGRpYWdvbmFsIGxpbmVzIChmb3JtaW5nIHRoZSB1cHBlciB0cmlhbmdsZSlcbiAgY29uc3QgbG93ZXJMZWZ0UG9pbnQgPSB7IHg6IGN4IC0gYXJyb3dCYXNlV2lkdGggLyAyIC0gc2hpZnRMZWZ0LCB5OiBjeSArIGFycm93SGVpZ2h0IC8gMiAtIDUgfTsgLy8gQm90dG9tIGxlZnRcbiAgY29uc3QgdXBwZXJMZWZ0UG9pbnQgPSB7IHg6IGN4IC0gYXJyb3dCYXNlV2lkdGggLyAyIC0gc2hpZnRMZWZ0LCB5OiBjeSAtIGFycm93SGVpZ2h0IC8gMiArIDUgfTsgLy8gVG9wIHBvaW50XG4gIGNvbnN0IHVwcGVyUmlnaHRQb2ludCA9IHsgeDogY3ggKyBhcnJvd0Jhc2VXaWR0aCAvIDIsIHk6IGN5IC0gYXJyb3dIZWlnaHQgLyAyICsgNSB9OyAvLyBCb3R0b20gcmlnaHRcbiAgY29uc3QgbG93ZXJSaWdodFBvaW50ID0geyB4OiBjeCArIGFycm93QmFzZVdpZHRoIC8gMiwgeTogY3kgKyBhcnJvd0hlaWdodCAvIDIgLSA1IH07IC8vIEJvdHRvbSByaWdodFxuICBjb25zdCB1cHBlclJpZ2h0UG9pbnRBcnJvdyA9IHsgeDogY3ggKyBhcnJvd0Jhc2VXaWR0aCAvIDIsIHk6IGN5IC0gYXJyb3dIZWlnaHQgLyAyIC0gMiB9OyAvLyBCb3R0b20gcmlnaHRcbiAgY29uc3QgbG93ZXJSaWdodFBvaW50QXJyb3cgPSB7IHg6IGN4ICsgYXJyb3dCYXNlV2lkdGggLyAyLCB5OiBjeSArIGFycm93SGVpZ2h0IC8gMiArIDIgfTsgLy8gQm90dG9tIHJpZ2h0XG4gIGNvbnN0IGFycm93SGVhZCA9IHsgeDogY3ggKyBhcnJvd0Jhc2VXaWR0aCAvIDIgKyA4LCB5OiBjeSB9OyAvLyBCb3R0b20gcmlnaHRcblxuXG5cblxuICAvLyBEZWZpbmUgcG9pbnRzIGZvciB0aGUgdHdvIHNob3J0ZXIgZGlhZ29uYWwgbGluZXMgKGZvcm1pbmcgdGhlIG1pZGRsZSBwYXJ0KVxuICBjb25zdCBtaWRQb2ludCA9IHsgeDogY3gsIHk6IGN5ICsgYXJyb3dIZWlnaHQgLyAyMCB9OyAvLyBNaWRkbGUgcG9pbnRcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8cG9seWdvblxuICAgICAgICBwb2ludHM9e2Ake2xvd2VyTGVmdFBvaW50Lnh9LCR7bG93ZXJMZWZ0UG9pbnQueX0gJHt1cHBlckxlZnRQb2ludC54fSwke3VwcGVyTGVmdFBvaW50Lnl9ICR7dXBwZXJSaWdodFBvaW50Lnh9LCR7dXBwZXJSaWdodFBvaW50Lnl9ICR7dXBwZXJSaWdodFBvaW50QXJyb3cueH0sICR7dXBwZXJSaWdodFBvaW50QXJyb3cueX0gJHthcnJvd0hlYWQueH0sICR7YXJyb3dIZWFkLnl9ICR7bG93ZXJSaWdodFBvaW50QXJyb3cueH0sICR7bG93ZXJSaWdodFBvaW50QXJyb3cueX0gJHtsb3dlclJpZ2h0UG9pbnQueH0sICR7bG93ZXJSaWdodFBvaW50Lnl9YH1cbiAgICAgICAgc3Ryb2tlV2lkdGg9ezEuNX1cbiAgICAgICAgc3Ryb2tlTGluZWpvaW49e1wicm91bmRcIn1cbiAgICAgICAgZmlsbD17ZmlsbGVkID8gc3Ryb2tlIDogXCJ0cmFuc3BhcmVudFwifVxuICAgICAgICBzdHJva2U9e3N0cm9rZX1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG5cbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gQWN0aXZpdHlOb2RlSWNvbnMoe1xuICB4LFxuICB5LFxuICB3aWR0aCxcbiAgaGVpZ2h0LFxuICBpY29ucyxcbn06IHtcbiAgeDogbnVtYmVyO1xuICB5OiBudW1iZXI7XG4gIHdpZHRoOiBudW1iZXI7XG4gIGhlaWdodDogbnVtYmVyO1xuICBpY29uczogU2V0PEFjdGl2aXR5Tm9kZU1hcmtlcj47XG59KSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHtpY29ucy5oYXMoQWN0aXZpdHlOb2RlTWFya2VyLkxvb3ApICYmIChcbiAgICAgICAgPHRleHRcbiAgICAgICAgICBmb250U2l6ZT1cIjJlbVwiXG4gICAgICAgICAgdGV4dEFuY2hvcj17XCJtaWRkbGVcIn1cbiAgICAgICAgICBkb21pbmFudEJhc2VsaW5lPXtcImF1dG9cIn1cbiAgICAgICAgICBmb250V2VpZ2h0PXtcImJvbGRcIn1cbiAgICAgICAgICB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHt4ICsgd2lkdGggLyAyfSwgJHt5ICsgaGVpZ2h0IC0gNX0pIHJvdGF0ZSgwKWB9XG4gICAgICAgID5cbiAgICAgICAgICDihrtcbiAgICAgICAgPC90ZXh0PlxuICAgICAgKX1cbiAgICAgIHtpY29ucy5oYXMoQWN0aXZpdHlOb2RlTWFya2VyLkFkSG9jU3ViUHJvY2VzcykgJiYgKFxuICAgICAgICA8dGV4dFxuICAgICAgICAgIGZvbnRTaXplPVwiMmVtXCJcbiAgICAgICAgICB0ZXh0QW5jaG9yPXtcIm1pZGRsZVwifVxuICAgICAgICAgIGRvbWluYW50QmFzZWxpbmU9e1wiYXV0b1wifVxuICAgICAgICAgIGZvbnRXZWlnaHQ9e1wiYm9sZFwifVxuICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke3ggKyB3aWR0aCAvIDJ9LCAke3kgKyBoZWlnaHQgLSA1fSkgcm90YXRlKDApYH1cbiAgICAgICAgPlxuICAgICAgICAgIH5cbiAgICAgICAgPC90ZXh0PlxuICAgICAgKX1cbiAgICAgIHtpY29ucy5oYXMoQWN0aXZpdHlOb2RlTWFya2VyLkNvbXBlbnNhdGlvbikgJiYgKFxuICAgICAgICA8dGV4dFxuICAgICAgICAgIGZvbnRTaXplPVwiMmVtXCJcbiAgICAgICAgICB0ZXh0QW5jaG9yPXtcIm1pZGRsZVwifVxuICAgICAgICAgIGRvbWluYW50QmFzZWxpbmU9e1wiYXV0b1wifVxuICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke3ggKyB3aWR0aCAvIDJ9LCAke3kgKyBoZWlnaHQgLSA1fSkgcm90YXRlKDApYH1cbiAgICAgICAgPlxuICAgICAgICAgIOKPqlxuICAgICAgICA8L3RleHQ+XG4gICAgICApfVxuICAgICAge2ljb25zLmhhcyhBY3Rpdml0eU5vZGVNYXJrZXIuQ29sbGFwc2VkKSAmJiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgPHJlY3RcbiAgICAgICAgICAgIHg9e3ggKyB3aWR0aCAvIDIgLSAxNX1cbiAgICAgICAgICAgIHk9e3kgKyBoZWlnaHQgLSAyMCAtIERFRkFVTFRfTk9ERV9TVFJPS0VfV0lEVEh9XG4gICAgICAgICAgICB3aWR0aD17MzB9XG4gICAgICAgICAgICBoZWlnaHQ9ezIwfVxuICAgICAgICAgICAgZmlsbD17XCJ0cmFuc3BhcmVudFwifVxuICAgICAgICAgICAgc3Ryb2tlPXtERUZBVUxUX05PREVfU1RST0tFX0NPTE9SfVxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9e0RFRkFVTFRfTk9ERV9TVFJPS0VfV0lEVEh9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8dGV4dFxuICAgICAgICAgICAgZm9udFNpemU9XCIyZW1cIlxuICAgICAgICAgICAgdGV4dEFuY2hvcj17XCJtaWRkbGVcIn1cbiAgICAgICAgICAgIGRvbWluYW50QmFzZWxpbmU9e1wiYXV0b1wifVxuICAgICAgICAgICAgZm9udFdlaWdodD17XCJib2xkXCJ9XG4gICAgICAgICAgICB4PXt4ICsgd2lkdGggLyAyfVxuICAgICAgICAgICAgeT17MSArIHkgKyBoZWlnaHR9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgK1xuICAgICAgICAgIDwvdGV4dD5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgICAge2ljb25zLmhhcyhBY3Rpdml0eU5vZGVNYXJrZXIuTXVsdGlJbnN0YW5jZVBhcmFsbGVsKSAmJiAoXG4gICAgICAgIDx0ZXh0XG4gICAgICAgICAgZm9udFNpemU9XCIyZW1cIlxuICAgICAgICAgIHRleHRBbmNob3I9e1wibWlkZGxlXCJ9XG4gICAgICAgICAgZG9taW5hbnRCYXNlbGluZT17XCJhdXRvXCJ9XG4gICAgICAgICAgZm9udFdlaWdodD17XCJib2xkXCJ9XG4gICAgICAgICAgdHJhbnNmb3JtPXtgdHJhbnNsYXRlKCR7eCArIHdpZHRoIC8gMiAtIDd9LCAke3kgKyBoZWlnaHQgLSAxNX0pIHJvdGF0ZSg5MClgfVxuICAgICAgICA+XG4gICAgICAgICAg4piwXG4gICAgICAgIDwvdGV4dD5cbiAgICAgICl9XG4gICAgICB7aWNvbnMuaGFzKEFjdGl2aXR5Tm9kZU1hcmtlci5NdWx0aUluc3RhbmNlU2VxdWVudGlhbCkgJiYgKFxuICAgICAgICA8dGV4dFxuICAgICAgICAgIGZvbnRTaXplPVwiMmVtXCJcbiAgICAgICAgICB0ZXh0QW5jaG9yPXtcIm1pZGRsZVwifVxuICAgICAgICAgIGRvbWluYW50QmFzZWxpbmU9e1wiYXV0b1wifVxuICAgICAgICAgIGZvbnRXZWlnaHQ9e1wiYm9sZFwifVxuICAgICAgICAgIHRyYW5zZm9ybT17YHRyYW5zbGF0ZSgke3ggKyB3aWR0aCAvIDJ9LCAke3kgKyBoZWlnaHQgLSA1fSkgcm90YXRlKDApYH1cbiAgICAgICAgPlxuICAgICAgICAgIOKYsFxuICAgICAgICA8L3RleHQ+XG4gICAgICApfVxuICAgIDwvPlxuICApO1xufVxuIiwiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgcGFyc2VCcG1uMjBEcm9vbHMxME1ldGFEYXRhIH0gZnJvbSBcIkBraWUtdG9vbHMvYnBtbi1tYXJzaGFsbGVyL2Rpc3QvZHJvb2xzLWV4dGVuc2lvbi1tZXRhRGF0YVwiO1xuaW1wb3J0IHtcbiAgQlBNTjIwX190Qm91bmRhcnlFdmVudCxcbiAgQlBNTjIwX190Q29tcGxleEdhdGV3YXksXG4gIEJQTU4yMF9fdERhdGFPYmplY3QsXG4gIEJQTU4yMF9fdEVuZEV2ZW50LFxuICBCUE1OMjBfX3RFdmVudEJhc2VkR2F0ZXdheSxcbiAgQlBNTjIwX190RXhjbHVzaXZlR2F0ZXdheSxcbiAgQlBNTjIwX190R3JvdXAsXG4gIEJQTU4yMF9fdEluY2x1c2l2ZUdhdGV3YXksXG4gIEJQTU4yMF9fdEludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gIEJQTU4yMF9fdEludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gIEJQTU4yMF9fdExhbmUsXG4gIEJQTU4yMF9fdFBhcmFsbGVsR2F0ZXdheSxcbiAgQlBNTjIwX190UHJvY2VzcyxcbiAgQlBNTjIwX190U3RhcnRFdmVudCxcbiAgQlBNTjIwX190U3ViUHJvY2VzcyxcbiAgQlBNTjIwX190VGFzayxcbiAgQlBNTjIwX190VGV4dEFubm90YXRpb24sXG59IGZyb20gXCJAa2llLXRvb2xzL2JwbW4tbWFyc2hhbGxlci9kaXN0L3NjaGVtYXMvYnBtbi0yXzAvdHMtZ2VuL3R5cGVzXCI7XG5pbXBvcnQgeyBnZXRDb250YWlubWVudFJlbGF0aW9uc2hpcCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L21hdGhzL0RjTWF0aHNcIjtcbmltcG9ydCB7IHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvbWVtb2l6YXRpb24vbWVtb2l6YXRpb25cIjtcbmltcG9ydCB7XG4gIEVkaXRhYmxlTm9kZUxhYmVsLFxuICBPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlLFxuICB1c2VFZGl0YWJsZU5vZGVMYWJlbCxcbn0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3Qvbm9kZXMvRWRpdGFibGVOb2RlTGFiZWxcIjtcbmltcG9ydCB7XG4gIE5vZGVSZXNpemVySGFuZGxlLFxuICB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzLFxuICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wLFxuICB1c2VOb2RlQ2xhc3NOYW1lLFxuICB1c2VOb2RlRGltZW5zaW9ucyxcbiAgdXNlTm9kZVJlc2l6aW5nLFxufSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Ib29rc1wiO1xuaW1wb3J0IHsgSW5mb05vZGVQYW5lbCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL0luZm9Ob2RlUGFuZWxcIjtcbmltcG9ydCB7IE91dGdvaW5nU3R1ZmZOb2RlUGFuZWwgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9PdXRnb2luZ1N0dWZmTm9kZVBhbmVsXCI7XG5pbXBvcnQgeyBQb3NpdGlvbmFsTm9kZUhhbmRsZXMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Qb3NpdGlvbmFsTm9kZUhhbmRsZXNcIjtcbmltcG9ydCB7IHVzZUlzSG92ZXJlZCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3JlYWN0RXh0L3VzZUlzSG92ZXJlZFwiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBSRiBmcm9tIFwicmVhY3RmbG93XCI7XG5pbXBvcnQgeyB1cGRhdGVGbG93RWxlbWVudCwgdXBkYXRlTGFuZSwgdXBkYXRlVGV4dEFubm90YXRpb24gfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL3JlbmFtZU5vZGVcIjtcbmltcG9ydCB7IE5vcm1hbGl6ZWQgfSBmcm9tIFwiLi4vLi4vbm9ybWFsaXphdGlvbi9ub3JtYWxpemVcIjtcbmltcG9ydCB7IHVzZUJwbW5FZGl0b3JTdG9yZSwgdXNlQnBtbkVkaXRvclN0b3JlQXBpIH0gZnJvbSBcIi4uLy4uL3N0b3JlL1N0b3JlQ29udGV4dFwiO1xuaW1wb3J0IHtcbiAgQWN0aXZpdHlOb2RlTWFya2VyLFxuICBCUE1OX09VVEdPSU5HX1NUUlVDVFVSRSxcbiAgQnBtbkRpYWdyYW1FZGdlRGF0YSxcbiAgQnBtbkRpYWdyYW1Ob2RlRGF0YSxcbiAgYnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmcsXG4gIGJwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nLFxuICBCcG1uTm9kZVR5cGUsXG4gIEVER0VfVFlQRVMsXG4gIE1JTl9OT0RFX1NJWkVTLFxuICBOT0RFX1RZUEVTLFxufSBmcm9tIFwiLi4vQnBtbkRpYWdyYW1Eb21haW5cIjtcbmltcG9ydCB7IGdldE5vZGVMYWJlbFBvc2l0aW9uLCB1c2VOb2RlU3R5bGUgfSBmcm9tIFwiLi9Ob2RlU3R5bGVcIjtcbmltcG9ydCB7XG4gIERhdGFPYmplY3ROb2RlU3ZnLFxuICBFbmRFdmVudE5vZGVTdmcsXG4gIEdhdGV3YXlOb2RlU3ZnLFxuICBHcm91cE5vZGVTdmcsXG4gIEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnLFxuICBJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZVN2ZyxcbiAgTGFuZU5vZGVTdmcsXG4gIE5PREVfQ09MT1JTLFxuICBTdGFydEV2ZW50Tm9kZVN2ZyxcbiAgU3ViUHJvY2Vzc05vZGVTdmcsXG4gIFRhc2tOb2RlU3ZnLFxuICBUZXh0QW5ub3RhdGlvbk5vZGVTdmcsXG4gIFVua25vd25Ob2RlU3ZnLFxufSBmcm9tIFwiLi9Ob2RlU3Znc1wiO1xuaW1wb3J0IHsgTm9kZU1vcnBoaW5nUGFuZWwgfSBmcm9tIFwiLi9tb3JwaGluZy9Ob2RlTW9ycGhpbmdQYW5lbFwiO1xuaW1wb3J0IHsgdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zXCI7XG5pbXBvcnQgeyBVbnBhY2tlZCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3RzRXh0L3RzRXh0XCI7XG5pbXBvcnQgeyB1c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucyB9IGZyb20gXCIuL21vcnBoaW5nL3VzZUdhdGV3YXlOb2RlTW9ycGhpbmdBY3Rpb25zXCI7XG5pbXBvcnQgeyBFbGVtZW50RmlsdGVyIH0gZnJvbSBcIkBraWUtdG9vbHMveG1sLXBhcnNlci10cy9kaXN0L2VsZW1lbnRGaWx0ZXJcIjtcbmltcG9ydCB7IHVzZVRhc2tOb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlVGFza05vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IHVzZVN1YlByb2Nlc3NOb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlU3ViUHJvY2Vzc05vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnNcIjtcblxuZXhwb3J0IGNvbnN0IFN0YXJ0RXZlbnROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBzdGFydEV2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCwgcGFyZW50WHlGbG93Tm9kZSB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdFN0YXJ0RXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJzdGFydEV2ZW50XCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCBbaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMoc3RhcnRFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+XG4gICAgICAgIHBhcmVudFh5Rmxvd05vZGU/LnR5cGUgPT09IE5PREVfVFlQRVMuc3ViUHJvY2Vzc1xuICAgICAgICAgID8gbmV3IFNldChbXCJub25lXCIsIFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIsIFwibGlua0V2ZW50RGVmaW5pdGlvblwiLCBcInRlcm1pbmF0ZUV2ZW50RGVmaW5pdGlvblwiXSlcbiAgICAgICAgICA6IG5ldyBTZXQoW1xuICAgICAgICAgICAgICBcImVycm9yRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiZXNjYWxhdGlvbkV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNhbmNlbEV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNvbXBlbnNhdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJsaW5rRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICBdKSxcbiAgICAgIFtwYXJlbnRYeUZsb3dOb2RlPy50eXBlXVxuICAgICk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8U3RhcnRFdmVudE5vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgdmFyaWFudD17c3RhcnRFdmVudC5ldmVudERlZmluaXRpb24/LlswXT8uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tdGFzay1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLXRhc2stbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtzdGFydEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5zdGFydEV2ZW50XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnN0YXJ0RXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN0YXJ0RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN0YXJ0RXZlbnQuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17c3RhcnRFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhzdGFydEV2ZW50W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17c3RhcnRFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e3N0YXJ0RXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBJbnRlcm1lZGlhdGVDYXRjaEV2ZW50Tm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICB8IChOb3JtYWxpemVkPEJQTU4yMF9fdEludGVybWVkaWF0ZUNhdGNoRXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJpbnRlcm1lZGlhdGVDYXRjaEV2ZW50XCIgfSlcbiAgICAgIHwgKE5vcm1hbGl6ZWQ8QlBNTjIwX190Qm91bmRhcnlFdmVudD4gJiB7IF9fJCRlbGVtZW50OiBcImJvdW5kYXJ5RXZlbnRcIiB9KVxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zKGludGVybWVkaWF0ZUNhdGNoRXZlbnQpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oXG4gICAgICAoKSA9PlxuICAgICAgICBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50Ll9fJCRlbGVtZW50ID09PSBcImludGVybWVkaWF0ZUNhdGNoRXZlbnRcIlxuICAgICAgICAgID8gbmV3IFNldChbXG4gICAgICAgICAgICAgIFwibm9uZVwiLFxuICAgICAgICAgICAgICBcImVycm9yRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiZXNjYWxhdGlvbkV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNvbXBlbnNhdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJjYW5jZWxFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJ0ZXJtaW5hdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgIF0pXG4gICAgICAgICAgOiBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50Ll9fJCRlbGVtZW50ID09PSBcImJvdW5kYXJ5RXZlbnRcIlxuICAgICAgICAgICAgPyBuZXcgU2V0KFtcIm5vbmVcIiwgXCJsaW5rRXZlbnREZWZpbml0aW9uXCIsIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCJdKVxuICAgICAgICAgICAgOiBuZXcgU2V0KCksXG4gICAgICBbaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5fXyQkZWxlbWVudF1cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHZhcmlhbnQ9e2ludGVybWVkaWF0ZUNhdGNoRXZlbnQuZXZlbnREZWZpbml0aW9uPy5bMF0uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0taW50ZXJtZWRpYXRlLWNhdGNoLWV2ZW50LW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtaW50ZXJtZWRpYXRlLWNhdGNoLWV2ZW50LW5vZGVgfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17aWR9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdLl9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGludGVybWVkaWF0ZUNhdGNoRXZlbnRbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmICFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17aW50ZXJtZWRpYXRlQ2F0Y2hFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBpbnRlcm1lZGlhdGVUaHJvd0V2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdEludGVybWVkaWF0ZVRocm93RXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJpbnRlcm1lZGlhdGVUaHJvd0V2ZW50XCIgfT5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zKGludGVybWVkaWF0ZVRocm93RXZlbnQpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oXG4gICAgICAoKSA9PlxuICAgICAgICBuZXcgU2V0KFtcbiAgICAgICAgICBcInRpbWVyRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJlcnJvckV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgIFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJjb25kaXRpb25hbEV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgIF0pLFxuICAgICAgW11cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHZhcmlhbnQ9e2ludGVybWVkaWF0ZVRocm93RXZlbnQuZXZlbnREZWZpbml0aW9uPy5bMF0/Ll9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWludGVybWVkaWF0ZS10aHJvdy1ldmVudC1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLWludGVybWVkaWF0ZS10aHJvdy1ldmVudC1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2lkfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50XS5ub2Rlc31cbiAgICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLmludGVybWVkaWF0ZVRocm93RXZlbnQuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17aW50ZXJtZWRpYXRlVGhyb3dFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhpbnRlcm1lZGlhdGVUaHJvd0V2ZW50W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17aW50ZXJtZWRpYXRlVGhyb3dFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2ludGVybWVkaWF0ZVRocm93RXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBFbmRFdmVudE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGVuZEV2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdEVuZEV2ZW50PiAmIHsgX18kJGVsZW1lbnQ6IFwiZW5kRXZlbnRcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IFtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZUV2ZW50Tm9kZU1vcnBoaW5nQWN0aW9ucyhlbmRFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+IG5ldyBTZXQoW1widGltZXJFdmVudERlZmluaXRpb25cIiwgXCJjb25kaXRpb25hbEV2ZW50RGVmaW5pdGlvblwiLCBcImxpbmtFdmVudERlZmluaXRpb25cIl0pLFxuICAgICAgW11cbiAgICApO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPEVuZEV2ZW50Tm9kZVN2Z1xuICAgICAgICAgICAgey4uLm5vZGVEaW1lbnNpb25zfVxuICAgICAgICAgICAgeD17MH1cbiAgICAgICAgICAgIHk9ezB9XG4gICAgICAgICAgICB2YXJpYW50PXtlbmRFdmVudC5ldmVudERlZmluaXRpb24/LlswXT8uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgICBzdHJva2VXaWR0aD17Nn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1lbmQtZXZlbnQtbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1lbmQtZXZlbnQtbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtpZH1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZW5kRXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZW5kRXZlbnRdLmVkZ2VzfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE5vZGVNb3JwaGluZ1BhbmVsXG4gICAgICAgICAgICAgIGRpc2FibGVkQWN0aW9uSWRzPXtkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzfVxuICAgICAgICAgICAgICBpc1RvZ2dsZVZpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLmVuZEV2ZW50LmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy5lbmRFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtlbmRFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhlbmRFdmVudFtcIkBfbmFtZVwiXSB8fCBpc0VkaXRpbmdMYWJlbCkgJiYgIWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmIChcbiAgICAgICAgICAgIDxOb2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5hbWU9e2VuZEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17ZW5kRXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBUYXNrTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogdGFzaywgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICBOb3JtYWxpemVkPFxuICAgICAgICBFbGVtZW50RmlsdGVyPFxuICAgICAgICAgIFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJmbG93RWxlbWVudFwiXT4+LFxuICAgICAgICAgIFwidGFza1wiIHwgXCJzY3JpcHRUYXNrXCIgfCBcInNlcnZpY2VUYXNrXCIgfCBcImJ1c2luZXNzUnVsZVRhc2tcIiB8IFwidXNlclRhc2tcIiB8IFwiY2FsbEFjdGl2aXR5XCJcbiAgICAgICAgPlxuICAgICAgPlxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMgPSB1c2VCcG1uRWRpdG9yU3RvcmUoKHMpID0+IHMuZGlhZ3JhbS5vdmVybGF5cy5lbmFibGVDdXN0b21Ob2RlU3R5bGVzKTtcbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IHsgZm9udENzc1Byb3BlcnRpZXMgfSA9IHVzZU5vZGVTdHlsZSh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsXG4gICAgICBpc0VuYWJsZWQ6IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMsXG4gICAgfSk7XG5cbiAgICBjb25zdCBpY29ucyA9IHVzZUFjdGl2aXR5SWNvbnModGFzayk7XG5cbiAgICBjb25zdCBbaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VUYXNrTm9kZU1vcnBoaW5nQWN0aW9ucyh0YXNrKTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KCgpID0+IG5ldyBTZXQoKSwgW10pO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPFRhc2tOb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXt0YXNrLl9fJCRlbGVtZW50ID09PSBcImNhbGxBY3Rpdml0eVwiID8gNSA6IHVuZGVmaW5lZH1cbiAgICAgICAgICAgIG1hcmtlcnM9e2ljb25zfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLXRhc2stbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC10YXNrLW5vZGVgfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17dGFza1tcIkBfbmFtZVwiXX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgIG5hbWU9e3Rhc2tbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICB2YWx1ZT17dGFza1tcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IC4uLmZvbnRDc3NQcm9wZXJ0aWVzLCB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIHtzaG91bGRBY3RMaWtlSG92ZXJlZCAmJiAoXG4gICAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnRhc2t9XG4gICAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnRhc2tdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMudGFza10uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMudGFzay5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMudGFzay5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXt0YXNrLl9fJCRlbGVtZW50fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IFN1YlByb2Nlc3NOb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBzdWJQcm9jZXNzLCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxcbiAgICAgIE5vcm1hbGl6ZWQ8QlBNTjIwX190U3ViUHJvY2Vzcz4gJiB7IF9fJCRlbGVtZW50OiBcInRyYW5zYWN0aW9uXCIgfCBcImFkSG9jU3ViUHJvY2Vzc1wiIHwgXCJzdWJQcm9jZXNzXCIgfVxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPFNWR1JlY3RFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMgPSB1c2VCcG1uRWRpdG9yU3RvcmUoKHMpID0+IHMuZGlhZ3JhbS5vdmVybGF5cy5lbmFibGVDdXN0b21Ob2RlU3R5bGVzKTtcbiAgICBjb25zdCBpc09ubHlTZWxlY3RlZE5vZGUgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uX3NlbGVjdGVkTm9kZXMubGVuZ3RoID09PSAxICYmIHNlbGVjdGVkXG4gICAgKTtcbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IHsgZm9udENzc1Byb3BlcnRpZXMgfSA9IHVzZU5vZGVTdHlsZSh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsXG4gICAgICBpc0VuYWJsZWQ6IGVuYWJsZUN1c3RvbU5vZGVTdHlsZXMsXG4gICAgfSk7XG5cbiAgICBjb25zdCBpY29ucyA9IHVzZUFjdGl2aXR5SWNvbnMoc3ViUHJvY2Vzcyk7XG5cbiAgICBjb25zdCBbaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VTdWJQcm9jZXNzTm9kZU1vcnBoaW5nQWN0aW9ucyhzdWJQcm9jZXNzKTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KCgpID0+IG5ldyBTZXQoKSwgW10pO1xuICAgIHVzZUtleWJvYXJkU2hvcnRjdXRzRm9yTW9ycGhpbmdBY3Rpb25zKHJlZiwgbW9ycGhpbmdBY3Rpb25zLCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPFN1YlByb2Nlc3NOb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgaWNvbnM9e2ljb25zfVxuICAgICAgICAgICAgdmFyaWFudD17XG4gICAgICAgICAgICAgIHN1YlByb2Nlc3MuX18kJGVsZW1lbnQgPT09IFwidHJhbnNhY3Rpb25cIlxuICAgICAgICAgICAgICAgID8gXCJ0cmFuc2FjdGlvblwiXG4gICAgICAgICAgICAgICAgOiBzdWJQcm9jZXNzW1wiQF90cmlnZ2VyZWRCeUV2ZW50XCJdXG4gICAgICAgICAgICAgICAgICA/IFwiZXZlbnRcIlxuICAgICAgICAgICAgICAgICAgOiBzdWJQcm9jZXNzLmxvb3BDaGFyYWN0ZXJpc3RpY3M/Ll9fJCRlbGVtZW50ID09PSBcIm11bHRpSW5zdGFuY2VMb29wQ2hhcmFjdGVyaXN0aWNzXCJcbiAgICAgICAgICAgICAgICAgICAgPyBcIm11bHRpLWluc3RhbmNlXCJcbiAgICAgICAgICAgICAgICAgICAgOiBcIm90aGVyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1zdWItcHJvY2Vzcy1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLXN1Yi1wcm9jZXNzLW5vZGVgfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17c3ViUHJvY2Vzc1tcIkBfbmFtZVwiXX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIGlzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmd9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgbmFtZT17c3ViUHJvY2Vzc1tcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgIHZhbHVlPXtzdWJQcm9jZXNzW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgLi4uZm9udENzc1Byb3BlcnRpZXMsIHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAge2lzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmcgJiYgKFxuICAgICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy5zdWJQcm9jZXNzfVxuICAgICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgaXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnN1YlByb2Nlc3NdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuc3ViUHJvY2Vzc10uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgaXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgICAgaXNFeHBhbmRlZD17aXNNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIHNldEV4cGFuZGVkPXtzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIGFjdGlvbnM9e21vcnBoaW5nQWN0aW9uc31cbiAgICAgICAgICAgICAgcHJpbWFyeUNvbG9yPXtOT0RFX0NPTE9SUy5zdWJQcm9jZXNzLmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy5zdWJQcm9jZXNzLmJhY2tncm91bmR9XG4gICAgICAgICAgICAgIHNlbGVjdGVkQWN0aW9uSWQ9e1xuICAgICAgICAgICAgICAgIHN1YlByb2Nlc3NbXCJAX3RyaWdnZXJlZEJ5RXZlbnRcIl0gPT09IHRydWVcbiAgICAgICAgICAgICAgICAgID8gXCJldmVudFN1YlByb2Nlc3NcIlxuICAgICAgICAgICAgICAgICAgOiBzdWJQcm9jZXNzLmxvb3BDaGFyYWN0ZXJpc3RpY3M/Ll9fJCRlbGVtZW50ID09PSBcIm11bHRpSW5zdGFuY2VMb29wQ2hhcmFjdGVyaXN0aWNzXCJcbiAgICAgICAgICAgICAgICAgICAgPyBcIm11bHRpSW5zdGFuY2VTdWJQcm9jZXNzXCJcbiAgICAgICAgICAgICAgICAgICAgOiBzdWJQcm9jZXNzLl9fJCRlbGVtZW50XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBHYXRld2F5Tm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogZ2F0ZXdheSwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPFxuICAgIEJwbW5EaWFncmFtTm9kZURhdGE8XG4gICAgICBOb3JtYWxpemVkPFxuICAgICAgICBFbGVtZW50RmlsdGVyPFxuICAgICAgICAgIFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJmbG93RWxlbWVudFwiXT4+LFxuICAgICAgICAgIFwiZXhjbHVzaXZlR2F0ZXdheVwiIHwgXCJpbmNsdXNpdmVHYXRld2F5XCIgfCBcInBhcmFsbGVsR2F0ZXdheVwiIHwgXCJldmVudEJhc2VkR2F0ZXdheVwiIHwgXCJjb21wbGV4R2F0ZXdheVwiXG4gICAgICAgID5cbiAgICAgID5cbiAgICA+XG4gID4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IFtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZUdhdGV3YXlOb2RlTW9ycGhpbmdBY3Rpb25zKGdhdGV3YXkpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oKCkgPT4gbmV3IFNldCgpLCBbXSk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8R2F0ZXdheU5vZGVTdmcgey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSB2YXJpYW50PXtnYXRld2F5Ll9fJCRlbGVtZW50fSAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1nYXRld2F5LW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtZ2F0ZXdheS1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2dhdGV3YXlbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmdhdGV3YXldLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZ2F0ZXdheV0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuZ2F0ZXdheS5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuZ2F0ZXdheS5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtnYXRld2F5Ll9fJCRlbGVtZW50fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGdhdGV3YXlbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmICFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtnYXRld2F5W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17Z2F0ZXdheVtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IERhdGFPYmplY3ROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBkYXRhT2JqZWN0LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdERhdGFPYmplY3Q+ICYgeyBfXyQkZWxlbWVudDogXCJkYXRhT2JqZWN0XCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICAvLyBUaGlzIGlzIHVzZWQgdG8gbW9kaWZ5IGEgY3NzIGZyb20gYSA6YmVmb3JlIGVsZW1lbnQuXG4gICAgLy8gVGhlIC0taGVpZ2h0IGlzIGEgY3NzIHZhciB3aGljaCBpcyB1c2VkIGJ5IHdoZW4gdGhpcyBub2RlIGlzIHNlbGVjdGVkIGNsYXNzXG4gICAgY29uc3QgW25vZGVIZWlnaHQsIHNldE5vZGVIZWlnaHRdID0gUmVhY3QudXNlU3RhdGU8bnVtYmVyPigwKTtcbiAgICBjb25zdCBzdHlsZSA9IHVzZU1lbW88UmVhY3QuQ1NTUHJvcGVydGllcz4oXG4gICAgICAoKSA9PiAoe1xuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICAgICAgb3V0bGluZTogXCJub25lXCIsXG4gICAgICAgIFwiLS1zZWxlY3RlZC1kYXRhLW9iamVjdC1ub2RlLXNoYXBlLS1oZWlnaHRcIjogYCR7bm9kZURpbWVuc2lvbnMuaGVpZ2h0ICsgMjAgKyAyNiArIChpc0VkaXRpbmdMYWJlbCA/IDIwIDogbm9kZUhlaWdodCA/PyAwKX1weGAsXG4gICAgICB9KSxcbiAgICAgIFtub2RlRGltZW5zaW9ucywgaXNFZGl0aW5nTGFiZWwsIG5vZGVIZWlnaHRdXG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPERhdGFPYmplY3ROb2RlU3ZnIHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gc2hvd0Fycm93PXtmYWxzZX0gc2hvd0ZvbGRlZFBhZ2U9e3RydWV9IC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1kYXRhLW9iamVjdC1ub2RlLWNvbnRlbnQgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtkYXRhT2JqZWN0W1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICB7c2hvdWxkQWN0TGlrZUhvdmVyZWQgJiYgKFxuICAgICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy5kYXRhT2JqZWN0fVxuICAgICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmRhdGFPYmplY3RdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZGF0YU9iamVjdF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHsvKiBDcmVhdGVzIGEgZGl2IGVsZW1lbnQgd2l0aCB0aGUgbm9kZSBzaXplIHRvIHB1c2ggZG93biB0aGUgPEVkaXRhYmxlTm9kZUxhYmVsIC8+ICovfVxuICAgICAgICAgIHs8ZGl2IHN0eWxlPXt7IGhlaWdodDogbm9kZURpbWVuc2lvbnMuaGVpZ2h0LCBmbGV4U2hyaW5rOiAwIH19IC8+fVxuICAgICAgICAgIHsoZGF0YU9iamVjdFtcIkBfbmFtZVwiXSB8fCBpc0VkaXRpbmdMYWJlbCkgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17ZGF0YU9iamVjdFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgICAgdmFsdWU9e2RhdGFPYmplY3RbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAgICAgc2V0TGFiZWxIZWlnaHQ9e3NldE5vZGVIZWlnaHR9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L05vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBHcm91cE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGdyb3VwLCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdEdyb3VwPiAmIHsgX18kJGVsZW1lbnQ6IFwiZ3JvdXBcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxTVkdSZWN0RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcbiAgICBjb25zdCByZWFjdEZsb3cgPSBSRi51c2VSZWFjdEZsb3c8QnBtbkRpYWdyYW1Ob2RlRGF0YSwgQnBtbkRpYWdyYW1FZGdlRGF0YT4oKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUywgdHJ1ZSk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgLy8gU2VsZWN0IG5vZGVzIHRoYXQgYXJlIHZpc3VhbGx5IGVudGlyZWx5IGluc2lkZSB0aGUgZ3JvdXAuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGNvbnN0IG9uRG91YmxlQ2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICBzdGF0ZS54eUZsb3dSZWFjdEtpZURpYWdyYW0uX3NlbGVjdGVkTm9kZXMgPSByZWFjdEZsb3cuZ2V0Tm9kZXMoKS5mbGF0TWFwKChuKSA9PlxuICAgICAgICAgICAgZ2V0Q29udGFpbm1lbnRSZWxhdGlvbnNoaXAoe1xuICAgICAgICAgICAgICBib3VuZHM6IG4uZGF0YS5zaGFwZVtcImRjOkJvdW5kc1wiXSEsXG4gICAgICAgICAgICAgIGNvbnRhaW5lcjogc2hhcGVbXCJkYzpCb3VuZHNcIl0hLFxuICAgICAgICAgICAgICBzbmFwR3JpZDogc3RhdGUueHlGbG93UmVhY3RLaWVEaWFncmFtLnNuYXBHcmlkLFxuICAgICAgICAgICAgICBjb250YWluZXJNaW5TaXplczogTUlOX05PREVfU0laRVNbTk9ERV9UWVBFUy5ncm91cF0sXG4gICAgICAgICAgICAgIGJvdW5kc01pblNpemVzOiBNSU5fTk9ERV9TSVpFU1tuLnR5cGUgYXMgQnBtbk5vZGVUeXBlXSxcbiAgICAgICAgICAgICAgYm9yZGVyQWxsb3dhbmNlSW5QeDogMCwgLy8gV2Ugb25seSBjYXJlIGFib3V0IG5vZGVzIHRoYXQgYXJlIGNvbXBsZXRlbHlJbnNpZGUgdGhlIEdyb3VwIG5vZGUuXG4gICAgICAgICAgICB9KS5pc0NvbXBsZXRlbHlJbnNpZGVcbiAgICAgICAgICAgICAgPyBbbi5pZF1cbiAgICAgICAgICAgICAgOiBbXVxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgY29uc3QgciA9IHJlZi5jdXJyZW50O1xuICAgICAgcj8uYWRkRXZlbnRMaXN0ZW5lcihcImRibGNsaWNrXCIsIG9uRG91YmxlQ2xpY2spO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgcj8ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImRibGNsaWNrXCIsIG9uRG91YmxlQ2xpY2spO1xuICAgICAgfTtcbiAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpLCByZWFjdEZsb3csIHNoYXBlXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9YH0+XG4gICAgICAgICAgPEdyb3VwTm9kZVN2ZyByZWY9e3JlZn0gey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSBzdHJva2VXaWR0aD17M30gLz5cbiAgICAgICAgPC9zdmc+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZSBraWUtYnBtbi1lZGl0b3ItLWdyb3VwLW5vZGUgJHtjbGFzc05hbWV9YH1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2lkfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG5cbiAgICAgICAgICB7c2VsZWN0ZWQgJiYgIWRyYWdnaW5nICYmIChcbiAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy5ncm91cH1cbiAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNlbGVjdGVkICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5ncm91cF0ubm9kZXN9XG4gICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZ3JvdXBdLmVkZ2VzfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBMYW5lTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogbGFuZSwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPEJwbW5EaWFncmFtTm9kZURhdGE8Tm9ybWFsaXplZDxCUE1OMjBfX3RMYW5lPiAmIHsgX18kJGVsZW1lbnQ6IFwibGFuZVwiIH0+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPFNWR1JlY3RFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzT25seVNlbGVjdGVkTm9kZSA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5fc2VsZWN0ZWROb2Rlcy5sZW5ndGggPT09IDEgJiYgc2VsZWN0ZWRcbiAgICApO1xuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUxhbmUoeyBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucywgbmV3TGFuZTogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LCBpZCB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH0+XG4gICAgICAgICAgPExhbmVOb2RlU3ZnIHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gcmVmPXtyZWZ9IC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWxhbmUtbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1sYW5lLW5vZGVgfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17bGFuZVtcIkBfbmFtZVwiXX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgaXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICBuYW1lPXtsYW5lW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgdmFsdWU9e2xhbmVbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIHtpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nICYmIChcbiAgICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMubGFuZX1cbiAgICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgaXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmxhbmVdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMubGFuZV0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgVGV4dEFubm90YXRpb25Ob2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiB0ZXh0QW5ub3RhdGlvbiwgc2hhcGUsIHNoYXBlSW5kZXggfSxcbiAgICBzZWxlY3RlZCxcbiAgICBkcmFnZ2luZyxcbiAgICB6SW5kZXgsXG4gICAgdHlwZSxcbiAgICBpZCxcbiAgfTogUkYuTm9kZVByb3BzPEJwbW5EaWFncmFtTm9kZURhdGE8Tm9ybWFsaXplZDxCUE1OMjBfX3RUZXh0QW5ub3RhdGlvbj4gJiB7IF9fJCRlbGVtZW50OiBcInRleHRBbm5vdGF0aW9uXCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5kaWFncmFtLm92ZXJsYXlzLmVuYWJsZUN1c3RvbU5vZGVTdHlsZXMpO1xuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoe1xuICAgICAgbm9kZVR5cGU6IHR5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gICAgICBzaGFwZSxcbiAgICAgIE1JTl9OT0RFX1NJWkVTLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgc2V0VGV4dCA9IHVzZUNhbGxiYWNrKFxuICAgICAgKG5ld1RleHQ6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlVGV4dEFubm90YXRpb24oe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIG5ld1RleHRBbm5vdGF0aW9uOiB7IHRleHQ6IHsgX18kJHRleHQ6IG5ld1RleHQgfSB9LFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgeyBmb250Q3NzUHJvcGVydGllcyB9ID0gdXNlTm9kZVN0eWxlKHtcbiAgICAgIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSxcbiAgICAgIGlzRW5hYmxlZDogZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyxcbiAgICB9KTtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgIHJldHVybiBTdHJpbmcodGV4dEFubm90YXRpb24udGV4dD8uX18kJHRleHQpIHx8IHBhcnNlQnBtbjIwRHJvb2xzMTBNZXRhRGF0YSh0ZXh0QW5ub3RhdGlvbikuZ2V0KFwiZWxlbWVudG5hbWVcIik7XG4gICAgfSwgW3RleHRBbm5vdGF0aW9uXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9YH0+XG4gICAgICAgICAgPFRleHRBbm5vdGF0aW9uTm9kZVN2ZyB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IC8+XG4gICAgICAgIDwvc3ZnPlxuXG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlIGtpZS1icG1uLWVkaXRvci0tdGV4dC1hbm5vdGF0aW9uLW5vZGUgJHtjbGFzc05hbWV9YH1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e1N0cmluZyh0ZXh0QW5ub3RhdGlvbi50ZXh0KX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgIC8+XG5cbiAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgIG5hbWU9e2NvbnRlbnR9XG4gICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgdmFsdWU9e2NvbnRlbnR9XG4gICAgICAgICAgICBvbkNoYW5nZT17c2V0VGV4dH1cbiAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IC4uLmZvbnRDc3NQcm9wZXJ0aWVzLCB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAvPlxuXG4gICAgICAgICAge3Nob3VsZEFjdExpa2VIb3ZlcmVkICYmIChcbiAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbn1cbiAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXS5ub2Rlc31cbiAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0uZWRnZXN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IFVua25vd25Ob2RlID0gUmVhY3QubWVtbyhcbiAgKHsgZGF0YTogeyBzaGFwZSwgc2hhcGVJbmRleCB9LCBzZWxlY3RlZCwgZHJhZ2dpbmcsIHpJbmRleCwgdHlwZSwgaWQgfTogUkYuTm9kZVByb3BzPEJwbW5EaWFncmFtTm9kZURhdGE8YW55Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHtcbiAgICAgIG5vZGVUeXBlOiB0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnVua25vd24sXG4gICAgICBzaGFwZSxcbiAgICAgIE1JTl9OT0RFX1NJWkVTLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfWB9PlxuICAgICAgICAgIDxVbmtub3duTm9kZVN2ZyB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IC8+XG4gICAgICAgIDwvc3ZnPlxuXG4gICAgICAgIDxSRi5IYW5kbGUga2V5PXtcInVua25vd25cIn0gaWQ9e1widW5rbm93blwifSB0eXBlPXtcInNvdXJjZVwifSBzdHlsZT17eyBvcGFjaXR5OiAwIH19IHBvc2l0aW9uPXtSRi5Qb3NpdGlvbi5Ub3B9IC8+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZSBraWUtYnBtbi1lZGl0b3ItLXVua25vd24tbm9kZSAke2NsYXNzTmFtZX1gfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgIC8+XG5cbiAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgIG5hbWU9e3VuZGVmaW5lZH1cbiAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnVua25vd24gfSl9XG4gICAgICAgICAgICBpc0VkaXRpbmc9e2ZhbHNlfVxuICAgICAgICAgICAgc2V0RWRpdGluZz17KCkgPT4ge319XG4gICAgICAgICAgICB2YWx1ZT17YD8gYH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiB7fX1cbiAgICAgICAgICAgIHNraXBWYWxpZGF0aW9uPXtmYWxzZX1cbiAgICAgICAgICAgIHZhbGlkYXRlPXt1c2VDYWxsYmFjaygodmFsdWUpID0+IHRydWUsIFtdKX1cbiAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQWN0aXZpdHlJY29ucyhcbiAgYWN0aXZpdHk6XG4gICAgfCAoTm9ybWFsaXplZDxCUE1OMjBfX3RTdWJQcm9jZXNzPiAmIHsgX18kJGVsZW1lbnQ6IFwidHJhbnNhY3Rpb25cIiB8IFwiYWRIb2NTdWJQcm9jZXNzXCIgfCBcInN1YlByb2Nlc3NcIiB9KVxuICAgIHwgKE5vcm1hbGl6ZWQ8QlBNTjIwX190VGFzaz4gJiB7XG4gICAgICAgIF9fJCRlbGVtZW50OiBcInRhc2tcIiB8IFwic2VydmljZVRhc2tcIiB8IFwidXNlclRhc2tcIiB8IFwiYnVzaW5lc3NSdWxlVGFza1wiIHwgXCJzY3JpcHRUYXNrXCIgfCBcImNhbGxBY3Rpdml0eVwiO1xuICAgICAgfSlcbikge1xuICByZXR1cm4gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgaWNvbnM6IEFjdGl2aXR5Tm9kZU1hcmtlcltdID0gW107XG4gICAgaWYgKGFjdGl2aXR5Ll9fJCRlbGVtZW50ID09PSBcImFkSG9jU3ViUHJvY2Vzc1wiKSB7XG4gICAgICBpY29ucy5wdXNoKEFjdGl2aXR5Tm9kZU1hcmtlci5BZEhvY1N1YlByb2Nlc3MpO1xuICAgIH1cblxuICAgIGlmIChhY3Rpdml0eVtcIkBfaXNGb3JDb21wZW5zYXRpb25cIl0pIHtcbiAgICAgIGljb25zLnB1c2goQWN0aXZpdHlOb2RlTWFya2VyLkNvbXBlbnNhdGlvbik7XG4gICAgfVxuXG4gICAgaWYgKGFjdGl2aXR5Lmxvb3BDaGFyYWN0ZXJpc3RpY3M/Ll9fJCRlbGVtZW50ID09PSBcIm11bHRpSW5zdGFuY2VMb29wQ2hhcmFjdGVyaXN0aWNzXCIpIHtcbiAgICAgIGljb25zLnB1c2goXG4gICAgICAgIGFjdGl2aXR5Lmxvb3BDaGFyYWN0ZXJpc3RpY3NbXCJAX2lzU2VxdWVudGlhbFwiXVxuICAgICAgICAgID8gQWN0aXZpdHlOb2RlTWFya2VyLk11bHRpSW5zdGFuY2VTZXF1ZW50aWFsXG4gICAgICAgICAgOiBBY3Rpdml0eU5vZGVNYXJrZXIuTXVsdGlJbnN0YW5jZVBhcmFsbGVsXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChhY3Rpdml0eS5sb29wQ2hhcmFjdGVyaXN0aWNzPy5fXyQkZWxlbWVudCA9PT0gXCJzdGFuZGFyZExvb3BDaGFyYWN0ZXJpc3RpY3NcIikge1xuICAgICAgaWNvbnMucHVzaChBY3Rpdml0eU5vZGVNYXJrZXIuTG9vcCk7XG4gICAgfVxuXG4gICAgaWYgKGFjdGl2aXR5Ll9fJCRlbGVtZW50ID09PSBcImNhbGxBY3Rpdml0eVwiKSB7XG4gICAgICBpY29ucy5wdXNoKEFjdGl2aXR5Tm9kZU1hcmtlci5Db2xsYXBzZWQpO1xuICAgIH1cblxuICAgIHJldHVybiBpY29ucztcbiAgfSwgW2FjdGl2aXR5XSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBOb2RlTGFiZWxBdFRoZUJvdHRvbSh7IGNoaWxkcmVuIH06IFJlYWN0LlByb3BzV2l0aENoaWxkcmVuPHt9Pikge1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIGZvbnRTaXplOiBcIjAuOGVtXCIsXG4gICAgICAgIG1hcmdpblRvcDogXCIxMHB4XCIsXG4gICAgICAgIGJvcmRlclJhZGl1czogXCI1cHhcIixcbiAgICAgICAgcGFkZGluZzogXCI1cHhcIixcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMCwwLDAsMC4wMilcIixcbiAgICAgICAgYm9yZGVyOiBcIjFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMilcIixcbiAgICAgICAgYm94U2hhZG93OiBcInJnYmEoMCwgMCwgMCwgMC40KSAycHggMnB4IDZweFwiLFxuICAgICAgICBiYWNrZHJvcEZpbHRlcjogXCJibHVyKDRweClcIixcbiAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICB3aWR0aDogXCJjYWxjKDEwMCUgKyAyMHB4KVwiLFxuICAgICAgICBtYXJnaW5MZWZ0OiBcIi0xMHB4XCIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vY3NzLWxvYWRlckA2LjcuMV93ZWJwYWNrQDUuOTQuMF9Ac3djK2NvcmVAMS4zLjkyX2VzYnVpbGRAMC4xOC4yMF93ZWJwYWNrLWNsaUA0LjEwLjBfL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vY3NzLWxvYWRlckA2LjcuMV93ZWJwYWNrQDUuOTQuMF9Ac3djK2NvcmVAMS4zLjkyX2VzYnVpbGRAMC4xOC4yMF93ZWJwYWNrLWNsaUA0LjEwLjBfL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtY29udGFpbmVyTm9kZS1pbnRlcmFjdGlvblJlY3Qge1xcbiAgcG9pbnRlci1ldmVudHM6IHN0cm9rZSAhaW1wb3J0YW50O1xcbiAgb3BhY2l0eTogMDtcXG4gIC8qIOKshyBVbmNvbW1lbnQgZm9yIGRlYnVnZ2luZyBwdXJwb3NlczoqL1xcbiAgLyogc3Ryb2tlOiBwdXJwbGU7XFxuICAgIG9wYWNpdHk6IDAuMjsgKi9cXG59XFxuLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1jb250YWluZXJOb2RlLXZpc2libGVSZWN0IHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4vKiAoYmVnaW4pIGNvbnRhaW5lck5vZGVzICovXFxuLyogQ09OVEFJTkVSIE5PREVTIEhBVkUgQSBTUEVDSUZJQyBTRUxFQ1RJT04gTUVDSEFOSVNNIFRPIEFMTE9XIEVESVRJTkcgRURHRVMgSU5TSURFIFRIRU0gKi9cXG4ucmVhY3QtZmxvd19fbm9kZS54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWNvbnRhaW5lck5vZGUtLWluc2lkZSB7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XFxufVxcbi5yZWFjdC1mbG93X19ub2RlLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tY29udGFpbmVyTm9kZS0taW5zaWRlOm5vdCguc2VsZWN0ZWQpIC54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUge1xcbiAgZmlsdGVyOiBub25lICFpbXBvcnRhbnQ7XFxufVxcbi5yZWFjdC1mbG93X19ub2RlLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tY29udGFpbmVyTm9kZS0taW5zaWRlXFxuICAueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1lZGl0YWJsZS1ub2RlLW5hbWUtaW5wdXRcXG4gIHNwYW4sXFxuLnJlYWN0LWZsb3dfX25vZGUueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1jb250YWluZXJOb2RlLS1pbnNpZGUgLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0taW5mby1ub2RlLXBhbmVsLFxcbi5yZWFjdC1mbG93X19ub2RlLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tY29udGFpbmVyTm9kZS0taW5zaWRlIC5yZWFjdC1mbG93X19yZXNpemUtY29udHJvbCBkaXYge1xcbiAgcG9pbnRlci1ldmVudHM6IGFsbCAhaW1wb3J0YW50O1xcbn1cXG5cXG4ucmVhY3QtZmxvd19fbm9kZS54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWNvbnRhaW5lck5vZGUtLWluc2lkZTpub3QoLnNlbGVjdGVkKTpob3ZlclxcbiAgLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSB7XFxuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggM3B4ICMwMDZiYTQ3YikgIWltcG9ydGFudDtcXG59XFxuLnJlYWN0LWZsb3dfX25vZGUueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1jb250YWluZXJOb2RlLS1pbnNpZGUuc2VsZWN0ZWQ6aG92ZXIgLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSB7XFxuICBmaWx0ZXI6IGRyb3Atc2hhZG93KDJweCAycHggM3B4ICMwMDRlNzdkNikgIWltcG9ydGFudDtcXG59XFxuXFxuLyogKGVuZCkgY29udGFpbmVyTm9kZXMgKi9cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi8uLi94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Ob2RlU3Zncy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxpQ0FBaUM7RUFDakMsVUFBVTtFQUNWLHVDQUF1QztFQUN2QzttQkFDaUI7QUFDbkI7QUFDQTtFQUNFLG9CQUFvQjtBQUN0Qjs7QUFFQSwyQkFBMkI7QUFDM0IsMkZBQTJGO0FBQzNGO0VBQ0UsK0JBQStCO0VBQy9CLHVCQUF1QjtFQUN2QiwyQkFBMkI7QUFDN0I7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBOzs7OztFQUtFLDhCQUE4QjtBQUNoQzs7QUFFQTs7RUFFRSxxREFBcUQ7QUFDdkQ7QUFDQTtFQUNFLHFEQUFxRDtBQUN2RDs7QUFFQSx5QkFBeUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1jb250YWluZXJOb2RlLWludGVyYWN0aW9uUmVjdCB7XFxuICBwb2ludGVyLWV2ZW50czogc3Ryb2tlICFpbXBvcnRhbnQ7XFxuICBvcGFjaXR5OiAwO1xcbiAgLyog4qyHIFVuY29tbWVudCBmb3IgZGVidWdnaW5nIHB1cnBvc2VzOiovXFxuICAvKiBzdHJva2U6IHB1cnBsZTtcXG4gICAgb3BhY2l0eTogMC4yOyAqL1xcbn1cXG4ueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLWNvbnRhaW5lck5vZGUtdmlzaWJsZVJlY3Qge1xcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblxcbi8qIChiZWdpbikgY29udGFpbmVyTm9kZXMgKi9cXG4vKiBDT05UQUlORVIgTk9ERVMgSEFWRSBBIFNQRUNJRklDIFNFTEVDVElPTiBNRUNIQU5JU00gVE8gQUxMT1cgRURJVElORyBFREdFUyBJTlNJREUgVEhFTSAqL1xcbi5yZWFjdC1mbG93X19ub2RlLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tY29udGFpbmVyTm9kZS0taW5zaWRlIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lICFpbXBvcnRhbnQ7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcXG59XFxuLnJlYWN0LWZsb3dfX25vZGUueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1jb250YWluZXJOb2RlLS1pbnNpZGU6bm90KC5zZWxlY3RlZCkgLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSB7XFxuICBmaWx0ZXI6IG5vbmUgIWltcG9ydGFudDtcXG59XFxuLnJlYWN0LWZsb3dfX25vZGUueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1jb250YWluZXJOb2RlLS1pbnNpZGVcXG4gIC54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWVkaXRhYmxlLW5vZGUtbmFtZS1pbnB1dFxcbiAgc3BhbixcXG4ucmVhY3QtZmxvd19fbm9kZS54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWNvbnRhaW5lck5vZGUtLWluc2lkZSAueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1pbmZvLW5vZGUtcGFuZWwsXFxuLnJlYWN0LWZsb3dfX25vZGUueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1jb250YWluZXJOb2RlLS1pbnNpZGUgLnJlYWN0LWZsb3dfX3Jlc2l6ZS1jb250cm9sIGRpdiB7XFxuICBwb2ludGVyLWV2ZW50czogYWxsICFpbXBvcnRhbnQ7XFxufVxcblxcbi5yZWFjdC1mbG93X19ub2RlLnh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tY29udGFpbmVyTm9kZS0taW5zaWRlOm5vdCguc2VsZWN0ZWQpOmhvdmVyXFxuICAueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlIHtcXG4gIGZpbHRlcjogZHJvcC1zaGFkb3coMnB4IDJweCAzcHggIzAwNmJhNDdiKSAhaW1wb3J0YW50O1xcbn1cXG4ucmVhY3QtZmxvd19fbm9kZS54eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWNvbnRhaW5lck5vZGUtLWluc2lkZS5zZWxlY3RlZDpob3ZlciAueHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlIHtcXG4gIGZpbHRlcjogZHJvcC1zaGFkb3coMnB4IDJweCAzcHggIzAwNGU3N2Q2KSAhaW1wb3J0YW50O1xcbn1cXG5cXG4vKiAoZW5kKSBjb250YWluZXJOb2RlcyAqL1xcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc3R5bGUtbG9hZGVyQDMuMy4zX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3N0eWxlLWxvYWRlckAzLjMuM193ZWJwYWNrQDUuOTQuMF9Ac3djK2NvcmVAMS4zLjkyX2VzYnVpbGRAMC4xOC4yMF93ZWJwYWNrLWNsaUA0LjEwLjBfL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc3R5bGUtbG9hZGVyQDMuMy4zX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc3R5bGUtbG9hZGVyQDMuMy4zX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3N0eWxlLWxvYWRlckAzLjMuM193ZWJwYWNrQDUuOTQuMF9Ac3djK2NvcmVAMS4zLjkyX2VzYnVpbGRAMC4xOC4yMF93ZWJwYWNrLWNsaUA0LjEwLjBfL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc3R5bGUtbG9hZGVyQDMuMy4zX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9jc3MtbG9hZGVyQDYuNy4xX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbOF0udXNlWzFdIS4vTm9kZVN2Z3MuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcDtcbiAgZm9yIChwIGluIGEpIHtcbiAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yIChwIGluIGIpIHtcbiAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKCFhW3BdKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgaXNOYW1lZEV4cG9ydCA9ICFjb250ZW50LmxvY2FscztcbiAgICB2YXIgb2xkTG9jYWxzID0gaXNOYW1lZEV4cG9ydCA/IG5hbWVkRXhwb3J0IDogY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vY3NzLWxvYWRlckA2LjcuMV93ZWJwYWNrQDUuOTQuMF9Ac3djK2NvcmVAMS4zLjkyX2VzYnVpbGRAMC4xOC4yMF93ZWJwYWNrLWNsaUA0LjEwLjBfL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzhdLnVzZVsxXSEuL05vZGVTdmdzLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBpc05hbWVkRXhwb3J0ID8gbmFtZWRFeHBvcnQgOiBjb250ZW50LmxvY2FscywgaXNOYW1lZEV4cG9ydCkpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGlzTmFtZWRFeHBvcnQgPyBuYW1lZEV4cG9ydCA6IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9jc3MtbG9hZGVyQDYuNy4xX3dlYnBhY2tANS45NC4wX0Bzd2MrY29yZUAxLjMuOTJfZXNidWlsZEAwLjE4LjIwX3dlYnBhY2stY2xpQDQuMTAuMF8vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbOF0udXNlWzFdIS4vTm9kZVN2Z3MuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIl0sIm5hbWVzIjpbIkRFRkFVTFRfTk9ERV9TVFJPS0VfV0lEVEgiLCJfX19OQVNUWV9IQUNLX0ZPUl9TQUZBUklfdG9fZm9yY2VfcmVkcmF3aW5nX3N2Z3NfYW5kX2F2b2lkX3JlcGFpbnRfZ2xpdGNoZXMiLCJmbGFnIiwiY29udGFpbmVyTm9kZUludGVyYWN0aW9uUmVjdENzc0NsYXNzTmFtZSIsImNvbnRhaW5lck5vZGVWaXNpYmxlUmVjdENzc0NsYXNzTmFtZSIsIm5vcm1hbGl6ZSIsIl9wcm9wcyIsInN0cm9rZVdpZHRoIiwiX3N0cm9rZVdpZHRoIiwieCIsIl94IiwieSIsIl95Iiwid2lkdGgiLCJfd2lkdGgiLCJoZWlnaHQiLCJfaGVpZ2h0IiwiZmlsbENvbG9yIiwiX2ZpbGxDb2xvciIsInN0cm9rZUNvbG9yIiwiX3N0cm9rZUNvbG9yIiwicHJvcHMiLCJoYWxmU3Ryb2tlV2lkdGgiLCJSZWFjdCIsIkRFRkFVTFRfSU5UUkFDVElPTl9XSURUSCIsIkRFRkFVTFRfTk9ERV9GSUxMIiwiREVGQVVMVF9OT0RFX1NUUk9LRV9DT0xPUiIsIkFjdGl2aXR5Tm9kZU1hcmtlciIsInVzZU1lbW8iLCJEYXRhT2JqZWN0Tm9kZVN2ZyIsIl9fcHJvcHMiLCJpc0ljb24iLCJfaXNJY29uIiwic2hvd0ZvbGRlZFBhZ2UiLCJfc2hvd0ZvbGRlZFBhZ2UiLCJzaG93QXJyb3ciLCJfc2hvd0Fycm93IiwiYmV2ZWwiLCJhcnJvd1N0YXJ0aW5nWCIsImFycm93U3RhcnRpbmdZIiwiX2pzeHMiLCJfRnJhZ21lbnQiLCJjaGlsZHJlbiIsIl9qc3giLCJwb2ludHMiLCJmaWxsIiwic3Ryb2tlIiwic3Ryb2tlTGluZWpvaW4iLCJ0cmFuc2Zvcm0iLCJkZWczMCIsIk1hdGgiLCJQSSIsImRlZzE1MCIsImRlZzE0MCIsImNvczMwIiwiY29zIiwic2luMzAiLCJzaW4iLCJjb3MxNTAiLCJzaW4xNTAiLCJjb3MxNDAiLCJzaW4xNDAiLCJOT0RFX0NPTE9SUyIsInN0YXJ0RXZlbnQiLCJmb3JlZ3JvdW5kIiwiYmFja2dyb3VuZCIsImludGVybWVkaWF0ZUNhdGNoRXZlbnQiLCJib3VuZGFyeUV2ZW50IiwiaW50ZXJtZWRpYXRlVGhyb3dFdmVudCIsImVuZEV2ZW50IiwiZ2F0ZXdheSIsInRhc2siLCJzdWJQcm9jZXNzIiwiU3RhcnRFdmVudE5vZGVTdmciLCJ2YXJpYW50IiwiY3giLCJjeSIsInIiLCJFdmVudFZhcmlhbnRTeW1ib2xTdmciLCJmaWxsZWQiLCJpbm5lckNpcmNsZVJhZGl1cyIsIm91dGVyQ2lyY2xlUmFkaXVzIiwiSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGVTdmciLCJyaW1XaWR0aCIsIkludGVybWVkaWF0ZVRocm93RXZlbnROb2RlU3ZnIiwiRW5kRXZlbnROb2RlU3ZnIiwiVGFza05vZGVTdmciLCJtYXJrZXJzIiwiX21hcmtlcnMiLCJfdmFyaWFudCIsIlNldCIsInJ4IiwicnkiLCJoYXMiLCJBY3Rpdml0eU5vZGVJY29ucyIsImljb25zIiwiR2F0ZXdheU5vZGVTdmciLCJzdHJva2VMaW5lY2FwIiwieDEiLCJ5MSIsIngyIiwieTIiLCJMYW5lTm9kZVN2ZyIsImZvcndhcmRSZWYiLCJyZWYiLCJndXR0ZXJXaWR0aCIsIl9ndXR0ZXJXaWR0aCIsImludGVyYWN0aW9uUmVjdFN0cm9rZVdpZHRoIiwiaW50ZXJhY3Rpb25SZWN0WCIsImludGVyYWN0aW9uUmVjdFkiLCJpbnRlcmFjdGlvblJlY3RXaWR0aCIsImludGVyYWN0aW9uUmVjdEhlaWdodCIsIl9pbnRlcmFjdGlvblJlY3RQcm9wcyIsImludGVyYWN0aW9uUmVjdFByb3BzIiwiY2xhc3NOYW1lIiwiU3ViUHJvY2Vzc05vZGVTdmciLCJfcmltV2lkdGgiLCJib3JkZXJSYWRpdXMiLCJfYm9yZGVyUmFkaXVzIiwiX2ljb25zIiwic3Ryb2tlRGFzaGFycmF5IiwidW5kZWZpbmVkIiwiVGV4dEFubm90YXRpb25Ob2RlU3ZnIiwic2hvd1BsYWNlaG9sZGVyIiwiZCIsInN0eWxlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiR3JvdXBOb2RlU3ZnIiwiaW50ZXJhY3Rpb25SZWN0U3Ryb2tlRGFzaGFycmF5IiwiX2EiLCJVbmtub3duTm9kZVN2ZyIsIl9yZWYiLCJNZXNzYWdlRXZlbnRTeW1ib2xTdmciLCJUaW1lckV2ZW50U3ltYm9sU3ZnIiwiRXJyb3JFdmVudFN5bWJvbFN2ZyIsIkVzY2FsYXRpb25FdmVudFN5bWJvbFN2ZyIsIkNhbmNlbEV2ZW50U3ltYm9sU3ZnIiwiQ29tcGVuc2F0aW9uRXZlbnRTeW1ib2xTdmciLCJDb25kaXRpb25hbEV2ZW50U3ltYm9sU3ZnIiwiTGlua0V2ZW50U3ltYm9sU3ZnIiwiU2lnbmFsRXZlbnRTeW1ib2xTdmciLCJfcmVmMiIsInBhZGRpbmciLCJib2R5V2lkdGgiLCJib2R5SGVpZ2h0IiwiZW52ZWxvcGVCb2R5IiwidG9wTGVmdCIsImJvdHRvbVJpZ2h0IiwiZmxhcEhlaWdodCIsImVudmVsb3BlRmxhcCIsIl9yZWYzIiwiY2xvY2tSYWRpdXMiLCJzaG9ydEhhbmRMZW5ndGgiLCJsb25nSGFuZExlbmd0aCIsImhvdXJIYW5kQW5nbGUiLCJtaW51dGVIYW5kQW5nbGUiLCJob3VySGFuZCIsIm1pbnV0ZUhhbmQiLCJBcnJheSIsImZyb20iLCJsZW5ndGgiLCJfIiwiaW5kZXgiLCJhbmdsZSIsIl9yZWY0IiwiaHgiLCJoeSIsInNjYWxlRmFjdG9yIiwic2hpZnRMZWZ0IiwibWFwIiwicG9pbnQiLCJqb2luIiwiX3JlZjUiLCJhcnJvd0hlaWdodCIsImFycm93QmFzZVdpZHRoIiwidXBwZXJMZWZ0UG9pbnQiLCJ1cHBlclJpZ2h0UG9pbnQiLCJ0b3BQb2ludCIsIm1pZFBvaW50IiwiX3JlZjYiLCJmYXJYUG9pbnQiLCJjbG9zZVhQb2ludCIsImhpZ2hZUG9pbnQiLCJsb3dZUG9pbnQiLCJsZWZ0VXBwZXJMZWZ0UG9pbnQiLCJyaWdodFVwcGVyTGVmdFBvaW50IiwiY2VudGVyVXBwZXJQb2ludCIsImxlZnRVcHBlclJpZ2h0UG9pbnQiLCJyaWdodFVwcGVyUmlnaHRQb2ludCIsImNlbnRlclJpZ2h0UG9pbnQiLCJyaWdodExvd2VyUmlnaHRQb2ludCIsImxlZnRMb3dlclJpZ2h0UG9pbnQiLCJjZW50ZXJMb3dlclBvaW50IiwicmlnaHRMb3dlckxlZnRQb2ludCIsImxlZnRMb3dlckxlZnRQb2ludCIsImNlbnRlckxlZnRQb2ludCIsIl9yZWY3IiwicmlnaHRPZmZzZXQiLCJmaXJzdFRyaWFuZ2xlIiwic2Vjb25kVHJpYW5nbGUiLCJfcmVmOCIsInNxdWFyZVNpemUiLCJsaW5lU3BhY2luZyIsImxpbmVUaGlja25lc3MiLCJfcmVmOSIsInRyaWFuZ2xlIiwiX3JlZjEwIiwibG93ZXJMZWZ0UG9pbnQiLCJsb3dlclJpZ2h0UG9pbnQiLCJ1cHBlclJpZ2h0UG9pbnRBcnJvdyIsImxvd2VyUmlnaHRQb2ludEFycm93IiwiYXJyb3dIZWFkIiwiX3JlZjExIiwiTG9vcCIsInRleHRBbmNob3IiLCJkb21pbmFudEJhc2VsaW5lIiwiQWRIb2NTdWJQcm9jZXNzIiwiQ29tcGVuc2F0aW9uIiwiQ29sbGFwc2VkIiwiTXVsdGlJbnN0YW5jZVBhcmFsbGVsIiwiTXVsdGlJbnN0YW5jZVNlcXVlbnRpYWwiLCJwYXJzZUJwbW4yMERyb29sczEwTWV0YURhdGEiLCJnZXRDb250YWlubWVudFJlbGF0aW9uc2hpcCIsInByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwIiwiRWRpdGFibGVOb2RlTGFiZWwiLCJ1c2VFZGl0YWJsZU5vZGVMYWJlbCIsIk5vZGVSZXNpemVySGFuZGxlIiwidXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyIsInVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AiLCJ1c2VOb2RlQ2xhc3NOYW1lIiwidXNlTm9kZURpbWVuc2lvbnMiLCJ1c2VOb2RlUmVzaXppbmciLCJJbmZvTm9kZVBhbmVsIiwiT3V0Z29pbmdTdHVmZk5vZGVQYW5lbCIsIlBvc2l0aW9uYWxOb2RlSGFuZGxlcyIsInVzZUlzSG92ZXJlZCIsInVzZUNhbGxiYWNrIiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJSRiIsInVwZGF0ZUZsb3dFbGVtZW50IiwidXBkYXRlTGFuZSIsInVwZGF0ZVRleHRBbm5vdGF0aW9uIiwidXNlQnBtbkVkaXRvclN0b3JlIiwidXNlQnBtbkVkaXRvclN0b3JlQXBpIiwiQlBNTl9PVVRHT0lOR19TVFJVQ1RVUkUiLCJicG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZyIsImJwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nIiwiRURHRV9UWVBFUyIsIk1JTl9OT0RFX1NJWkVTIiwiTk9ERV9UWVBFUyIsImdldE5vZGVMYWJlbFBvc2l0aW9uIiwidXNlTm9kZVN0eWxlIiwiTm9kZU1vcnBoaW5nUGFuZWwiLCJ1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMiLCJ1c2VHYXRld2F5Tm9kZU1vcnBoaW5nQWN0aW9ucyIsInVzZVRhc2tOb2RlTW9ycGhpbmdBY3Rpb25zIiwidXNlU3ViUHJvY2Vzc05vZGVNb3JwaGluZ0FjdGlvbnMiLCJ1c2VLZXlib2FyZFNob3J0Y3V0c0Zvck1vcnBoaW5nQWN0aW9ucyIsIlN0YXJ0RXZlbnROb2RlIiwibWVtbyIsImRhdGEiLCJicG1uRWxlbWVudCIsInNoYXBlIiwic2hhcGVJbmRleCIsInBhcmVudFh5Rmxvd05vZGUiLCJzZWxlY3RlZCIsImRyYWdnaW5nIiwiekluZGV4IiwidHlwZSIsImlkIiwicmVuZGVyQ291bnQiLCJjdXJyZW50IiwiaXNIb3ZlcmVkIiwiaXNSZXNpemluZyIsInNob3VsZEFjdExpa2VIb3ZlcmVkIiwicyIsInh5Rmxvd1JlYWN0S2llRGlhZ3JhbSIsImRyYWdnaW5nTm9kZXMiLCJpc0VkaXRpbmdMYWJlbCIsInNldEVkaXRpbmdMYWJlbCIsInRyaWdnZXJFZGl0aW5nIiwidHJpZ2dlckVkaXRpbmdJZkVudGVyIiwiYnBtbkVkaXRvclN0b3JlQXBpIiwiaXNUYXJnZXRlZCIsImlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0Iiwibm9kZURpbWVuc2lvbnMiLCJub2RlVHlwZSIsInNldE5hbWUiLCJuZXdOYW1lIiwic2V0U3RhdGUiLCJzdGF0ZSIsImRlZmluaXRpb25zIiwiYnBtbiIsIm1vZGVsIiwibmV3Rmxvd0VsZW1lbnQiLCJ0cmltIiwiaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQiLCJzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQiLCJtb3JwaGluZ0FjdGlvbnMiLCJkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzIiwiX2MiLCJfYiIsImV2ZW50RGVmaW5pdGlvbiIsIl9fJCRlbGVtZW50Iiwibm9kZUlkIiwib25Eb3VibGVDbGljayIsIm9uS2V5RG93biIsInRhYkluZGV4IiwiaXNWaXNpYmxlIiwib25DbGljayIsInByb3BlcnRpZXNQYW5lbCIsImlzT3BlbiIsIm5vZGVNYXBwaW5nIiwiZWRnZU1hcHBpbmciLCJub2RlSHJlZiIsIm5vZGVUeXBlcyIsIm5vZGVzIiwiZWRnZVR5cGVzIiwiZWRnZXMiLCJkaXNhYmxlZEFjdGlvbklkcyIsImlzVG9nZ2xlVmlzaWJsZSIsImlzRXhwYW5kZWQiLCJzZXRFeHBhbmRlZCIsImFjdGlvbnMiLCJwcmltYXJ5Q29sb3IiLCJzZWNvbmRhcnlDb2xvciIsInNlbGVjdGVkQWN0aW9uSWQiLCJfZSIsIl9kIiwiZmxleFNocmluayIsIk5vZGVMYWJlbEF0VGhlQm90dG9tIiwibmFtZSIsImlzRWRpdGluZyIsInNldEVkaXRpbmciLCJwb3NpdGlvbiIsInZhbHVlIiwib25DaGFuZ2UiLCJ2YWxpZGF0ZSIsInNob3VsZENvbW1pdE9uQmx1ciIsImZvbnRDc3NQcm9wZXJ0aWVzIiwiSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGUiLCJJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZSIsIkVuZEV2ZW50Tm9kZSIsIlRhc2tOb2RlIiwiZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyIsImRpYWdyYW0iLCJvdmVybGF5cyIsImlzRW5hYmxlZCIsInVzZUFjdGl2aXR5SWNvbnMiLCJub2RlU2hhcGVJbmRleCIsIlN1YlByb2Nlc3NOb2RlIiwiaXNPbmx5U2VsZWN0ZWROb2RlIiwiX3NlbGVjdGVkTm9kZXMiLCJsb29wQ2hhcmFjdGVyaXN0aWNzIiwiR2F0ZXdheU5vZGUiLCJEYXRhT2JqZWN0Tm9kZSIsImRhdGFPYmplY3QiLCJub2RlSGVpZ2h0Iiwic2V0Tm9kZUhlaWdodCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwib3V0bGluZSIsInNldExhYmVsSGVpZ2h0IiwiR3JvdXBOb2RlIiwiZ3JvdXAiLCJyZWFjdEZsb3ciLCJ1c2VSZWFjdEZsb3ciLCJnZXROb2RlcyIsImZsYXRNYXAiLCJuIiwiYm91bmRzIiwiY29udGFpbmVyIiwic25hcEdyaWQiLCJjb250YWluZXJNaW5TaXplcyIsImJvdW5kc01pblNpemVzIiwiYm9yZGVyQWxsb3dhbmNlSW5QeCIsImlzQ29tcGxldGVseUluc2lkZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiTGFuZU5vZGUiLCJsYW5lIiwibmV3TGFuZSIsIlRleHRBbm5vdGF0aW9uTm9kZSIsInRleHRBbm5vdGF0aW9uIiwic2V0VGV4dCIsIm5ld1RleHQiLCJuZXdUZXh0QW5ub3RhdGlvbiIsInRleHQiLCJfXyQkdGV4dCIsImNvbnRlbnQiLCJTdHJpbmciLCJnZXQiLCJVbmtub3duTm9kZSIsIl9yZWYxMiIsIkhhbmRsZSIsIm9wYWNpdHkiLCJQb3NpdGlvbiIsIlRvcCIsInNraXBWYWxpZGF0aW9uIiwiYWN0aXZpdHkiLCJwdXNoIiwiX3JlZjEzIiwibWFyZ2luVG9wIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyIiwiYm94U2hhZG93IiwiYmFja2Ryb3BGaWx0ZXIiLCJ0ZXh0QWxpZ24iLCJtYXJnaW5MZWZ0Il0sInNvdXJjZVJvb3QiOiIifQ==