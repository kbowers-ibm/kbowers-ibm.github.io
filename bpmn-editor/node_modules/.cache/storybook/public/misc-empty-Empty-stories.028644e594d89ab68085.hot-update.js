"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/diagram/BpmnDiagramDomain.tsx":
/*!*******************************************!*\
  !*** ./src/diagram/BpmnDiagramDomain.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeMarker: () => (/* binding */ ActivityNodeMarker),
/* harmony export */   BPMN_CONTAINMENT_MAP: () => (/* binding */ BPMN_CONTAINMENT_MAP),
/* harmony export */   BPMN_GRAPH_STRUCTURE: () => (/* binding */ BPMN_GRAPH_STRUCTURE),
/* harmony export */   BPMN_OUTGOING_STRUCTURE: () => (/* binding */ BPMN_OUTGOING_STRUCTURE),
/* harmony export */   CONNECTION_LINE_EDGE_COMPONENTS_MAPPING: () => (/* binding */ CONNECTION_LINE_EDGE_COMPONENTS_MAPPING),
/* harmony export */   CONNECTION_LINE_NODE_COMPONENT_MAPPING: () => (/* binding */ CONNECTION_LINE_NODE_COMPONENT_MAPPING),
/* harmony export */   DEFAULT_NODE_SIZES: () => (/* binding */ DEFAULT_NODE_SIZES),
/* harmony export */   EDGE_TYPES: () => (/* binding */ EDGE_TYPES),
/* harmony export */   MIN_NODE_SIZES: () => (/* binding */ MIN_NODE_SIZES),
/* harmony export */   MIN_SIZE_FOR_NODES: () => (/* binding */ MIN_SIZE_FOR_NODES),
/* harmony export */   NODE_MIN_HEIGHT: () => (/* binding */ NODE_MIN_HEIGHT),
/* harmony export */   NODE_MIN_WIDTH: () => (/* binding */ NODE_MIN_WIDTH),
/* harmony export */   NODE_TYPES: () => (/* binding */ NODE_TYPES),
/* harmony export */   XY_FLOW_EDGE_TYPES: () => (/* binding */ XY_FLOW_EDGE_TYPES),
/* harmony export */   XY_FLOW_NODE_TYPES: () => (/* binding */ XY_FLOW_NODE_TYPES),
/* harmony export */   bpmnEdgesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnEdgesOutgoingStuffNodePanelMapping),
/* harmony export */   bpmnNodesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnNodesOutgoingStuffNodePanelMapping),
/* harmony export */   elementToEdgeType: () => (/* binding */ elementToEdgeType),
/* harmony export */   elementToNodeType: () => (/* binding */ elementToNodeType),
/* harmony export */   getNodeTypeFromBpmnElement: () => (/* binding */ getNodeTypeFromBpmnElement)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/graph/graphStructure */ "../xyflow-react-kie-diagram/dist/graph/graphStructure.js");
/* harmony import */ var _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodes/Nodes */ "./src/diagram/nodes/Nodes.tsx");
/* harmony import */ var _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./edges/EdgeSvgs */ "./src/diagram/edges/EdgeSvgs.tsx");
/* harmony import */ var _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _edges_Edges__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edges/Edges */ "./src/diagram/edges/Edges.tsx");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools-core/switch-expression-ts */ "../switch-expression-ts/dist/switchExpression.js");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/snapgrid/SnapGrid */ "../xyflow-react-kie-diagram/dist/snapgrid/SnapGrid.js");









const NODE_TYPES = {
  startEvent: "node_startEvent",
  intermediateCatchEvent: "node_intermediateCatchEvent",
  intermediateThrowEvent: "node_intermediateThrowEvent",
  endEvent: "node_endEvent",
  task: "node_task",
  subProcess: "node_subProcess",
  gateway: "node_gateway",
  dataObject: "node_dataObject",
  textAnnotation: "node_textAnnotation",
  unknown: "node_unknown",
  group: "node_group",
  lane: "node_lane"
};
const EDGE_TYPES = {
  sequenceFlow: "edge_sequenceFlow",
  association: "edge_association"
};
var ActivityNodeMarker;
(function (ActivityNodeMarker) {
  ActivityNodeMarker["Compensation"] = "Compensation";
  ActivityNodeMarker["MultiInstanceParallel"] = "MultiInstanceParallel";
  ActivityNodeMarker["MultiInstanceSequential"] = "MultiInstanceSequential";
  ActivityNodeMarker["Collapsed"] = "Collapsed";
  ActivityNodeMarker["Loop"] = "Loop";
  ActivityNodeMarker["AdHocSubProcess"] = "AdHocSubProcess";
  ActivityNodeMarker["BusinessRule"] = "BusinessRule";
})(ActivityNodeMarker || (ActivityNodeMarker = {}));
const BPMN_GRAPH_STRUCTURE = new Map([[NODE_TYPES.startEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.task, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.subProcess, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateCatchEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateThrowEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.gateway, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.endEvent, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.dataObject, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.group, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.lane, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.textAnnotation, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.lane])]])]]);
const BPMN_CONTAINMENT_MAP = new Map([[NODE_TYPES.lane, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.subProcess, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.textAnnotation, NODE_TYPES.group])]])], [NODE_TYPES.subProcess, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation, NODE_TYPES.group])], [_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])], [NODE_TYPES.task, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])]]);
const CONNECTION_LINE_EDGE_COMPONENTS_MAPPING = {
  [EDGE_TYPES.sequenceFlow]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath,
  [EDGE_TYPES.association]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath
};
const CONNECTION_LINE_NODE_COMPONENT_MAPPING = {
  [NODE_TYPES.startEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg,
  [NODE_TYPES.endEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg,
  [NODE_TYPES.task]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg,
  [NODE_TYPES.subProcess]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.SubProcessNodeSvg,
  [NODE_TYPES.gateway]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg,
  [NODE_TYPES.textAnnotation]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg,
  [NODE_TYPES.lane]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.LaneNodeSvg,
  node_dataObject: undefined,
  node_unknown: undefined,
  node_group: undefined
};
const XY_FLOW_NODE_TYPES = {
  [NODE_TYPES.startEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.StartEventNode,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateCatchEventNode,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateThrowEventNode,
  [NODE_TYPES.endEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.EndEventNode,
  [NODE_TYPES.task]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TaskNode,
  [NODE_TYPES.subProcess]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.SubProcessNode,
  [NODE_TYPES.gateway]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GatewayNode,
  [NODE_TYPES.group]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GroupNode,
  [NODE_TYPES.textAnnotation]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TextAnnotationNode,
  [NODE_TYPES.dataObject]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.DataObjectNode,
  [NODE_TYPES.lane]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.LaneNode,
  [NODE_TYPES.unknown]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.UnknownNode
};
const XY_FLOW_EDGE_TYPES = {
  [EDGE_TYPES.sequenceFlow]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.SequenceFlowEdge,
  [EDGE_TYPES.association]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.AssociationEdge
};
const BPMN_OUTGOING_STRUCTURE = {
  [NODE_TYPES.startEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.endEvent]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.task]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.subProcess]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.gateway]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.dataObject]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.group]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.lane]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.textAnnotation]: {
    nodes: [],
    edges: [EDGE_TYPES.association]
  }
};
const bpmnEdgesOutgoingStuffNodePanelMapping = {
  [EDGE_TYPES.sequenceFlow]: {
    actionTitle: "Add Sequence Flow",
    icon: _ref => {
      let {
        viewboxSize
      } = _ref;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize - 2},0`
      });
    }
  },
  [EDGE_TYPES.association]: {
    actionTitle: "Add Association",
    icon: _ref2 => {
      let {
        viewboxSize
      } = _ref2;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize},0`,
        strokeWidth: 2
      });
    }
  }
};
const bpmnNodesOutgoingStuffNodePanelMapping = {
  [NODE_TYPES.startEvent]: {
    actionTitle: "Add Start Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    actionTitle: "Add Intermediate Catch Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    actionTitle: "Add Intermediate Throw Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.endEvent]: {
    actionTitle: "Add End Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.task]: {
    actionTitle: "Add Task",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps
    })
  },
  [NODE_TYPES.subProcess]: {
    actionTitle: "Add Sub-process",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps,
      markers: ["CallActivityPaletteIcon"]
    })
  },
  [NODE_TYPES.gateway]: {
    actionTitle: "Add Gateway",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg, {
      ...nodeSvgProps,
      height: nodeSvgProps.width,
      variant: "none",
      x: nodeSvgProps.x,
      y: nodeSvgProps.y - 8
    })
  },
  [NODE_TYPES.textAnnotation]: {
    actionTitle: "Add Text Annotation",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg, {
      ...nodeSvgProps
    })
  }
};
const MIN_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref3 => {
    let {
      snapGrid
    } = _ref3;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref4 => {
    let {
      snapGrid
    } = _ref4;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref5 => {
    let {
      snapGrid
    } = _ref5;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref6 => {
    let {
      snapGrid
    } = _ref6;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref7 => {
    let {
      snapGrid
    } = _ref7;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref8 => {
    let {
      snapGrid
    } = _ref8;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref9 => {
    let {
      snapGrid
    } = _ref9;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref10 => {
    let {
      snapGrid
    } = _ref10;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref11 => {
    let {
      snapGrid
    } = _ref11;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2, NODE_MIN_HEIGHT + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref12 => {
    let {
      snapGrid
    } = _ref12;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 200, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref13 => {
    let {
      snapGrid
    } = _ref13;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref14 => {
    let {
      snapGrid
    } = _ref14;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const DEFAULT_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref15 => {
    let {
      snapGrid
    } = _ref15;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref16 => {
    let {
      snapGrid
    } = _ref16;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref17 => {
    let {
      snapGrid
    } = _ref17;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref18 => {
    let {
      snapGrid
    } = _ref18;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref19 => {
    let {
      snapGrid
    } = _ref19;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 90);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref20 => {
    let {
      snapGrid
    } = _ref20;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 360, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref21 => {
    let {
      snapGrid
    } = _ref21;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref22 => {
    let {
      snapGrid
    } = _ref22;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref23 => {
    let {
      snapGrid
    } = _ref23;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH * 2, NODE_MIN_WIDTH * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref24 => {
    let {
      snapGrid
    } = _ref24;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref25 => {
    let {
      snapGrid
    } = _ref25;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 540, 240);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref26 => {
    let {
      snapGrid
    } = _ref26;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const NODE_MIN_WIDTH = 120;
const NODE_MIN_HEIGHT = 60;
const MIN_SIZE_FOR_NODES = function (grid) {
  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NODE_MIN_WIDTH;
  let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NODE_MIN_HEIGHT;
  const snapped = (0,_kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__.snapPoint)(grid, {
    "@_x": width,
    "@_y": height
  }, "ceil");
  return {
    width: snapped["@_x"],
    height: snapped["@_y"]
  };
};
function getNodeTypeFromBpmnElement(bpmnElement) {
  if (!bpmnElement) {
    return NODE_TYPES.unknown;
  }
  const type = (0,_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__.switchExpression)(bpmnElement.__$$element, {
    dataObject: NODE_TYPES.dataObject,
    task: NODE_TYPES.task,
    lane: NODE_TYPES.lane,
    textAnnotation: NODE_TYPES.textAnnotation,
    default: undefined
  });
  return type;
}
const elementToNodeType = {
  lane: NODE_TYPES.lane,
  startEvent: NODE_TYPES.startEvent,
  boundaryEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateCatchEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateThrowEvent: NODE_TYPES.intermediateThrowEvent,
  endEvent: NODE_TYPES.endEvent,
  callActivity: NODE_TYPES.task,
  task: NODE_TYPES.task,
  businessRuleTask: NODE_TYPES.task,
  userTask: NODE_TYPES.task,
  scriptTask: NODE_TYPES.task,
  serviceTask: NODE_TYPES.task,
  subProcess: NODE_TYPES.subProcess,
  adHocSubProcess: NODE_TYPES.subProcess,
  transaction: NODE_TYPES.subProcess,
  complexGateway: NODE_TYPES.gateway,
  eventBasedGateway: NODE_TYPES.gateway,
  exclusiveGateway: NODE_TYPES.gateway,
  inclusiveGateway: NODE_TYPES.gateway,
  parallelGateway: NODE_TYPES.gateway,
  dataObject: NODE_TYPES.dataObject,
  group: NODE_TYPES.group,
  textAnnotation: NODE_TYPES.textAnnotation,
  event: NODE_TYPES.unknown
};
const elementToEdgeType = {
  association: EDGE_TYPES.association,
  sequenceFlow: EDGE_TYPES.sequenceFlow
};
try {
    // @ts-ignore
    getNodeTypeFromBpmnElement.displayName = "getNodeTypeFromBpmnElement";
    // @ts-ignore
    getNodeTypeFromBpmnElement.__docgenInfo = { "description": "", "displayName": "getNodeTypeFromBpmnElement", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"startEvent\"" }, { "value": "\"intermediateCatchEvent\"" }, { "value": "\"intermediateThrowEvent\"" }, { "value": "\"endEvent\"" }, { "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"dataObject\"" }, { "value": "\"textAnnotation\"" }, { "value": "\"group\"" }, { "value": "\"lane\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"boundaryEvent\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"complexGateway\"" }, { "value": "\"event\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 16 more ..." } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "@_cancelRemainingInstances": { "defaultValue": null, "description": "", "name": "@_cancelRemainingInstances", "required": false, "type": { "name": "boolean" } }, "@_ordering": { "defaultValue": null, "description": "", "name": "@_ordering", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Sequential\"" }] } }, "completionCondition": { "defaultValue": null, "description": "", "name": "completionCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_parallelMultiple": { "defaultValue": null, "description": "", "name": "@_parallelMultiple", "required": false, "type": { "name": "boolean" } }, "dataOutput": { "defaultValue": null, "description": "", "name": "dataOutput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "outputSet": { "defaultValue": null, "description": "", "name": "outputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; inputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "eventDefinition": { "defaultValue": null, "description": "", "name": "eventDefinition", "required": false, "type": { "name": "(({ __$$element: \"cancelEventDefinition\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tCancelEventDefinition__exten..." } }, "eventDefinitionRef": { "defaultValue": null, "description": "", "name": "eventDefinitionRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "@_cancelActivity": { "defaultValue": null, "description": "", "name": "@_cancelActivity", "required": false, "type": { "name": "boolean" } }, "@_attachedToRef": { "defaultValue": null, "description": "", "name": "@_attachedToRef", "required": true, "type": { "name": "string" } }, "@_implementation": { "defaultValue": null, "description": "", "name": "@_implementation", "required": false, "type": { "name": "string" } }, "@_drools:ruleFlowGroup": { "defaultValue": null, "description": "", "name": "@_drools:ruleFlowGroup", "required": false, "type": { "name": "string" } }, "@_calledElement": { "defaultValue": null, "description": "", "name": "@_calledElement", "required": false, "type": { "name": "string" } }, "@_drools:independent": { "defaultValue": null, "description": "", "name": "@_drools:independent", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_drools:waitForCompletion": { "defaultValue": null, "description": "", "name": "@_drools:waitForCompletion", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_gatewayDirection": { "defaultValue": null, "description": "", "name": "@_gatewayDirection", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Unspecified\"" }, { "value": "\"Converging\"" }, { "value": "\"Diverging\"" }, { "value": "\"Mixed\"" }] } }, "activationCondition": { "defaultValue": null, "description": "", "name": "activationCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_itemSubjectRef": { "defaultValue": null, "description": "", "name": "@_itemSubjectRef", "required": false, "type": { "name": "string" } }, "@_isCollection": { "defaultValue": null, "description": "", "name": "@_isCollection", "required": false, "type": { "name": "boolean" } }, "dataState": { "defaultValue": null, "description": "", "name": "dataState", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tDataState__extensionElements) | undefined; \"@_name\"?: st..." } }, "dataInput": { "defaultValue": null, "description": "", "name": "dataInput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "inputSet": { "defaultValue": null, "description": "", "name": "inputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; outputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "@_instantiate": { "defaultValue": null, "description": "", "name": "@_instantiate", "required": false, "type": { "name": "boolean" } }, "@_eventGatewayType": { "defaultValue": null, "description": "", "name": "@_eventGatewayType", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Exclusive\"" }] } }, "@_scriptFormat": { "defaultValue": null, "description": "", "name": "@_scriptFormat", "required": false, "type": { "name": "string" } }, "script": { "defaultValue": null, "description": "", "name": "script", "required": false, "type": { "name": "({ __?: undefined; __$$text?: string; } & BPMN20__tScript)" } }, "@_operationRef": { "defaultValue": null, "description": "", "name": "@_operationRef", "required": false, "type": { "name": "string" } }, "@_drools:serviceimplementation": { "defaultValue": null, "description": "", "name": "@_drools:serviceimplementation", "required": false, "type": { "name": "string" } }, "@_drools:serviceinterface": { "defaultValue": null, "description": "", "name": "@_drools:serviceinterface", "required": false, "type": { "name": "string" } }, "@_drools:serviceoperation": { "defaultValue": null, "description": "", "name": "@_drools:serviceoperation", "required": false, "type": { "name": "string" } }, "@_isInterrupting": { "defaultValue": null, "description": "", "name": "@_isInterrupting", "required": false, "type": { "name": "boolean" } }, "@_method": { "defaultValue": null, "description": "", "name": "@_method", "required": false, "type": { "name": "string" } }, "rendering": { "defaultValue": null, "description": "", "name": "rendering", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tRendering__extensionElements) | undefined; } & { ...; })..." } }, "@_categoryValueRef": { "defaultValue": null, "description": "", "name": "@_categoryValueRef", "required": false, "type": { "name": "string" } }, "@_textFormat": { "defaultValue": null, "description": "", "name": "@_textFormat", "required": false, "type": { "name": "string" } }, "text": { "defaultValue": null, "description": "", "name": "text", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "@_partitionElementRef": { "defaultValue": null, "description": "", "name": "@_partitionElementRef", "required": false, "type": { "name": "string" } }, "partitionElement": { "defaultValue": null, "description": "", "name": "partitionElement", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tBaseElement__extensionElements) | undefined; } & { ...; ..." } }, "flowNodeRef": { "defaultValue": null, "description": "", "name": "flowNodeRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[]" } }, "childLaneSet": { "defaultValue": null, "description": "", "name": "childLaneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement"] = { docgenInfo: getNodeTypeFromBpmnElement.__docgenInfo, name: "getNodeTypeFromBpmnElement", path: "src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/edges/Edges.tsx":
/*!*************************************!*\
  !*** ./src/diagram/edges/Edges.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AssociationEdge: () => (/* binding */ AssociationEdge),
/* harmony export */   SequenceFlowEdge: () => (/* binding */ SequenceFlowEdge)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_edges_Hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/edges/Hooks */ "../xyflow-react-kie-diagram/dist/edges/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_waypoints_Waypoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/waypoints/Waypoints */ "../xyflow-react-kie-diagram/dist/waypoints/Waypoints.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_edges_useAlwaysVisibleEdgeUpdatersAtNodeBorders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/edges/useAlwaysVisibleEdgeUpdatersAtNodeBorders */ "../xyflow-react-kie-diagram/dist/edges/useAlwaysVisibleEdgeUpdatersAtNodeBorders.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_edges_usePathForEdgeWithWaypoints__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/edges/usePathForEdgeWithWaypoints */ "../xyflow-react-kie-diagram/dist/edges/usePathForEdgeWithWaypoints.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_waypoints_usePotentialWaypointControls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/waypoints/usePotentialWaypointControls */ "../xyflow-react-kie-diagram/dist/waypoints/usePotentialWaypointControls.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _EdgeSvgs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./EdgeSvgs */ "./src/diagram/edges/EdgeSvgs.tsx");













const interactionStrokeProps = {
  strokeOpacity: 1,
  markerEnd: undefined,
  style: undefined,
  className: "react-flow__edge-interaction",
  stroke: "transparent",
  strokeLinecap: "round"
};
const SequenceFlowEdge = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9__.memo(props => {
  var _a, _b, _c, _d, _e, _f;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_9__.useRef)(0);
  renderCount.current++;
  const {
    path,
    points: waypoints
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_usePathForEdgeWithWaypoints__WEBPACK_IMPORTED_MODULE_4__.usePathForEdgeWithWaypoints)(props.source, props.target, (_a = props.data) === null || _a === void 0 ? void 0 : _a.bpmnEdge, (_b = props.data) === null || _b === void 0 ? void 0 : _b.bpmnShapeSource, (_c = props.data) === null || _c === void 0 ? void 0 : _c.bpmnShapeTarget);
  const interactionPathRef = react__WEBPACK_IMPORTED_MODULE_9__.useRef(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_8__.useIsHovered)(interactionPathRef);
  const {
    onMouseMove: onMouseMoveOnEdge,
    onDoubleClick: onDoubleClickEdge,
    potentialWaypoint,
    isDraggingWaypoint
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_waypoints_usePotentialWaypointControls__WEBPACK_IMPORTED_MODULE_5__.usePotentialWaypointControls)(waypoints, props.selected, props.id, (_d = props.data) === null || _d === void 0 ? void 0 : _d.bpmnEdgeIndex, interactionPathRef);
  const isConnecting = !!reactflow__WEBPACK_IMPORTED_MODULE_11__.useStore(s => s.connectionNodeId);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_Hooks__WEBPACK_IMPORTED_MODULE_1__.useEdgeClassName)(isConnecting, isDraggingWaypoint);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_useAlwaysVisibleEdgeUpdatersAtNodeBorders__WEBPACK_IMPORTED_MODULE_3__.useAlwaysVisibleEdgeUpdatersAtNodeBorders)(interactionPathRef, props.source, props.target, waypoints);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_EdgeSvgs__WEBPACK_IMPORTED_MODULE_10__.SequenceFlowPath, {
      svgRef: interactionPathRef,
      d: path,
      ...interactionStrokeProps,
      className: `${interactionStrokeProps.className} ${className}`,
      strokeWidth: (_e = props.interactionWidth) !== null && _e !== void 0 ? _e : _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_INTRACTION_WIDTH,
      onMouseMove: onMouseMoveOnEdge,
      onDoubleClick: onDoubleClickEdge,
      "data-edgetype": "information-requirement"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_EdgeSvgs__WEBPACK_IMPORTED_MODULE_10__.SequenceFlowPath, {
      d: path,
      className: `xyflow-react-kie-diagram--edge ${className}`
    }), props.selected && !isConnecting && ((_f = props.data) === null || _f === void 0 ? void 0 : _f.bpmnEdge) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_waypoints_Waypoints__WEBPACK_IMPORTED_MODULE_2__.Waypoints, {
      edgeId: props.id,
      edgeIndex: props.data.bpmnEdgeIndex,
      waypoints: waypoints,
      onDragStop: onMouseMoveOnEdge
    }), isHovered && potentialWaypoint && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_waypoints_Waypoints__WEBPACK_IMPORTED_MODULE_2__.PotentialWaypoint, {
      point: potentialWaypoint.point
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_7__.propsHaveSameValuesDeep);
const AssociationEdge = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_9__.memo(props => {
  var _a, _b, _c, _d, _e, _f;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_9__.useRef)(0);
  renderCount.current++;
  const {
    path,
    points: waypoints
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_usePathForEdgeWithWaypoints__WEBPACK_IMPORTED_MODULE_4__.usePathForEdgeWithWaypoints)(props.source, props.target, (_a = props.data) === null || _a === void 0 ? void 0 : _a.bpmnEdge, (_b = props.data) === null || _b === void 0 ? void 0 : _b.bpmnShapeSource, (_c = props.data) === null || _c === void 0 ? void 0 : _c.bpmnShapeTarget);
  const interactionPathRef = react__WEBPACK_IMPORTED_MODULE_9__.useRef(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_8__.useIsHovered)(interactionPathRef);
  const {
    onMouseMove: onMouseMoveOnEdge,
    onDoubleClick: onDoubleClickEdge,
    potentialWaypoint,
    isDraggingWaypoint
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_waypoints_usePotentialWaypointControls__WEBPACK_IMPORTED_MODULE_5__.usePotentialWaypointControls)(waypoints, props.selected, props.id, (_d = props.data) === null || _d === void 0 ? void 0 : _d.bpmnEdgeIndex, interactionPathRef);
  const isConnecting = !!reactflow__WEBPACK_IMPORTED_MODULE_11__.useStore(s => s.connectionNodeId);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_Hooks__WEBPACK_IMPORTED_MODULE_1__.useEdgeClassName)(isConnecting, isDraggingWaypoint);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_edges_useAlwaysVisibleEdgeUpdatersAtNodeBorders__WEBPACK_IMPORTED_MODULE_3__.useAlwaysVisibleEdgeUpdatersAtNodeBorders)(interactionPathRef, props.source, props.target, waypoints);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_EdgeSvgs__WEBPACK_IMPORTED_MODULE_10__.AssociationPath, {
      svgRef: interactionPathRef,
      d: path,
      ...interactionStrokeProps,
      className: `${interactionStrokeProps.className} ${className}`,
      strokeWidth: (_e = props.interactionWidth) !== null && _e !== void 0 ? _e : _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_INTRACTION_WIDTH,
      onMouseMove: onMouseMoveOnEdge,
      onDoubleClick: onDoubleClickEdge,
      "data-edgetype": "association"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_EdgeSvgs__WEBPACK_IMPORTED_MODULE_10__.AssociationPath, {
      d: path,
      className: `kie-bpmn-editor--edge ${className}`
    }), props.selected && !isConnecting && ((_f = props.data) === null || _f === void 0 ? void 0 : _f.bpmnEdge) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_waypoints_Waypoints__WEBPACK_IMPORTED_MODULE_2__.Waypoints, {
      edgeId: props.id,
      edgeIndex: props.data.bpmnEdgeIndex,
      waypoints: waypoints,
      onDragStop: onMouseMoveOnEdge
    }), isHovered && potentialWaypoint && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_waypoints_Waypoints__WEBPACK_IMPORTED_MODULE_2__.PotentialWaypoint, {
      point: potentialWaypoint.point
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_7__.propsHaveSameValuesDeep);
try {
    // @ts-ignore
    SequenceFlowEdge.displayName = "SequenceFlowEdge";
    // @ts-ignore
    SequenceFlowEdge.__docgenInfo = { "description": "", "displayName": "SequenceFlowEdge", "props": { "source": { "defaultValue": null, "description": "", "name": "source", "required": true, "type": { "name": "string" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": true, "type": { "name": "string" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "BpmnDiagramEdgeData" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "animated": { "defaultValue": null, "description": "", "name": "animated", "required": false, "type": { "name": "boolean" } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": true, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": true, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "interactionWidth": { "defaultValue": null, "description": "", "name": "interactionWidth", "required": false, "type": { "name": "number" } }, "sourceX": { "defaultValue": null, "description": "", "name": "sourceX", "required": true, "type": { "name": "number" } }, "sourceY": { "defaultValue": null, "description": "", "name": "sourceY", "required": true, "type": { "name": "number" } }, "targetX": { "defaultValue": null, "description": "", "name": "targetX", "required": true, "type": { "name": "number" } }, "targetY": { "defaultValue": null, "description": "", "name": "targetY", "required": true, "type": { "name": "number" } }, "sourceHandleId": { "defaultValue": null, "description": "", "name": "sourceHandleId", "required": false, "type": { "name": "string | null" } }, "targetHandleId": { "defaultValue": null, "description": "", "name": "targetHandleId", "required": false, "type": { "name": "string | null" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "ReactNode" } }, "labelStyle": { "defaultValue": null, "description": "", "name": "labelStyle", "required": false, "type": { "name": "CSSProperties" } }, "labelShowBg": { "defaultValue": null, "description": "", "name": "labelShowBg", "required": false, "type": { "name": "boolean" } }, "labelBgStyle": { "defaultValue": null, "description": "", "name": "labelBgStyle", "required": false, "type": { "name": "CSSProperties" } }, "labelBgPadding": { "defaultValue": null, "description": "", "name": "labelBgPadding", "required": false, "type": { "name": "[number, number]" } }, "labelBgBorderRadius": { "defaultValue": null, "description": "", "name": "labelBgBorderRadius", "required": false, "type": { "name": "number" } }, "markerStart": { "defaultValue": null, "description": "", "name": "markerStart", "required": false, "type": { "name": "string" } }, "markerEnd": { "defaultValue": null, "description": "", "name": "markerEnd", "required": false, "type": { "name": "string" } }, "pathOptions": { "defaultValue": null, "description": "", "name": "pathOptions", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/edges/Edges.tsx#SequenceFlowEdge"] = { docgenInfo: SequenceFlowEdge.__docgenInfo, name: "SequenceFlowEdge", path: "src/diagram/edges/Edges.tsx#SequenceFlowEdge" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    AssociationEdge.displayName = "AssociationEdge";
    // @ts-ignore
    AssociationEdge.__docgenInfo = { "description": "", "displayName": "AssociationEdge", "props": { "source": { "defaultValue": null, "description": "", "name": "source", "required": true, "type": { "name": "string" } }, "target": { "defaultValue": null, "description": "", "name": "target", "required": true, "type": { "name": "string" } }, "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": false, "type": { "name": "BpmnDiagramEdgeData" } }, "style": { "defaultValue": null, "description": "", "name": "style", "required": false, "type": { "name": "CSSProperties" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "animated": { "defaultValue": null, "description": "", "name": "animated", "required": false, "type": { "name": "boolean" } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": true, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": true, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "interactionWidth": { "defaultValue": null, "description": "", "name": "interactionWidth", "required": false, "type": { "name": "number" } }, "sourceX": { "defaultValue": null, "description": "", "name": "sourceX", "required": true, "type": { "name": "number" } }, "sourceY": { "defaultValue": null, "description": "", "name": "sourceY", "required": true, "type": { "name": "number" } }, "targetX": { "defaultValue": null, "description": "", "name": "targetX", "required": true, "type": { "name": "number" } }, "targetY": { "defaultValue": null, "description": "", "name": "targetY", "required": true, "type": { "name": "number" } }, "sourceHandleId": { "defaultValue": null, "description": "", "name": "sourceHandleId", "required": false, "type": { "name": "string | null" } }, "targetHandleId": { "defaultValue": null, "description": "", "name": "targetHandleId", "required": false, "type": { "name": "string | null" } }, "label": { "defaultValue": null, "description": "", "name": "label", "required": false, "type": { "name": "ReactNode" } }, "labelStyle": { "defaultValue": null, "description": "", "name": "labelStyle", "required": false, "type": { "name": "CSSProperties" } }, "labelShowBg": { "defaultValue": null, "description": "", "name": "labelShowBg", "required": false, "type": { "name": "boolean" } }, "labelBgStyle": { "defaultValue": null, "description": "", "name": "labelBgStyle", "required": false, "type": { "name": "CSSProperties" } }, "labelBgPadding": { "defaultValue": null, "description": "", "name": "labelBgPadding", "required": false, "type": { "name": "[number, number]" } }, "labelBgBorderRadius": { "defaultValue": null, "description": "", "name": "labelBgBorderRadius", "required": false, "type": { "name": "number" } }, "markerStart": { "defaultValue": null, "description": "", "name": "markerStart", "required": false, "type": { "name": "string" } }, "markerEnd": { "defaultValue": null, "description": "", "name": "markerEnd", "required": false, "type": { "name": "string" } }, "pathOptions": { "defaultValue": null, "description": "", "name": "pathOptions", "required": false, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/edges/Edges.tsx#AssociationEdge"] = { docgenInfo: AssociationEdge.__docgenInfo, name: "AssociationEdge", path: "src/diagram/edges/Edges.tsx#AssociationEdge" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"task\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlzYy1lbXB0eS1FbXB0eS1zdG9yaWVzLjAyODY0NGU1OTRkODlhYjY4MDg1LmhvdC11cGRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCdUU7QUEwQmhEO0FBSzhDO0FBVzNDO0FBQ3dDO0FBR007QUFLbUM7QUFFVjtBQUUxRixNQUFNNkIsVUFBVSxHQUFHO0VBQ3hCQyxVQUFVLEVBQUUsaUJBQTBCO0VBQ3RDQyxzQkFBc0IsRUFBRSw2QkFBc0M7RUFDOURDLHNCQUFzQixFQUFFLDZCQUFzQztFQUM5REMsUUFBUSxFQUFFLGVBQXdCO0VBQ2xDQyxJQUFJLEVBQUUsV0FBb0I7RUFDMUJDLFVBQVUsRUFBRSxpQkFBMEI7RUFDdENDLE9BQU8sRUFBRSxjQUF1QjtFQUNoQ0MsVUFBVSxFQUFFLGlCQUEwQjtFQUN0Q0MsY0FBYyxFQUFFLHFCQUE4QjtFQUM5Q0MsT0FBTyxFQUFFLGNBQXVCO0VBQ2hDQyxLQUFLLEVBQUUsWUFBcUI7RUFDNUJDLElBQUksRUFBRTtDQUVQO0FBRU0sTUFBTUMsVUFBVSxHQUFHO0VBQ3hCQyxZQUFZLEVBQUUsbUJBQTRCO0VBQzFDQyxXQUFXLEVBQUU7Q0FDZDtBQU1NLElBQUtDLGtCQVFYO0FBUkQsV0FBWUEsa0JBQWtCO0VBQzVCQSxrQkFBQSxpQ0FBNkI7RUFDN0JBLGtCQUFBLG1EQUErQztFQUMvQ0Esa0JBQUEsdURBQW1EO0VBQ25EQSxrQkFBQSwyQkFBdUI7RUFDdkJBLGtCQUFBLGlCQUFhO0VBQ2JBLGtCQUFBLHVDQUFtQztFQUNuQ0Esa0JBQUEsaUNBQTZCO0FBQy9CLENBQUMsRUFSV0Esa0JBQWtCLEtBQWxCQSxrQkFBa0I7QUFVdkIsTUFBTUMsb0JBQW9CLEdBQStDLElBQUlDLEdBQUcsQ0FBQyxDQUN0RixDQUNFbEIsVUFBVSxDQUFDQyxVQUFVLEVBQ3JCLElBQUlpQixHQUFHLENBQWtDLENBQ3ZDLENBQ0VMLFVBQVUsQ0FBQ0MsWUFBWSxFQUN2QixJ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LElBQUksQ0FBQzVTLG1FQUFrQixDQUFDa1QsU0FBUyxDQUFDO0lBQzFDO0lBRUEsT0FBT2pELEtBQUs7RUFDZCxDQUFDLEVBQUUsQ0FBQzBDLFFBQVEsQ0FBQyxDQUFDO0FBQ2hCO0FBRU0sU0FBVXhELG9CQUFvQkEsQ0FBQWhNLE1BQUEsRUFBMEM7RUFBQSxJQUF6QztJQUFFNkY7RUFBUSxDQUErQixHQUFBN0YsTUFBQTtFQUM1RSxPQUNFNUIsc0RBQUE7SUFDRW1GLEtBQUssRUFBRTtNQUNMeU0sUUFBUSxFQUFFLE9BQU87TUFDakJDLFNBQVMsRUFBRSxNQUFNO01BQ2pCQyxZQUFZLEVBQUUsS0FBSztNQUNuQkMsT0FBTyxFQUFFLEtBQUs7TUFDZEMsZUFBZSxFQUFFLGtCQUFrQjtNQUNuQ0MsTUFBTSxFQUFFLDJCQUEyQjtNQUNuQ0MsU0FBUyxFQUFFLGdDQUFnQztNQUMzQ0MsY0FBYyxFQUFFLFdBQVc7TUFDM0JDLFNBQVMsRUFBRSxRQUFRO01BQ25CM1IsS0FBSyxFQUFFLG1CQUFtQjtNQUMxQjRSLFVBQVUsRUFBRTtLQUNiO0lBQUE1SyxRQUFBLEVBRUFBO0VBQVEsRUFDTDtBQUVWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGtpZS10b29scy9icG1uLWVkaXRvci8uL3NyYy9kaWFncmFtL0JwbW5EaWFncmFtRG9tYWluLnRzeCIsIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4vc3JjL2RpYWdyYW0vZWRnZXMvRWRnZXMudHN4Iiwid2VicGFjazovL0BraWUtdG9vbHMvYnBtbi1lZGl0b3IvLi9zcmMvZGlhZ3JhbS9ub2Rlcy9Ob2Rlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge1xuICBDb250YWlubWVudE1hcCxcbiAgQ29udGFpbm1lbnRNb2RlLFxuICBHcmFwaFN0cnVjdHVyZSxcbn0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvZ3JhcGgvZ3JhcGhTdHJ1Y3R1cmVcIjtcbmltcG9ydCB7XG4gIEJQTU4yMF9fdEludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gIEJQTU4yMF9fdExhbmUsXG4gIEJQTU4yMF9fdFByb2Nlc3MsXG4gIEJQTU5ESV9fQlBNTkVkZ2UsXG4gIEJQTU5ESV9fQlBNTlNoYXBlLFxufSBmcm9tIFwiQGtpZS10b29scy9icG1uLW1hcnNoYWxsZXIvZGlzdC9zY2hlbWFzL2JwbW4tMl8wL3RzLWdlbi90eXBlc1wiO1xuaW1wb3J0IHtcbiAgWHlGbG93UmVhY3RLaWVEaWFncmFtRWRnZURhdGEsXG4gIFh5Rmxvd1JlYWN0S2llRGlhZ3JhbU5vZGVEYXRhLFxufSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9zdG9yZS9TdGF0ZVwiO1xuaW1wb3J0IHsgTm9ybWFsaXplZCB9IGZyb20gXCIuLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHtcbiAgRGF0YU9iamVjdE5vZGUsXG4gIEVuZEV2ZW50Tm9kZSxcbiAgR2F0ZXdheU5vZGUsXG4gIEdyb3VwTm9kZSxcbiAgSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGUsXG4gIEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlLFxuICBMYW5lTm9kZSxcbiAgU3RhcnRFdmVudE5vZGUsXG4gIFN1YlByb2Nlc3NOb2RlLFxuICBUYXNrTm9kZSxcbiAgVGV4dEFubm90YXRpb25Ob2RlLFxuICBVbmtub3duTm9kZSxcbn0gZnJvbSBcIi4vbm9kZXMvTm9kZXNcIjtcbmltcG9ydCB7XG4gIENvbm5lY3Rpb25MaW5lRWRnZU1hcHBpbmcsXG4gIENvbm5lY3Rpb25MaW5lTm9kZU1hcHBpbmcsXG59IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L2VkZ2VzL0Nvbm5lY3Rpb25MaW5lXCI7XG5pbXBvcnQgeyBTZXF1ZW5jZUZsb3dQYXRoLCBBc3NvY2lhdGlvblBhdGggfSBmcm9tIFwiLi9lZGdlcy9FZGdlU3Znc1wiO1xuaW1wb3J0IHtcbiAgU3RhcnRFdmVudE5vZGVTdmcsXG4gIEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnLFxuICBJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZVN2ZyxcbiAgRW5kRXZlbnROb2RlU3ZnLFxuICBUYXNrTm9kZVN2ZyxcbiAgU3ViUHJvY2Vzc05vZGVTdmcsXG4gIEdhdGV3YXlOb2RlU3ZnLFxuICBUZXh0QW5ub3RhdGlvbk5vZGVTdmcsXG4gIExhbmVOb2RlU3ZnLFxufSBmcm9tIFwiLi9ub2Rlcy9Ob2RlU3Znc1wiO1xuaW1wb3J0IHsgU2VxdWVuY2VGbG93RWRnZSwgQXNzb2NpYXRpb25FZGdlIH0gZnJvbSBcIi4vZWRnZXMvRWRnZXNcIjtcbmltcG9ydCB7IFVucGFja2VkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvdHNFeHQvdHNFeHRcIjtcbmltcG9ydCB7IEVsZW1lbnRFeGNsdXNpb24sIEVsZW1lbnRGaWx0ZXIgfSBmcm9tIFwiQGtpZS10b29scy94bWwtcGFyc2VyLXRzL2Rpc3QvZWxlbWVudEZpbHRlclwiO1xuaW1wb3J0IHsgc3dpdGNoRXhwcmVzc2lvbiB9IGZyb20gXCJAa2llLXRvb2xzLWNvcmUvc3dpdGNoLWV4cHJlc3Npb24tdHNcIjtcbmltcG9ydCB7XG4gIE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxFZGdlTWFwcGluZyxcbiAgT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE5vZGVNYXBwaW5nLFxufSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9PdXRnb2luZ1N0dWZmTm9kZVBhbmVsXCI7XG5pbXBvcnQgeyBDT05UQUlORVJfTk9ERVNfREVTSVJBQkxFX1BBRERJTkcgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9tYXRocy9EY01hdGhzXCI7XG5pbXBvcnQgeyBOb2RlU2l6ZXMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9Ob2RlU2l6ZXNcIjtcbmltcG9ydCB7IFNuYXBHcmlkLCBzbmFwUG9pbnQgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9zbmFwZ3JpZC9TbmFwR3JpZFwiO1xuXG5leHBvcnQgY29uc3QgTk9ERV9UWVBFUyA9IHtcbiAgc3RhcnRFdmVudDogXCJub2RlX3N0YXJ0RXZlbnRcIiBhcyBjb25zdCxcbiAgaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudDogXCJub2RlX2ludGVybWVkaWF0ZUNhdGNoRXZlbnRcIiBhcyBjb25zdCxcbiAgaW50ZXJtZWRpYXRlVGhyb3dFdmVudDogXCJub2RlX2ludGVybWVkaWF0ZVRocm93RXZlbnRcIiBhcyBjb25zdCxcbiAgZW5kRXZlbnQ6IFwibm9kZV9lbmRFdmVudFwiIGFzIGNvbnN0LFxuICB0YXNrOiBcIm5vZGVfdGFza1wiIGFzIGNvbnN0LFxuICBzdWJQcm9jZXNzOiBcIm5vZGVfc3ViUHJvY2Vzc1wiIGFzIGNvbnN0LFxuICBnYXRld2F5OiBcIm5vZGVfZ2F0ZXdheVwiIGFzIGNvbnN0LFxuICBkYXRhT2JqZWN0OiBcIm5vZGVfZGF0YU9iamVjdFwiIGFzIGNvbnN0LFxuICB0ZXh0QW5ub3RhdGlvbjogXCJub2RlX3RleHRBbm5vdGF0aW9uXCIgYXMgY29uc3QsXG4gIHVua25vd246IFwibm9kZV91bmtub3duXCIgYXMgY29uc3QsXG4gIGdyb3VwOiBcIm5vZGVfZ3JvdXBcIiBhcyBjb25zdCxcbiAgbGFuZTogXCJub2RlX2xhbmVcIiBhcyBjb25zdCxcbiAgLy8gY3VzdG9tOiBcIm5vZGVfY3VzdG9tXCIgYXMgY29uc3QsXG59O1xuXG5leHBvcnQgY29uc3QgRURHRV9UWVBFUyA9IHtcbiAgc2VxdWVuY2VGbG93OiBcImVkZ2Vfc2VxdWVuY2VGbG93XCIgYXMgY29uc3QsXG4gIGFzc29jaWF0aW9uOiBcImVkZ2VfYXNzb2NpYXRpb25cIiBhcyBjb25zdCxcbn07XG5cbmV4cG9ydCB0eXBlIFZhbHVlczxUPiA9IFRba2V5b2YgVF07XG5leHBvcnQgdHlwZSBCcG1uTm9kZVR5cGUgPSBWYWx1ZXM8dHlwZW9mIE5PREVfVFlQRVM+O1xuZXhwb3J0IHR5cGUgQnBtbkVkZ2VUeXBlID0gVmFsdWVzPHR5cGVvZiBFREdFX1RZUEVTPjtcblxuZXhwb3J0IGVudW0gQWN0aXZpdHlOb2RlTWFya2VyIHtcbiAgQ29tcGVuc2F0aW9uID0gXCJDb21wZW5zYXRpb25cIixcbiAgTXVsdGlJbnN0YW5jZVBhcmFsbGVsID0gXCJNdWx0aUluc3RhbmNlUGFyYWxsZWxcIixcbiAgTXVsdGlJbnN0YW5jZVNlcXVlbnRpYWwgPSBcIk11bHRpSW5zdGFuY2VTZXF1ZW50aWFsXCIsXG4gIENvbGxhcHNlZCA9IFwiQ29sbGFwc2VkXCIsXG4gIExvb3AgPSBcIkxvb3BcIixcbiAgQWRIb2NTdWJQcm9jZXNzID0gXCJBZEhvY1N1YlByb2Nlc3NcIixcbiAgQnVzaW5lc3NSdWxlID0gXCJCdXNpbmVzc1J1bGVcIlxufVxuXG5leHBvcnQgY29uc3QgQlBNTl9HUkFQSF9TVFJVQ1RVUkU6IEdyYXBoU3RydWN0dXJlPEJwbW5Ob2RlVHlwZSwgQnBtbkVkZ2VUeXBlPiA9IG5ldyBNYXAoW1xuICBbXG4gICAgTk9ERV9UWVBFUy5zdGFydEV2ZW50LFxuICAgIG5ldyBNYXA8QnBtbkVkZ2VUeXBlLCBTZXQ8QnBtbk5vZGVUeXBlPj4oW1xuICAgICAgW1xuICAgICAgICBFREdFX1RZUEVTLnNlcXVlbmNlRmxvdyxcbiAgICAgICAgbmV3IFNldChbXG4gICAgICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgICAgIE5PREVfVFlQRVMuc3ViUHJvY2VzcyxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgICAgICAgXSksXG4gICAgICBdLFxuICAgICAgW0VER0VfVFlQRVMuYXNzb2NpYXRpb24sIG5ldyBTZXQoW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dKV0sXG4gICAgXSksXG4gIF0sXG4gIFtcbiAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgbmV3IE1hcDxCcG1uRWRnZVR5cGUsIFNldDxCcG1uTm9kZVR5cGU+PihbXG4gICAgICBbXG4gICAgICAgIEVER0VfVFlQRVMuc2VxdWVuY2VGbG93LFxuICAgICAgICBuZXcgU2V0KFtcbiAgICAgICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICAgICAgTk9ERV9UWVBFUy5zdWJQcm9jZXNzLFxuICAgICAgICAgIE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuZW5kRXZlbnQsXG4gICAgICAgIF0pLFxuICAgICAgXSxcbiAgICAgIFtFREdFX1RZUEVTLmFzc29jaWF0aW9uLCBuZXcgU2V0KFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXSldLFxuICAgIF0pLFxuICBdLFxuICBbXG4gICAgTk9ERV9UWVBFUy5zdWJQcm9jZXNzLFxuICAgIG5ldyBNYXA8QnBtbkVkZ2VUeXBlLCBTZXQ8QnBtbk5vZGVUeXBlPj4oW1xuICAgICAgW1xuICAgICAgICBFREdFX1RZUEVTLnNlcXVlbmNlRmxvdyxcbiAgICAgICAgbmV3IFNldChbXG4gICAgICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgICAgIE5PREVfVFlQRVMuc3ViUHJvY2VzcyxcbiAgICAgICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAgICAgICBdKSxcbiAgICAgIF0sXG4gICAgICBbRURHRV9UWVBFUy5hc3NvY2lhdGlvbiwgbmV3IFNldChbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0pXSxcbiAgICBdKSxcbiAgXSxcbiAgW1xuICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgICBuZXcgTWFwPEJwbW5FZGdlVHlwZSwgU2V0PEJwbW5Ob2RlVHlwZT4+KFtcbiAgICAgIFtcbiAgICAgICAgRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3csXG4gICAgICAgIG5ldyBTZXQoW1xuICAgICAgICAgIE5PREVfVFlQRVMudGFzayxcbiAgICAgICAgICBOT0RFX1RZUEVTLnN1YlByb2Nlc3MsXG4gICAgICAgICAgTk9ERV9UWVBFUy5nYXRld2F5LFxuICAgICAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5lbmRFdmVudCxcbiAgICAgICAgXSksXG4gICAgICBdLFxuICAgICAgW0VER0VfVFlQRVMuYXNzb2NpYXRpb24sIG5ldyBTZXQoW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dKV0sXG4gICAgXSksXG4gIF0sXG4gIFtcbiAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgbmV3IE1hcDxCcG1uRWRnZVR5cGUsIFNldDxCcG1uTm9kZVR5cGU+PihbXG4gICAgICBbXG4gICAgICAgIEVER0VfVFlQRVMuc2VxdWVuY2VGbG93LFxuICAgICAgICBuZXcgU2V0KFtcbiAgICAgICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICAgICAgTk9ERV9UWVBFUy5zdWJQcm9jZXNzLFxuICAgICAgICAgIE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuZW5kRXZlbnQsXG4gICAgICAgIF0pLFxuICAgICAgXSxcbiAgICAgIFtFREdFX1RZUEVTLmFzc29jaWF0aW9uLCBuZXcgU2V0KFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXSldLFxuICAgIF0pLFxuICBdLFxuICBbXG4gICAgTk9ERV9UWVBFUy5nYXRld2F5LFxuICAgIG5ldyBNYXA8QnBtbkVkZ2VUeXBlLCBTZXQ8QnBtbk5vZGVUeXBlPj4oW1xuICAgICAgW1xuICAgICAgICBFREdFX1RZUEVTLnNlcXVlbmNlRmxvdyxcbiAgICAgICAgbmV3IFNldChbXG4gICAgICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgICAgIE5PREVfVFlQRVMuc3ViUHJvY2VzcyxcbiAgICAgICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAgICAgICBdKSxcbiAgICAgIF0sXG4gICAgICBbRURHRV9UWVBFUy5hc3NvY2lhdGlvbiwgbmV3IFNldChbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0pXSxcbiAgICBdKSxcbiAgXSxcbiAgW1xuICAgIE5PREVfVFlQRVMuZW5kRXZlbnQsXG4gICAgbmV3IE1hcDxCcG1uRWRnZVR5cGUsIFNldDxCcG1uTm9kZVR5cGU+PihbW0VER0VfVFlQRVMuYXNzb2NpYXRpb24sIG5ldyBTZXQoW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dKV1dKSxcbiAgXSxcbiAgW1xuICAgIE5PREVfVFlQRVMuZGF0YU9iamVjdCxcbiAgICBuZXcgTWFwPEJwbW5FZGdlVHlwZSwgU2V0PEJwbW5Ob2RlVHlwZT4+KFtbRURHRV9UWVBFUy5hc3NvY2lhdGlvbiwgbmV3IFNldChbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0pXV0pLFxuICBdLFxuICBbXG4gICAgTk9ERV9UWVBFUy5ncm91cCxcbiAgICBuZXcgTWFwPEJwbW5FZGdlVHlwZSwgU2V0PEJwbW5Ob2RlVHlwZT4+KFtbRURHRV9UWVBFUy5hc3NvY2lhdGlvbiwgbmV3IFNldChbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0pXV0pLFxuICBdLFxuICBbXG4gICAgTk9ERV9UWVBFUy5sYW5lLFxuICAgIG5ldyBNYXA8QnBtbkVkZ2VUeXBlLCBTZXQ8QnBtbk5vZGVUeXBlPj4oW1tFREdFX1RZUEVTLmFzc29jaWF0aW9uLCBuZXcgU2V0KFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXSldXSksXG4gIF0sXG4gIFtcbiAgICBOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uLFxuICAgIG5ldyBNYXA8QnBtbkVkZ2VUeXBlLCBTZXQ8QnBtbk5vZGVUeXBlPj4oW1xuICAgICAgW1xuICAgICAgICBFREdFX1RZUEVTLmFzc29jaWF0aW9uLFxuICAgICAgICBuZXcgU2V0KFtcbiAgICAgICAgICBOT0RFX1RZUEVTLnN0YXJ0RXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5nYXRld2F5LFxuICAgICAgICAgIE5PREVfVFlQRVMuZW5kRXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5kYXRhT2JqZWN0LFxuICAgICAgICAgIE5PREVfVFlQRVMubGFuZSxcbiAgICAgICAgXSksXG4gICAgICBdLFxuICAgIF0pLFxuICBdLFxuXSk7XG5cbmV4cG9ydCBjb25zdCBCUE1OX0NPTlRBSU5NRU5UX01BUDogQ29udGFpbm1lbnRNYXA8QnBtbk5vZGVUeXBlPiA9IG5ldyBNYXA8XG4gIEJwbW5Ob2RlVHlwZSxcbiAgTWFwPENvbnRhaW5tZW50TW9kZSwgU2V0PEJwbW5Ob2RlVHlwZT4+XG4+KFtcbiAgW1xuICAgIE5PREVfVFlQRVMubGFuZSxcbiAgICBuZXcgTWFwKFtcbiAgICAgIFtcbiAgICAgICAgQ29udGFpbm1lbnRNb2RlLklOU0lERSxcbiAgICAgICAgbmV3IFNldChbXG4gICAgICAgICAgTk9ERV9UWVBFUy5zdGFydEV2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMudGFzayxcbiAgICAgICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgICAgICAgICBOT0RFX1RZUEVTLnN1YlByb2Nlc3MsXG4gICAgICAgICAgTk9ERV9UWVBFUy5lbmRFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmRhdGFPYmplY3QsXG4gICAgICAgICAgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbixcbiAgICAgICAgICBOT0RFX1RZUEVTLmdyb3VwLFxuICAgICAgICBdKSxcbiAgICAgIF0sXG4gICAgXSksXG4gIF0sXG4gIFtcbiAgICBOT0RFX1RZUEVTLnN1YlByb2Nlc3MsXG4gICAgbmV3IE1hcChbXG4gICAgICBbXG4gICAgICAgIENvbnRhaW5tZW50TW9kZS5JTlNJREUsXG4gICAgICAgIG5ldyBTZXQoW1xuICAgICAgICAgIE5PREVfVFlQRVMuc3RhcnRFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICAgICAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICAgICAgTk9ERV9UWVBFUy5lbmRFdmVudCxcbiAgICAgICAgICBOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uLFxuICAgICAgICAgIE5PREVfVFlQRVMuZ3JvdXAsXG4gICAgICAgIF0pLFxuICAgICAgXSxcbiAgICAgIFtDb250YWlubWVudE1vZGUuQk9SREVSLCBuZXcgU2V0KFtOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnRdKV0sXG4gICAgXSksXG4gIF0sXG4gIFtOT0RFX1RZUEVTLnRhc2ssIG5ldyBNYXAoW1tDb250YWlubWVudE1vZGUuQk9SREVSLCBuZXcgU2V0KFtOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnRdKV1dKV0sXG5dKTtcblxuZXhwb3J0IGNvbnN0IENPTk5FQ1RJT05fTElORV9FREdFX0NPTVBPTkVOVFNfTUFQUElORzogQ29ubmVjdGlvbkxpbmVFZGdlTWFwcGluZzxCcG1uRWRnZVR5cGU+ID0ge1xuICBbRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3ddOiBTZXF1ZW5jZUZsb3dQYXRoLFxuICBbRURHRV9UWVBFUy5hc3NvY2lhdGlvbl06IEFzc29jaWF0aW9uUGF0aCxcbn07XG5cbmV4cG9ydCBjb25zdCBDT05ORUNUSU9OX0xJTkVfTk9ERV9DT01QT05FTlRfTUFQUElORzogQ29ubmVjdGlvbkxpbmVOb2RlTWFwcGluZzxCcG1uTm9kZVR5cGU+ID0ge1xuICBbTk9ERV9UWVBFUy5zdGFydEV2ZW50XTogU3RhcnRFdmVudE5vZGVTdmcsXG4gIFtOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnRdOiBJbnRlcm1lZGlhdGVDYXRjaEV2ZW50Tm9kZVN2ZyxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudF06IEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlU3ZnLFxuICBbTk9ERV9UWVBFUy5lbmRFdmVudF06IEVuZEV2ZW50Tm9kZVN2ZyxcbiAgW05PREVfVFlQRVMudGFza106IFRhc2tOb2RlU3ZnLFxuICBbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXTogU3ViUHJvY2Vzc05vZGVTdmcsXG4gIFtOT0RFX1RZUEVTLmdhdGV3YXldOiBHYXRld2F5Tm9kZVN2ZyxcbiAgW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dOiBUZXh0QW5ub3RhdGlvbk5vZGVTdmcsXG4gIFtOT0RFX1RZUEVTLmxhbmVdOiBMYW5lTm9kZVN2ZyxcbiAgLy8gSWdub3JlXG4gIG5vZGVfZGF0YU9iamVjdDogdW5kZWZpbmVkIGFzIGFueSxcbiAgbm9kZV91bmtub3duOiB1bmRlZmluZWQgYXMgYW55LFxuICBub2RlX2dyb3VwOiB1bmRlZmluZWQgYXMgYW55LFxufTtcblxuLy8gRklYTUU6IFRpYWdvOiBQcm9wZXJseSB0eXBlIFJlYWN0IGNvbXBvbmVudFxuZXhwb3J0IGNvbnN0IFhZX0ZMT1dfTk9ERV9UWVBFUzogUmVjb3JkPEJwbW5Ob2RlVHlwZSwgUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+PiA9IHtcbiAgW05PREVfVFlQRVMuc3RhcnRFdmVudF06IFN0YXJ0RXZlbnROb2RlLFxuICBbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50XTogSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGUsXG4gIFtOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnRdOiBJbnRlcm1lZGlhdGVUaHJvd0V2ZW50Tm9kZSxcbiAgW05PREVfVFlQRVMuZW5kRXZlbnRdOiBFbmRFdmVudE5vZGUsXG4gIFtOT0RFX1RZUEVTLnRhc2tdOiBUYXNrTm9kZSxcbiAgW05PREVfVFlQRVMuc3ViUHJvY2Vzc106IFN1YlByb2Nlc3NOb2RlLFxuICBbTk9ERV9UWVBFUy5nYXRld2F5XTogR2F0ZXdheU5vZGUsXG4gIFtOT0RFX1RZUEVTLmdyb3VwXTogR3JvdXBOb2RlLFxuICBbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl06IFRleHRBbm5vdGF0aW9uTm9kZSxcbiAgW05PREVfVFlQRVMuZGF0YU9iamVjdF06IERhdGFPYmplY3ROb2RlLFxuICBbTk9ERV9UWVBFUy5sYW5lXTogTGFuZU5vZGUsXG4gIFtOT0RFX1RZUEVTLnVua25vd25dOiBVbmtub3duTm9kZSxcbn07XG5cbi8vIEZJWE1FOiBUaWFnbzogUHJvcGVybHkgdHlwZSBSZWFjdCBjb21wb25lbnRcbmV4cG9ydCBjb25zdCBYWV9GTE9XX0VER0VfVFlQRVM6IFJlY29yZDxCcG1uRWRnZVR5cGUsIFJlYWN0LkNvbXBvbmVudFR5cGU8YW55Pj4gPSB7XG4gIFtFREdFX1RZUEVTLnNlcXVlbmNlRmxvd106IFNlcXVlbmNlRmxvd0VkZ2UsXG4gIFtFREdFX1RZUEVTLmFzc29jaWF0aW9uXTogQXNzb2NpYXRpb25FZGdlLFxufTtcblxuZXhwb3J0IGludGVyZmFjZSBCcG1uRGlhZ3JhbU5vZGVEYXRhPFQgZXh0ZW5kcyBCcG1uTm9kZUVsZW1lbnQgPSBCcG1uTm9kZUVsZW1lbnQ+XG4gIGV4dGVuZHMgWHlGbG93UmVhY3RLaWVEaWFncmFtTm9kZURhdGE8QnBtbk5vZGVUeXBlLCBCcG1uRGlhZ3JhbU5vZGVEYXRhPiB7XG4gIGJwbW5FbGVtZW50OiBUO1xuICBzaGFwZTogTm9ybWFsaXplZDxCUE1ORElfX0JQTU5TaGFwZT47XG4gIHNoYXBlSW5kZXg6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCcG1uRGlhZ3JhbUVkZ2VEYXRhIGV4dGVuZHMgWHlGbG93UmVhY3RLaWVEaWFncmFtRWRnZURhdGEge1xuICBicG1uRWRnZTogTm9ybWFsaXplZDxCUE1ORElfX0JQTU5FZGdlPiB8IHVuZGVmaW5lZDtcbiAgYnBtbkVkZ2VJbmRleDogbnVtYmVyO1xuICBicG1uRWxlbWVudDogQnBtbkVkZ2VFbGVtZW50O1xuICBicG1uU2hhcGVTb3VyY2U6IE5vcm1hbGl6ZWQ8QlBNTkRJX19CUE1OU2hhcGU+IHwgdW5kZWZpbmVkO1xuICBicG1uU2hhcGVUYXJnZXQ6IE5vcm1hbGl6ZWQ8QlBNTkRJX19CUE1OU2hhcGU+IHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY29uc3QgQlBNTl9PVVRHT0lOR19TVFJVQ1RVUkUgPSB7XG4gIFtOT0RFX1RZUEVTLnN0YXJ0RXZlbnRdOiB7XG4gICAgbm9kZXM6IFtcbiAgICAgIE5PREVfVFlQRVMudGFzayxcbiAgICAgIE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgICAgIE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudCxcbiAgICAgIE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gICAgXSxcbiAgICBlZGdlczogW0VER0VfVFlQRVMuc2VxdWVuY2VGbG93LCBFREdFX1RZUEVTLmFzc29jaWF0aW9uXSxcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF06IHtcbiAgICBub2RlczogW1xuICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgTk9ERV9UWVBFUy5nYXRld2F5LFxuICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgTk9ERV9UWVBFUy5lbmRFdmVudCxcbiAgICAgIE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gICAgXSxcbiAgICBlZGdlczogW0VER0VfVFlQRVMuc2VxdWVuY2VGbG93LCBFREdFX1RZUEVTLmFzc29jaWF0aW9uXSxcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudF06IHtcbiAgICBub2RlczogW1xuICAgICAgTk9ERV9UWVBFUy50YXNrLFxuICAgICAgTk9ERV9UWVBFUy5nYXRld2F5LFxuICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICAgICAgTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50LFxuICAgICAgTk9ERV9UWVBFUy5lbmRFdmVudCxcbiAgICAgIE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gICAgXSxcbiAgICBlZGdlczogW0VER0VfVFlQRVMuc2VxdWVuY2VGbG93LCBFREdFX1RZUEVTLmFzc29jaWF0aW9uXSxcbiAgfSxcbiAgW05PREVfVFlQRVMuZW5kRXZlbnRdOiB7XG4gICAgbm9kZXM6IFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXSxcbiAgICBlZGdlczogW0VER0VfVFlQRVMuYXNzb2NpYXRpb25dLFxuICB9LFxuICBbTk9ERV9UWVBFUy50YXNrXToge1xuICAgIG5vZGVzOiBbXG4gICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAgICAgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbixcbiAgICBdLFxuICAgIGVkZ2VzOiBbRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3csIEVER0VfVFlQRVMuYXNzb2NpYXRpb25dLFxuICB9LFxuICBbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXToge1xuICAgIG5vZGVzOiBbXG4gICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAgICAgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbixcbiAgICBdLFxuICAgIGVkZ2VzOiBbRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3csIEVER0VfVFlQRVMuYXNzb2NpYXRpb25dLFxuICB9LFxuICBbTk9ERV9UWVBFUy5nYXRld2F5XToge1xuICAgIG5vZGVzOiBbXG4gICAgICBOT0RFX1RZUEVTLnRhc2ssXG4gICAgICBOT0RFX1RZUEVTLmdhdGV3YXksXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZUNhdGNoRXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gICAgICBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAgICAgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbixcbiAgICBdLFxuICAgIGVkZ2VzOiBbRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3csIEVER0VfVFlQRVMuYXNzb2NpYXRpb25dLFxuICB9LFxuICBbTk9ERV9UWVBFUy5kYXRhT2JqZWN0XToge1xuICAgIG5vZGVzOiBbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0sXG4gICAgZWRnZXM6IFtFREdFX1RZUEVTLmFzc29jaWF0aW9uXSxcbiAgfSxcbiAgW05PREVfVFlQRVMuZ3JvdXBdOiB7XG4gICAgbm9kZXM6IFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXSxcbiAgICBlZGdlczogW0VER0VfVFlQRVMuYXNzb2NpYXRpb25dLFxuICB9LFxuICBbTk9ERV9UWVBFUy5sYW5lXToge1xuICAgIG5vZGVzOiBbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl0sXG4gICAgZWRnZXM6IFtFREdFX1RZUEVTLmFzc29jaWF0aW9uXSxcbiAgfSxcbiAgW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dOiB7XG4gICAgbm9kZXM6IFtdLFxuICAgIGVkZ2VzOiBbRURHRV9UWVBFUy5hc3NvY2lhdGlvbl0sXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgYnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmc6IE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxFZGdlTWFwcGluZzxCcG1uRWRnZVR5cGU+ID0ge1xuICBbRURHRV9UWVBFUy5zZXF1ZW5jZUZsb3ddOiB7XG4gICAgYWN0aW9uVGl0bGU6IFwiQWRkIFNlcXVlbmNlIEZsb3dcIixcbiAgICBpY29uOiAoeyB2aWV3Ym94U2l6ZSB9KSA9PiA8U2VxdWVuY2VGbG93UGF0aCBkPXtgTTIsJHt2aWV3Ym94U2l6ZSAtIDJ9IEwke3ZpZXdib3hTaXplIC0gMn0sMGB9IC8+LFxuICB9LFxuICBbRURHRV9UWVBFUy5hc3NvY2lhdGlvbl06IHtcbiAgICBhY3Rpb25UaXRsZTogXCJBZGQgQXNzb2NpYXRpb25cIixcbiAgICBpY29uOiAoeyB2aWV3Ym94U2l6ZSB9KSA9PiA8QXNzb2NpYXRpb25QYXRoIGQ9e2BNMiwke3ZpZXdib3hTaXplIC0gMn0gTCR7dmlld2JveFNpemV9LDBgfSBzdHJva2VXaWR0aD17Mn0gLz4sXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgYnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmc6IE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxOb2RlTWFwcGluZzxcbiAgRXhjbHVkZTxcbiAgICBCcG1uTm9kZVR5cGUsXG4gICAgdHlwZW9mIE5PREVfVFlQRVMuZGF0YU9iamVjdCB8IHR5cGVvZiBOT0RFX1RZUEVTLnVua25vd24gfCB0eXBlb2YgTk9ERV9UWVBFUy5ncm91cCB8IHR5cGVvZiBOT0RFX1RZUEVTLmxhbmVcbiAgPlxuPiA9IHtcbiAgW05PREVfVFlQRVMuc3RhcnRFdmVudF06IHtcbiAgICBhY3Rpb25UaXRsZTogXCJBZGQgU3RhcnQgRXZlbnRcIixcbiAgICBpY29uOiAobm9kZVN2Z1Byb3BzKSA9PiA8U3RhcnRFdmVudE5vZGVTdmcgey4uLm5vZGVTdmdQcm9wc30gdmFyaWFudD17XCJub25lXCJ9IC8+LFxuICB9LFxuICBbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50XToge1xuICAgIGFjdGlvblRpdGxlOiBcIkFkZCBJbnRlcm1lZGlhdGUgQ2F0Y2ggRXZlbnRcIixcbiAgICBpY29uOiAobm9kZVN2Z1Byb3BzKSA9PiA8SW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGVTdmcgey4uLm5vZGVTdmdQcm9wc30gdmFyaWFudD17XCJub25lXCJ9IC8+LFxuICB9LFxuICBbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVUaHJvd0V2ZW50XToge1xuICAgIGFjdGlvblRpdGxlOiBcIkFkZCBJbnRlcm1lZGlhdGUgVGhyb3cgRXZlbnRcIixcbiAgICBpY29uOiAobm9kZVN2Z1Byb3BzKSA9PiA8SW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGVTdmcgey4uLm5vZGVTdmdQcm9wc30gdmFyaWFudD17XCJub25lXCJ9IC8+LFxuICB9LFxuICBbTk9ERV9UWVBFUy5lbmRFdmVudF06IHtcbiAgICBhY3Rpb25UaXRsZTogXCJBZGQgRW5kIEV2ZW50XCIsXG4gICAgaWNvbjogKG5vZGVTdmdQcm9wcykgPT4gPEVuZEV2ZW50Tm9kZVN2ZyB7Li4ubm9kZVN2Z1Byb3BzfSB2YXJpYW50PXtcIm5vbmVcIn0gLz4sXG4gIH0sXG4gIFtOT0RFX1RZUEVTLnRhc2tdOiB7XG4gICAgYWN0aW9uVGl0bGU6IFwiQWRkIFRhc2tcIixcbiAgICBpY29uOiAobm9kZVN2Z1Byb3BzKSA9PiA8VGFza05vZGVTdmcgey4uLm5vZGVTdmdQcm9wc30gLz4sXG4gIH0sXG4gIFtOT0RFX1RZUEVTLnN1YlByb2Nlc3NdOiB7XG4gICAgYWN0aW9uVGl0bGU6IFwiQWRkIFN1Yi1wcm9jZXNzXCIsXG4gICAgaWNvbjogKG5vZGVTdmdQcm9wcykgPT4gPFRhc2tOb2RlU3ZnIHsuLi5ub2RlU3ZnUHJvcHN9IG1hcmtlcnM9e1tcIkNhbGxBY3Rpdml0eVBhbGV0dGVJY29uXCJdfSAvPixcbiAgfSxcbiAgW05PREVfVFlQRVMuZ2F0ZXdheV06IHtcbiAgICBhY3Rpb25UaXRsZTogXCJBZGQgR2F0ZXdheVwiLFxuICAgIGljb246IChub2RlU3ZnUHJvcHMpID0+IChcbiAgICAgIDxHYXRld2F5Tm9kZVN2Z1xuICAgICAgICB7Li4ubm9kZVN2Z1Byb3BzfVxuICAgICAgICBoZWlnaHQ9e25vZGVTdmdQcm9wcy53aWR0aH1cbiAgICAgICAgdmFyaWFudD17XCJub25lXCJ9XG4gICAgICAgIHg9e25vZGVTdmdQcm9wcy54fVxuICAgICAgICB5PXtub2RlU3ZnUHJvcHMueSAtIDh9XG4gICAgICAvPlxuICAgICksXG4gIH0sXG4gIFtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXToge1xuICAgIGFjdGlvblRpdGxlOiBcIkFkZCBUZXh0IEFubm90YXRpb25cIixcbiAgICBpY29uOiAobm9kZVN2Z1Byb3BzKSA9PiA8VGV4dEFubm90YXRpb25Ob2RlU3ZnIHsuLi5ub2RlU3ZnUHJvcHN9IC8+LFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IE1JTl9OT0RFX1NJWkVTOiBOb2RlU2l6ZXM8QnBtbk5vZGVUeXBlPiA9IHtcbiAgW05PREVfVFlQRVMuc3RhcnRFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgMTAsIDEwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgMTAsIDEwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgMTAsIDEwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuZW5kRXZlbnRdOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIDEwLCAxMCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLnRhc2tdOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQpO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXTogKHsgc25hcEdyaWQgfSkgPT4ge1xuICAgIGNvbnN0IHNuYXBwZWRNaW5TaXplID0gTUlOX1NJWkVfRk9SX05PREVTKHNuYXBHcmlkKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuZ2F0ZXdheV06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgMTAsIDEwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuZGF0YU9iamVjdF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgTk9ERV9NSU5fV0lEVEggLyAyLCBOT0RFX01JTl9IRUlHSFQgKyAyMCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLmdyb3VwXTogKHsgc25hcEdyaWQgfSkgPT4ge1xuICAgIGNvbnN0IHNuYXBwZWRNaW5TaXplID0gTUlOX1NJWkVfRk9SX05PREVTKFxuICAgICAgc25hcEdyaWQsXG4gICAgICBOT0RFX01JTl9XSURUSCArIENPTlRBSU5FUl9OT0RFU19ERVNJUkFCTEVfUEFERElORyAqIDIsXG4gICAgICBOT0RFX01JTl9IRUlHSFQgKyBDT05UQUlORVJfTk9ERVNfREVTSVJBQkxFX1BBRERJTkcgKiAyXG4gICAgKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIDIwMCwgNjApO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy5sYW5lXTogKHsgc25hcEdyaWQgfSkgPT4ge1xuICAgIGNvbnN0IHNuYXBwZWRNaW5TaXplID0gTUlOX1NJWkVfRk9SX05PREVTKHNuYXBHcmlkKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMudW5rbm93bl06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9OT0RFX1NJWkVTOiBOb2RlU2l6ZXM8QnBtbk5vZGVUeXBlPiA9IHtcbiAgW05PREVfVFlQRVMuc3RhcnRFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgNjAsIDYwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgNjAsIDYwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgNjAsIDYwKTtcbiAgICByZXR1cm4ge1xuICAgICAgXCJAX3dpZHRoXCI6IHNuYXBwZWRNaW5TaXplLndpZHRoLFxuICAgICAgXCJAX2hlaWdodFwiOiBzbmFwcGVkTWluU2l6ZS5oZWlnaHQsXG4gICAgfTtcbiAgfSxcbiAgW05PREVfVFlQRVMuZW5kRXZlbnRdOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIDYwLCA2MCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLnRhc2tdOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIDE4MCwgOTApO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXTogKHsgc25hcEdyaWQgfSkgPT4ge1xuICAgIGNvbnN0IHNuYXBwZWRNaW5TaXplID0gTUlOX1NJWkVfRk9SX05PREVTKHNuYXBHcmlkLCAzNjAsIDE4MCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLmdhdGV3YXldOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIDYwLCA2MCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLmRhdGFPYmplY3RdOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQsIE5PREVfTUlOX1dJRFRIIC8gMiwgTk9ERV9NSU5fSEVJR0hUICsgMjApO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy5ncm91cF06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgTk9ERV9NSU5fV0lEVEggKiAyLCBOT0RFX01JTl9XSURUSCAqIDIpOyAvLyBUaGlzIGlzIG5vdCBhIG1pc3Rha2UsIHdlIHdhbnQgdGhlIEdyb3VwIG5vZGUgdG8gYmUgYSBiaWdnZXIgc3F1YXJlLlxuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbl06ICh7IHNuYXBHcmlkIH0pID0+IHtcbiAgICBjb25zdCBzbmFwcGVkTWluU2l6ZSA9IE1JTl9TSVpFX0ZPUl9OT0RFUyhzbmFwR3JpZCwgMTgwLCAxODApO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxuICBbTk9ERV9UWVBFUy5sYW5lXTogKHsgc25hcEdyaWQgfSkgPT4ge1xuICAgIGNvbnN0IHNuYXBwZWRNaW5TaXplID0gTUlOX1NJWkVfRk9SX05PREVTKHNuYXBHcmlkLCA1NDAsIDI0MCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiQF93aWR0aFwiOiBzbmFwcGVkTWluU2l6ZS53aWR0aCxcbiAgICAgIFwiQF9oZWlnaHRcIjogc25hcHBlZE1pblNpemUuaGVpZ2h0LFxuICAgIH07XG4gIH0sXG4gIFtOT0RFX1RZUEVTLnVua25vd25dOiAoeyBzbmFwR3JpZCB9KSA9PiB7XG4gICAgY29uc3Qgc25hcHBlZE1pblNpemUgPSBNSU5fU0laRV9GT1JfTk9ERVMoc25hcEdyaWQpO1xuICAgIHJldHVybiB7XG4gICAgICBcIkBfd2lkdGhcIjogc25hcHBlZE1pblNpemUud2lkdGgsXG4gICAgICBcIkBfaGVpZ2h0XCI6IHNuYXBwZWRNaW5TaXplLmhlaWdodCxcbiAgICB9O1xuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IE5PREVfTUlOX1dJRFRIID0gMTIwO1xuZXhwb3J0IGNvbnN0IE5PREVfTUlOX0hFSUdIVCA9IDYwO1xuXG5leHBvcnQgY29uc3QgTUlOX1NJWkVfRk9SX05PREVTID0gKGdyaWQ6IFNuYXBHcmlkLCB3aWR0aCA9IE5PREVfTUlOX1dJRFRILCBoZWlnaHQgPSBOT0RFX01JTl9IRUlHSFQpID0+IHtcbiAgY29uc3Qgc25hcHBlZCA9IHNuYXBQb2ludChncmlkLCB7IFwiQF94XCI6IHdpZHRoLCBcIkBfeVwiOiBoZWlnaHQgfSwgXCJjZWlsXCIpO1xuICByZXR1cm4geyB3aWR0aDogc25hcHBlZFtcIkBfeFwiXSwgaGVpZ2h0OiBzbmFwcGVkW1wiQF95XCJdIH07XG59O1xuXG4vLy8vXG5cbmV4cG9ydCB0eXBlIEJwbW5FZGdlRWxlbWVudCA9IE5vcm1hbGl6ZWQ8XG4gIHwgRWxlbWVudEZpbHRlcjxVbnBhY2tlZDxOb25OdWxsYWJsZTxCUE1OMjBfX3RQcm9jZXNzW1wiZmxvd0VsZW1lbnRcIl0+PiwgXCJzZXF1ZW5jZUZsb3dcIj5cbiAgfCBFbGVtZW50RmlsdGVyPFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJhcnRpZmFjdFwiXT4+LCBcImFzc29jaWF0aW9uXCI+XG4+O1xuXG5leHBvcnQgdHlwZSBCcG1uTm9kZUVsZW1lbnQgPSBOb3JtYWxpemVkPFxuICB8IEVsZW1lbnRFeGNsdXNpb248XG4gICAgICBVbnBhY2tlZDxOb25OdWxsYWJsZTxCUE1OMjBfX3RQcm9jZXNzW1wiZmxvd0VsZW1lbnRcIl0+PixcbiAgICAgIHwgXCJzZXF1ZW5jZUZsb3dcIlxuICAgICAgfCBcImNhbGxDaG9yZW9ncmFwaHlcIlxuICAgICAgfCBcImNob3Jlb2dyYXBoeVRhc2tcIlxuICAgICAgfCBcImRhdGFPYmplY3RSZWZlcmVuY2VcIlxuICAgICAgfCBcImRhdGFTdG9yZVJlZmVyZW5jZVwiXG4gICAgICB8IFwiaW1wbGljaXRUaHJvd0V2ZW50XCJcbiAgICAgIHwgXCJtYW51YWxUYXNrXCJcbiAgICAgIHwgXCJyZWNlaXZlVGFza1wiXG4gICAgICB8IFwic2VuZFRhc2tcIlxuICAgICAgfCBcInN1YkNob3Jlb2dyYXBoeVwiXG4gICAgPlxuICB8IEVsZW1lbnRFeGNsdXNpb248VW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190UHJvY2Vzc1tcImFydGlmYWN0XCJdPj4sIFwiYXNzb2NpYXRpb25cIj5cbiAgfCAoQlBNTjIwX190TGFuZSAmIHsgX18kJGVsZW1lbnQ6IFwibGFuZVwiIH0pXG4+O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9kZVR5cGVGcm9tQnBtbkVsZW1lbnQoYnBtbkVsZW1lbnQ6IEJwbW5Ob2RlRWxlbWVudCkge1xuICBpZiAoIWJwbW5FbGVtZW50KSB7XG4gICAgcmV0dXJuIE5PREVfVFlQRVMudW5rbm93bjtcbiAgfVxuXG4gIGNvbnN0IHR5cGUgPSBzd2l0Y2hFeHByZXNzaW9uKGJwbW5FbGVtZW50Ll9fJCRlbGVtZW50LCB7XG4gICAgZGF0YU9iamVjdDogTk9ERV9UWVBFUy5kYXRhT2JqZWN0LFxuICAgIHRhc2s6IE5PREVfVFlQRVMudGFzayxcbiAgICBsYW5lOiBOT0RFX1RZUEVTLmxhbmUsXG4gICAgdGV4dEFubm90YXRpb246IE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gICAgZGVmYXVsdDogdW5kZWZpbmVkLFxuICB9KTtcblxuICByZXR1cm4gdHlwZTtcbn1cblxuZXhwb3J0IHR5cGUgR2F0ZXdheVZhcmlhbnQgPSBFbGVtZW50RmlsdGVyPFxuICBVbnBhY2tlZDxOb25OdWxsYWJsZTxCUE1OMjBfX3RQcm9jZXNzW1wiZmxvd0VsZW1lbnRcIl0+PixcbiAgXCJjb21wbGV4R2F0ZXdheVwiIHwgXCJldmVudEJhc2VkR2F0ZXdheVwiIHwgXCJleGNsdXNpdmVHYXRld2F5XCIgfCBcImluY2x1c2l2ZUdhdGV3YXlcIiB8IFwicGFyYWxsZWxHYXRld2F5XCJcbj5bXCJfXyQkZWxlbWVudFwiXTtcblxuZXhwb3J0IHR5cGUgRXZlbnRWYXJpYW50ID0gRWxlbWVudEZpbHRlcjxcbiAgVW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190SW50ZXJtZWRpYXRlQ2F0Y2hFdmVudFtcImV2ZW50RGVmaW5pdGlvblwiXT4+LFxuICB8IFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCJcbiAgfCBcImNvbXBlbnNhdGVFdmVudERlZmluaXRpb25cIlxuICB8IFwiY29uZGl0aW9uYWxFdmVudERlZmluaXRpb25cIlxuICB8IFwiZXJyb3JFdmVudERlZmluaXRpb25cIlxuICB8IFwiZXNjYWxhdGlvbkV2ZW50RGVmaW5pdGlvblwiXG4gIHwgXCJsaW5rRXZlbnREZWZpbml0aW9uXCJcbiAgfCBcIm1lc3NhZ2VFdmVudERlZmluaXRpb25cIlxuICB8IFwic2lnbmFsRXZlbnREZWZpbml0aW9uXCJcbiAgfCBcInRlcm1pbmF0ZUV2ZW50RGVmaW5pdGlvblwiXG4gIHwgXCJ0aW1lckV2ZW50RGVmaW5pdGlvblwiXG4+W1wiX18kJGVsZW1lbnRcIl07XG5cbmV4cG9ydCB0eXBlIFRhc2tWYXJpYW50ID0gRWxlbWVudEZpbHRlcjxcbiAgVW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190UHJvY2Vzc1tcImZsb3dFbGVtZW50XCJdPj4sXG4gIFwiYnVzaW5lc3NSdWxlVGFza1wiIHwgXCJzY3JpcHRUYXNrXCIgfCBcInNlcnZpY2VUYXNrXCIgfCBcInVzZXJUYXNrXCJcbj5bXCJfXyQkZWxlbWVudFwiXTtcblxuZXhwb3J0IHR5cGUgU3ViUHJvY2Vzc1ZhcmlhbnQgPSBcInRyYW5zYWN0aW9uXCIgfCBcImV2ZW50XCIgfCBcIm11bHRpLWluc3RhbmNlXCIgfCBcIm90aGVyXCI7XG5cbmV4cG9ydCBjb25zdCBlbGVtZW50VG9Ob2RlVHlwZTogUmVjb3JkPE5vbk51bGxhYmxlPEJwbW5Ob2RlRWxlbWVudD5bXCJfXyQkZWxlbWVudFwiXSwgQnBtbk5vZGVUeXBlPiA9IHtcbiAgLy8gbGFuZVxuICBsYW5lOiBOT0RFX1RZUEVTLmxhbmUsXG4gIC8vIGV2ZW50c1xuICBzdGFydEV2ZW50OiBOT0RFX1RZUEVTLnN0YXJ0RXZlbnQsXG4gIGJvdW5kYXJ5RXZlbnQ6IE5PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudDogTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LFxuICBpbnRlcm1lZGlhdGVUaHJvd0V2ZW50OiBOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnQsXG4gIGVuZEV2ZW50OiBOT0RFX1RZUEVTLmVuZEV2ZW50LFxuICAvLyB0YXNrc1xuICBjYWxsQWN0aXZpdHk6IE5PREVfVFlQRVMudGFzayxcbiAgdGFzazogTk9ERV9UWVBFUy50YXNrLFxuICBidXNpbmVzc1J1bGVUYXNrOiBOT0RFX1RZUEVTLnRhc2ssXG4gIHVzZXJUYXNrOiBOT0RFX1RZUEVTLnRhc2ssXG4gIHNjcmlwdFRhc2s6IE5PREVfVFlQRVMudGFzayxcbiAgc2VydmljZVRhc2s6IE5PREVfVFlQRVMudGFzayxcbiAgLy8gc3VicHJvY2Vzc1xuICBzdWJQcm9jZXNzOiBOT0RFX1RZUEVTLnN1YlByb2Nlc3MsXG4gIGFkSG9jU3ViUHJvY2VzczogTk9ERV9UWVBFUy5zdWJQcm9jZXNzLFxuICB0cmFuc2FjdGlvbjogTk9ERV9UWVBFUy5zdWJQcm9jZXNzLFxuICAvLyBnYXRld2F5XG4gIGNvbXBsZXhHYXRld2F5OiBOT0RFX1RZUEVTLmdhdGV3YXksXG4gIGV2ZW50QmFzZWRHYXRld2F5OiBOT0RFX1RZUEVTLmdhdGV3YXksXG4gIGV4Y2x1c2l2ZUdhdGV3YXk6IE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgaW5jbHVzaXZlR2F0ZXdheTogTk9ERV9UWVBFUy5nYXRld2F5LFxuICBwYXJhbGxlbEdhdGV3YXk6IE5PREVfVFlQRVMuZ2F0ZXdheSxcbiAgLy8gbWlzY1xuICBkYXRhT2JqZWN0OiBOT0RFX1RZUEVTLmRhdGFPYmplY3QsXG4gIC8vIGFydGlmYWN0c1xuICBncm91cDogTk9ERV9UWVBFUy5ncm91cCxcbiAgdGV4dEFubm90YXRpb246IE5PREVfVFlQRVMudGV4dEFubm90YXRpb24sXG4gIC8vXG4gIC8vIHVua25vd25cbiAgLy9cbiAgZXZlbnQ6IE5PREVfVFlQRVMudW5rbm93bixcbiAgLy8gbWFudWFsVGFzazogTk9ERV9UWVBFUy51bmtub3duLFxuICAvLyBzZW5kVGFzazogTk9ERV9UWVBFUy51bmtub3duLFxuICAvLyByZWNlaXZlVGFzazogTk9ERV9UWVBFUy51bmtub3duLFxuICAvLyBjYWxsQ2hvcmVvZ3JhcGh5OiBOT0RFX1RZUEVTLnVua25vd24sXG4gIC8vIGNob3Jlb2dyYXBoeVRhc2s6IE5PREVfVFlQRVMudW5rbm93bixcbiAgLy8gaW1wbGljaXRUaHJvd0V2ZW50OiBOT0RFX1RZUEVTLnVua25vd24sXG4gIC8vIHN1YkNob3Jlb2dyYXBoeTogTk9ERV9UWVBFUy51bmtub3duLFxuICAvLyBlZGdlcyAoaWdub3JlKVxuICAvLyBkYXRhT2JqZWN0UmVmZXJlbmNlOiBOT0RFX1RZUEVTLnVua25vd24sXG4gIC8vIGRhdGFTdG9yZVJlZmVyZW5jZTogTk9ERV9UWVBFUy51bmtub3duLFxufSBhcyBjb25zdDtcblxuZXhwb3J0IGNvbnN0IGVsZW1lbnRUb0VkZ2VUeXBlOiBSZWNvcmQ8Tm9uTnVsbGFibGU8QnBtbkVkZ2VFbGVtZW50PltcIl9fJCRlbGVtZW50XCJdLCBCcG1uRWRnZVR5cGU+ID0ge1xuICBhc3NvY2lhdGlvbjogRURHRV9UWVBFUy5hc3NvY2lhdGlvbixcbiAgc2VxdWVuY2VGbG93OiBFREdFX1RZUEVTLnNlcXVlbmNlRmxvdyxcbn07XG4iLCIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyB1c2VFZGdlQ2xhc3NOYW1lIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvZWRnZXMvSG9va3NcIjtcbmltcG9ydCB7IFBvdGVudGlhbFdheXBvaW50LCBXYXlwb2ludHMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC93YXlwb2ludHMvV2F5cG9pbnRzXCI7XG5pbXBvcnQgeyB1c2VBbHdheXNWaXNpYmxlRWRnZVVwZGF0ZXJzQXROb2RlQm9yZGVycyB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L2VkZ2VzL3VzZUFsd2F5c1Zpc2libGVFZGdlVXBkYXRlcnNBdE5vZGVCb3JkZXJzXCI7XG5pbXBvcnQgeyB1c2VQYXRoRm9yRWRnZVdpdGhXYXlwb2ludHMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9lZGdlcy91c2VQYXRoRm9yRWRnZVdpdGhXYXlwb2ludHNcIjtcbmltcG9ydCB7IHVzZVBvdGVudGlhbFdheXBvaW50Q29udHJvbHMgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC93YXlwb2ludHMvdXNlUG90ZW50aWFsV2F5cG9pbnRDb250cm9sc1wiO1xuaW1wb3J0IHsgREVGQVVMVF9JTlRSQUNUSU9OX1dJRFRIIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvbWF0aHMvRGNNYXRoc1wiO1xuaW1wb3J0IHsgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXAgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9tZW1vaXphdGlvbi9tZW1vaXphdGlvblwiO1xuaW1wb3J0IHsgdXNlSXNIb3ZlcmVkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvcmVhY3RFeHQvdXNlSXNIb3ZlcmVkXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0ICogYXMgUkYgZnJvbSBcInJlYWN0Zmxvd1wiO1xuaW1wb3J0IHsgQXNzb2NpYXRpb25QYXRoLCBTZXF1ZW5jZUZsb3dQYXRoIH0gZnJvbSBcIi4vRWRnZVN2Z3NcIjtcbmltcG9ydCB7IEJwbW5EaWFncmFtRWRnZURhdGEgfSBmcm9tIFwiLi4vQnBtbkRpYWdyYW1Eb21haW5cIjtcblxuY29uc3QgaW50ZXJhY3Rpb25TdHJva2VQcm9wczogUGFydGlhbDxSZWFjdC5TVkdBdHRyaWJ1dGVzPFNWR1BhdGhFbGVtZW50Pj4gPSB7XG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIG1hcmtlckVuZDogdW5kZWZpbmVkLFxuICBzdHlsZTogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6IFwicmVhY3QtZmxvd19fZWRnZS1pbnRlcmFjdGlvblwiLFxuICBzdHJva2U6IFwidHJhbnNwYXJlbnRcIixcbiAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxufTtcblxuZXhwb3J0IGNvbnN0IFNlcXVlbmNlRmxvd0VkZ2UgPSBSZWFjdC5tZW1vKChwcm9wczogUkYuRWRnZVByb3BzPEJwbW5EaWFncmFtRWRnZURhdGE+KSA9PiB7XG4gIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICBjb25zdCB7IHBhdGgsIHBvaW50czogd2F5cG9pbnRzIH0gPSB1c2VQYXRoRm9yRWRnZVdpdGhXYXlwb2ludHMoXG4gICAgcHJvcHMuc291cmNlLFxuICAgIHByb3BzLnRhcmdldCxcbiAgICBwcm9wcy5kYXRhPy5icG1uRWRnZSxcbiAgICBwcm9wcy5kYXRhPy5icG1uU2hhcGVTb3VyY2UsXG4gICAgcHJvcHMuZGF0YT8uYnBtblNoYXBlVGFyZ2V0XG4gICk7XG5cbiAgY29uc3QgaW50ZXJhY3Rpb25QYXRoUmVmID0gUmVhY3QudXNlUmVmPFNWR1BhdGhFbGVtZW50PihudWxsKTtcbiAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKGludGVyYWN0aW9uUGF0aFJlZik7XG5cbiAgY29uc3Qge1xuICAgIG9uTW91c2VNb3ZlOiBvbk1vdXNlTW92ZU9uRWRnZSxcbiAgICBvbkRvdWJsZUNsaWNrOiBvbkRvdWJsZUNsaWNrRWRnZSxcbiAgICBwb3RlbnRpYWxXYXlwb2ludCxcbiAgICBpc0RyYWdnaW5nV2F5cG9pbnQsXG4gIH0gPSB1c2VQb3RlbnRpYWxXYXlwb2ludENvbnRyb2xzKHdheXBvaW50cywgcHJvcHMuc2VsZWN0ZWQsIHByb3BzLmlkLCBwcm9wcy5kYXRhPy5icG1uRWRnZUluZGV4LCBpbnRlcmFjdGlvblBhdGhSZWYpO1xuXG4gIGNvbnN0IGlzQ29ubmVjdGluZyA9ICEhUkYudXNlU3RvcmUoKHMpID0+IHMuY29ubmVjdGlvbk5vZGVJZCk7XG4gIGNvbnN0IGNsYXNzTmFtZSA9IHVzZUVkZ2VDbGFzc05hbWUoaXNDb25uZWN0aW5nLCBpc0RyYWdnaW5nV2F5cG9pbnQpO1xuXG4gIHVzZUFsd2F5c1Zpc2libGVFZGdlVXBkYXRlcnNBdE5vZGVCb3JkZXJzKGludGVyYWN0aW9uUGF0aFJlZiwgcHJvcHMuc291cmNlLCBwcm9wcy50YXJnZXQsIHdheXBvaW50cyk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFNlcXVlbmNlRmxvd1BhdGhcbiAgICAgICAgc3ZnUmVmPXtpbnRlcmFjdGlvblBhdGhSZWZ9XG4gICAgICAgIGQ9e3BhdGh9XG4gICAgICAgIHsuLi5pbnRlcmFjdGlvblN0cm9rZVByb3BzfVxuICAgICAgICBjbGFzc05hbWU9e2Ake2ludGVyYWN0aW9uU3Ryb2tlUHJvcHMuY2xhc3NOYW1lfSAke2NsYXNzTmFtZX1gfVxuICAgICAgICBzdHJva2VXaWR0aD17cHJvcHMuaW50ZXJhY3Rpb25XaWR0aCA/PyBERUZBVUxUX0lOVFJBQ1RJT05fV0lEVEh9XG4gICAgICAgIG9uTW91c2VNb3ZlPXtvbk1vdXNlTW92ZU9uRWRnZX1cbiAgICAgICAgb25Eb3VibGVDbGljaz17b25Eb3VibGVDbGlja0VkZ2V9XG4gICAgICAgIGRhdGEtZWRnZXR5cGU9e1wiaW5mb3JtYXRpb24tcmVxdWlyZW1lbnRcIn1cbiAgICAgIC8+XG4gICAgICA8U2VxdWVuY2VGbG93UGF0aCBkPXtwYXRofSBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLWVkZ2UgJHtjbGFzc05hbWV9YH0gLz5cblxuICAgICAge3Byb3BzLnNlbGVjdGVkICYmICFpc0Nvbm5lY3RpbmcgJiYgcHJvcHMuZGF0YT8uYnBtbkVkZ2UgJiYgKFxuICAgICAgICA8V2F5cG9pbnRzXG4gICAgICAgICAgZWRnZUlkPXtwcm9wcy5pZH1cbiAgICAgICAgICBlZGdlSW5kZXg9e3Byb3BzLmRhdGEuYnBtbkVkZ2VJbmRleH1cbiAgICAgICAgICB3YXlwb2ludHM9e3dheXBvaW50c31cbiAgICAgICAgICBvbkRyYWdTdG9wPXtvbk1vdXNlTW92ZU9uRWRnZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgICB7aXNIb3ZlcmVkICYmIHBvdGVudGlhbFdheXBvaW50ICYmIDxQb3RlbnRpYWxXYXlwb2ludCBwb2ludD17cG90ZW50aWFsV2F5cG9pbnQucG9pbnR9IC8+fVxuICAgIDwvPlxuICApO1xufSwgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXApO1xuXG5leHBvcnQgY29uc3QgQXNzb2NpYXRpb25FZGdlID0gUmVhY3QubWVtbygocHJvcHM6IFJGLkVkZ2VQcm9wczxCcG1uRGlhZ3JhbUVkZ2VEYXRhPikgPT4ge1xuICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgY29uc3QgeyBwYXRoLCBwb2ludHM6IHdheXBvaW50cyB9ID0gdXNlUGF0aEZvckVkZ2VXaXRoV2F5cG9pbnRzKFxuICAgIHByb3BzLnNvdXJjZSxcbiAgICBwcm9wcy50YXJnZXQsXG4gICAgcHJvcHMuZGF0YT8uYnBtbkVkZ2UsXG4gICAgcHJvcHMuZGF0YT8uYnBtblNoYXBlU291cmNlLFxuICAgIHByb3BzLmRhdGE/LmJwbW5TaGFwZVRhcmdldFxuICApO1xuXG4gIGNvbnN0IGludGVyYWN0aW9uUGF0aFJlZiA9IFJlYWN0LnVzZVJlZjxTVkdQYXRoRWxlbWVudD4obnVsbCk7XG4gIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChpbnRlcmFjdGlvblBhdGhSZWYpO1xuXG4gIGNvbnN0IHtcbiAgICBvbk1vdXNlTW92ZTogb25Nb3VzZU1vdmVPbkVkZ2UsXG4gICAgb25Eb3VibGVDbGljazogb25Eb3VibGVDbGlja0VkZ2UsXG4gICAgcG90ZW50aWFsV2F5cG9pbnQsXG4gICAgaXNEcmFnZ2luZ1dheXBvaW50LFxuICB9ID0gdXNlUG90ZW50aWFsV2F5cG9pbnRDb250cm9scyh3YXlwb2ludHMsIHByb3BzLnNlbGVjdGVkLCBwcm9wcy5pZCwgcHJvcHMuZGF0YT8uYnBtbkVkZ2VJbmRleCwgaW50ZXJhY3Rpb25QYXRoUmVmKTtcblxuICBjb25zdCBpc0Nvbm5lY3RpbmcgPSAhIVJGLnVzZVN0b3JlKChzKSA9PiBzLmNvbm5lY3Rpb25Ob2RlSWQpO1xuICBjb25zdCBjbGFzc05hbWUgPSB1c2VFZGdlQ2xhc3NOYW1lKGlzQ29ubmVjdGluZywgaXNEcmFnZ2luZ1dheXBvaW50KTtcblxuICB1c2VBbHdheXNWaXNpYmxlRWRnZVVwZGF0ZXJzQXROb2RlQm9yZGVycyhpbnRlcmFjdGlvblBhdGhSZWYsIHByb3BzLnNvdXJjZSwgcHJvcHMudGFyZ2V0LCB3YXlwb2ludHMpO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxBc3NvY2lhdGlvblBhdGhcbiAgICAgICAgc3ZnUmVmPXtpbnRlcmFjdGlvblBhdGhSZWZ9XG4gICAgICAgIGQ9e3BhdGh9XG4gICAgICAgIHsuLi5pbnRlcmFjdGlvblN0cm9rZVByb3BzfVxuICAgICAgICBjbGFzc05hbWU9e2Ake2ludGVyYWN0aW9uU3Ryb2tlUHJvcHMuY2xhc3NOYW1lfSAke2NsYXNzTmFtZX1gfVxuICAgICAgICBzdHJva2VXaWR0aD17cHJvcHMuaW50ZXJhY3Rpb25XaWR0aCA/PyBERUZBVUxUX0lOVFJBQ1RJT05fV0lEVEh9XG4gICAgICAgIG9uTW91c2VNb3ZlPXtvbk1vdXNlTW92ZU9uRWRnZX1cbiAgICAgICAgb25Eb3VibGVDbGljaz17b25Eb3VibGVDbGlja0VkZ2V9XG4gICAgICAgIGRhdGEtZWRnZXR5cGU9e1wiYXNzb2NpYXRpb25cIn1cbiAgICAgIC8+XG4gICAgICA8QXNzb2NpYXRpb25QYXRoIGQ9e3BhdGh9IGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tZWRnZSAke2NsYXNzTmFtZX1gfSAvPlxuXG4gICAgICB7cHJvcHMuc2VsZWN0ZWQgJiYgIWlzQ29ubmVjdGluZyAmJiBwcm9wcy5kYXRhPy5icG1uRWRnZSAmJiAoXG4gICAgICAgIDxXYXlwb2ludHNcbiAgICAgICAgICBlZGdlSWQ9e3Byb3BzLmlkfVxuICAgICAgICAgIGVkZ2VJbmRleD17cHJvcHMuZGF0YS5icG1uRWRnZUluZGV4fVxuICAgICAgICAgIHdheXBvaW50cz17d2F5cG9pbnRzfVxuICAgICAgICAgIG9uRHJhZ1N0b3A9e29uTW91c2VNb3ZlT25FZGdlfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtpc0hvdmVyZWQgJiYgcG90ZW50aWFsV2F5cG9pbnQgJiYgPFBvdGVudGlhbFdheXBvaW50IHBvaW50PXtwb3RlbnRpYWxXYXlwb2ludC5wb2ludH0gLz59XG4gICAgPC8+XG4gICk7XG59LCBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcCk7XG4iLCIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBwYXJzZUJwbW4yMERyb29sczEwTWV0YURhdGEgfSBmcm9tIFwiQGtpZS10b29scy9icG1uLW1hcnNoYWxsZXIvZGlzdC9kcm9vbHMtZXh0ZW5zaW9uLW1ldGFEYXRhXCI7XG5pbXBvcnQge1xuICBCUE1OMjBfX3RCb3VuZGFyeUV2ZW50LFxuICBCUE1OMjBfX3RDb21wbGV4R2F0ZXdheSxcbiAgQlBNTjIwX190RGF0YU9iamVjdCxcbiAgQlBNTjIwX190RW5kRXZlbnQsXG4gIEJQTU4yMF9fdEV2ZW50QmFzZWRHYXRld2F5LFxuICBCUE1OMjBfX3RFeGNsdXNpdmVHYXRld2F5LFxuICBCUE1OMjBfX3RHcm91cCxcbiAgQlBNTjIwX190SW5jbHVzaXZlR2F0ZXdheSxcbiAgQlBNTjIwX190SW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCxcbiAgQlBNTjIwX190SW50ZXJtZWRpYXRlVGhyb3dFdmVudCxcbiAgQlBNTjIwX190TGFuZSxcbiAgQlBNTjIwX190UGFyYWxsZWxHYXRld2F5LFxuICBCUE1OMjBfX3RQcm9jZXNzLFxuICBCUE1OMjBfX3RTdGFydEV2ZW50LFxuICBCUE1OMjBfX3RTdWJQcm9jZXNzLFxuICBCUE1OMjBfX3RUYXNrLFxuICBCUE1OMjBfX3RUZXh0QW5ub3RhdGlvbixcbn0gZnJvbSBcIkBraWUtdG9vbHMvYnBtbi1tYXJzaGFsbGVyL2Rpc3Qvc2NoZW1hcy9icG1uLTJfMC90cy1nZW4vdHlwZXNcIjtcbmltcG9ydCB7IGdldENvbnRhaW5tZW50UmVsYXRpb25zaGlwIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvbWF0aHMvRGNNYXRoc1wiO1xuaW1wb3J0IHsgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXAgfSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9tZW1vaXphdGlvbi9tZW1vaXphdGlvblwiO1xuaW1wb3J0IHtcbiAgRWRpdGFibGVOb2RlTGFiZWwsXG4gIE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2UsXG4gIHVzZUVkaXRhYmxlTm9kZUxhYmVsLFxufSBmcm9tIFwiQGtpZS10b29scy94eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0vZGlzdC9ub2Rlcy9FZGl0YWJsZU5vZGVMYWJlbFwiO1xuaW1wb3J0IHtcbiAgTm9kZVJlc2l6ZXJIYW5kbGUsXG4gIHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMsXG4gIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AsXG4gIHVzZU5vZGVDbGFzc05hbWUsXG4gIHVzZU5vZGVEaW1lbnNpb25zLFxuICB1c2VOb2RlUmVzaXppbmcsXG59IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL0hvb2tzXCI7XG5pbXBvcnQgeyBJbmZvTm9kZVBhbmVsIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3Qvbm9kZXMvSW5mb05vZGVQYW5lbFwiO1xuaW1wb3J0IHsgT3V0Z29pbmdTdHVmZk5vZGVQYW5lbCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL091dGdvaW5nU3R1ZmZOb2RlUGFuZWxcIjtcbmltcG9ydCB7IFBvc2l0aW9uYWxOb2RlSGFuZGxlcyB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L25vZGVzL1Bvc2l0aW9uYWxOb2RlSGFuZGxlc1wiO1xuaW1wb3J0IHsgdXNlSXNIb3ZlcmVkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvcmVhY3RFeHQvdXNlSXNIb3ZlcmVkXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCAqIGFzIFJGIGZyb20gXCJyZWFjdGZsb3dcIjtcbmltcG9ydCB7IHVwZGF0ZUZsb3dFbGVtZW50LCB1cGRhdGVMYW5lLCB1cGRhdGVUZXh0QW5ub3RhdGlvbiB9IGZyb20gXCIuLi8uLi9tdXRhdGlvbnMvcmVuYW1lTm9kZVwiO1xuaW1wb3J0IHsgTm9ybWFsaXplZCB9IGZyb20gXCIuLi8uLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHsgdXNlQnBtbkVkaXRvclN0b3JlLCB1c2VCcG1uRWRpdG9yU3RvcmVBcGkgfSBmcm9tIFwiLi4vLi4vc3RvcmUvU3RvcmVDb250ZXh0XCI7XG5pbXBvcnQge1xuICBBY3Rpdml0eU5vZGVNYXJrZXIsXG4gIEJQTU5fT1VUR09JTkdfU1RSVUNUVVJFLFxuICBCcG1uRGlhZ3JhbUVkZ2VEYXRhLFxuICBCcG1uRGlhZ3JhbU5vZGVEYXRhLFxuICBicG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZyxcbiAgYnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmcsXG4gIEJwbW5Ob2RlVHlwZSxcbiAgRURHRV9UWVBFUyxcbiAgTUlOX05PREVfU0laRVMsXG4gIE5PREVfVFlQRVMsXG59IGZyb20gXCIuLi9CcG1uRGlhZ3JhbURvbWFpblwiO1xuaW1wb3J0IHsgZ2V0Tm9kZUxhYmVsUG9zaXRpb24sIHVzZU5vZGVTdHlsZSB9IGZyb20gXCIuL05vZGVTdHlsZVwiO1xuaW1wb3J0IHtcbiAgRGF0YU9iamVjdE5vZGVTdmcsXG4gIEVuZEV2ZW50Tm9kZVN2ZyxcbiAgR2F0ZXdheU5vZGVTdmcsXG4gIEdyb3VwTm9kZVN2ZyxcbiAgSW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGVTdmcsXG4gIEludGVybWVkaWF0ZVRocm93RXZlbnROb2RlU3ZnLFxuICBMYW5lTm9kZVN2ZyxcbiAgTk9ERV9DT0xPUlMsXG4gIFN0YXJ0RXZlbnROb2RlU3ZnLFxuICBTdWJQcm9jZXNzTm9kZVN2ZyxcbiAgVGFza05vZGVTdmcsXG4gIFRleHRBbm5vdGF0aW9uTm9kZVN2ZyxcbiAgVW5rbm93bk5vZGVTdmcsXG59IGZyb20gXCIuL05vZGVTdmdzXCI7XG5pbXBvcnQgeyBOb2RlTW9ycGhpbmdQYW5lbCB9IGZyb20gXCIuL21vcnBoaW5nL05vZGVNb3JwaGluZ1BhbmVsXCI7XG5pbXBvcnQgeyB1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMgfSBmcm9tIFwiLi9tb3JwaGluZy91c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IFVucGFja2VkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvdHNFeHQvdHNFeHRcIjtcbmltcG9ydCB7IHVzZUdhdGV3YXlOb2RlTW9ycGhpbmdBY3Rpb25zIH0gZnJvbSBcIi4vbW9ycGhpbmcvdXNlR2F0ZXdheU5vZGVNb3JwaGluZ0FjdGlvbnNcIjtcbmltcG9ydCB7IEVsZW1lbnRGaWx0ZXIgfSBmcm9tIFwiQGtpZS10b29scy94bWwtcGFyc2VyLXRzL2Rpc3QvZWxlbWVudEZpbHRlclwiO1xuaW1wb3J0IHsgdXNlVGFza05vZGVNb3JwaGluZ0FjdGlvbnMgfSBmcm9tIFwiLi9tb3JwaGluZy91c2VUYXNrTm9kZU1vcnBoaW5nQWN0aW9uc1wiO1xuaW1wb3J0IHsgdXNlU3ViUHJvY2Vzc05vZGVNb3JwaGluZ0FjdGlvbnMgfSBmcm9tIFwiLi9tb3JwaGluZy91c2VTdWJQcm9jZXNzTm9kZU1vcnBoaW5nQWN0aW9uc1wiO1xuaW1wb3J0IHsgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMgfSBmcm9tIFwiLi9tb3JwaGluZy91c2VLZXlib2FyZFNob3J0Y3V0c0Zvck1vcnBoaW5nQWN0aW9uc1wiO1xuXG5leHBvcnQgY29uc3QgU3RhcnRFdmVudE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IHN0YXJ0RXZlbnQsIHNoYXBlLCBzaGFwZUluZGV4LCBwYXJlbnRYeUZsb3dOb2RlIH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190U3RhcnRFdmVudD4gJiB7IF9fJCRlbGVtZW50OiBcInN0YXJ0RXZlbnRcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIGNvbnN0IFtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZUV2ZW50Tm9kZU1vcnBoaW5nQWN0aW9ucyhzdGFydEV2ZW50KTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KFxuICAgICAgKCkgPT5cbiAgICAgICAgcGFyZW50WHlGbG93Tm9kZT8udHlwZSA9PT0gTk9ERV9UWVBFUy5zdWJQcm9jZXNzXG4gICAgICAgICAgPyBuZXcgU2V0KFtcIm5vbmVcIiwgXCJjYW5jZWxFdmVudERlZmluaXRpb25cIiwgXCJsaW5rRXZlbnREZWZpbml0aW9uXCIsIFwidGVybWluYXRlRXZlbnREZWZpbml0aW9uXCJdKVxuICAgICAgICAgIDogbmV3IFNldChbXG4gICAgICAgICAgICAgIFwiZXJyb3JFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJlc2NhbGF0aW9uRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiY2FuY2VsRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiY29tcGVuc2F0ZUV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImxpbmtFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJ0ZXJtaW5hdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgIF0pLFxuICAgICAgW3BhcmVudFh5Rmxvd05vZGU/LnR5cGVdXG4gICAgKTtcbiAgICB1c2VLZXlib2FyZFNob3J0Y3V0c0Zvck1vcnBoaW5nQWN0aW9ucyhyZWYsIG1vcnBoaW5nQWN0aW9ucywgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9PlxuICAgICAgICAgIDxTdGFydEV2ZW50Tm9kZVN2Z1xuICAgICAgICAgICAgey4uLm5vZGVEaW1lbnNpb25zfVxuICAgICAgICAgICAgeD17MH1cbiAgICAgICAgICAgIHk9ezB9XG4gICAgICAgICAgICB2YXJpYW50PXtzdGFydEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdPy5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS10YXNrLW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtdGFzay1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e3N0YXJ0RXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnN0YXJ0RXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuc3RhcnRFdmVudF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuc3RhcnRFdmVudC5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuc3RhcnRFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtzdGFydEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdLl9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KHN0YXJ0RXZlbnRbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmICFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtzdGFydEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17c3RhcnRFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBpbnRlcm1lZGlhdGVDYXRjaEV2ZW50LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxcbiAgICAgIHwgKE5vcm1hbGl6ZWQ8QlBNTjIwX190SW50ZXJtZWRpYXRlQ2F0Y2hFdmVudD4gJiB7IF9fJCRlbGVtZW50OiBcImludGVybWVkaWF0ZUNhdGNoRXZlbnRcIiB9KVxuICAgICAgfCAoTm9ybWFsaXplZDxCUE1OMjBfX3RCb3VuZGFyeUV2ZW50PiAmIHsgX18kJGVsZW1lbnQ6IFwiYm91bmRhcnlFdmVudFwiIH0pXG4gICAgPlxuICA+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCBbaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMoaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+XG4gICAgICAgIGludGVybWVkaWF0ZUNhdGNoRXZlbnQuX18kJGVsZW1lbnQgPT09IFwiaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudFwiXG4gICAgICAgICAgPyBuZXcgU2V0KFtcbiAgICAgICAgICAgICAgXCJub25lXCIsXG4gICAgICAgICAgICAgIFwiZXJyb3JFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgXCJlc2NhbGF0aW9uRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgICAgIFwiY29tcGVuc2F0ZUV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcImNhbmNlbEV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgICBcInRlcm1pbmF0ZUV2ZW50RGVmaW5pdGlvblwiLFxuICAgICAgICAgICAgXSlcbiAgICAgICAgICA6IGludGVybWVkaWF0ZUNhdGNoRXZlbnQuX18kJGVsZW1lbnQgPT09IFwiYm91bmRhcnlFdmVudFwiXG4gICAgICAgICAgICA/IG5ldyBTZXQoW1wibm9uZVwiLCBcImxpbmtFdmVudERlZmluaXRpb25cIiwgXCJ0ZXJtaW5hdGVFdmVudERlZmluaXRpb25cIl0pXG4gICAgICAgICAgICA6IG5ldyBTZXQoKSxcbiAgICAgIFtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50Ll9fJCRlbGVtZW50XVxuICAgICk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8SW50ZXJtZWRpYXRlQ2F0Y2hFdmVudE5vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgdmFyaWFudD17aW50ZXJtZWRpYXRlQ2F0Y2hFdmVudC5ldmVudERlZmluaXRpb24/LlswXS5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgb25Eb3VibGVDbGljaz17dHJpZ2dlckVkaXRpbmd9XG4gICAgICAgICAgb25LZXlEb3duPXt0cmlnZ2VyRWRpdGluZ0lmRW50ZXJ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtga2llLWJwbW4tZWRpdG9yLS1pbnRlcm1lZGlhdGUtY2F0Y2gtZXZlbnQtbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1pbnRlcm1lZGlhdGUtY2F0Y2gtZXZlbnQtbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtpZH1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudF0ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50XS5lZGdlc31cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxOb2RlTW9ycGhpbmdQYW5lbFxuICAgICAgICAgICAgICBkaXNhYmxlZEFjdGlvbklkcz17ZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkc31cbiAgICAgICAgICAgICAgaXNUb2dnbGVWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgaXNFeHBhbmRlZD17aXNNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIHNldEV4cGFuZGVkPXtzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIGFjdGlvbnM9e21vcnBoaW5nQWN0aW9uc31cbiAgICAgICAgICAgICAgcHJpbWFyeUNvbG9yPXtOT0RFX0NPTE9SUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy5pbnRlcm1lZGlhdGVDYXRjaEV2ZW50LmJhY2tncm91bmR9XG4gICAgICAgICAgICAgIHNlbGVjdGVkQWN0aW9uSWQ9e2ludGVybWVkaWF0ZUNhdGNoRXZlbnQuZXZlbnREZWZpbml0aW9uPy5bMF0uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHsvKiBDcmVhdGVzIGEgZGl2IGVsZW1lbnQgd2l0aCB0aGUgbm9kZSBzaXplIHRvIHB1c2ggZG93biB0aGUgPEVkaXRhYmxlTm9kZUxhYmVsIC8+ICovfVxuICAgICAgICAgIHs8ZGl2IHN0eWxlPXt7IGhlaWdodDogbm9kZURpbWVuc2lvbnMuaGVpZ2h0LCBmbGV4U2hyaW5rOiAwIH19IC8+fVxuICAgICAgICAgIHsoaW50ZXJtZWRpYXRlQ2F0Y2hFdmVudFtcIkBfbmFtZVwiXSB8fCBpc0VkaXRpbmdMYWJlbCkgJiYgIWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmIChcbiAgICAgICAgICAgIDxOb2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5hbWU9e2ludGVybWVkaWF0ZUNhdGNoRXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtpbnRlcm1lZGlhdGVDYXRjaEV2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Ob2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgSW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGludGVybWVkaWF0ZVRocm93RXZlbnQsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxcbiAgICBCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190SW50ZXJtZWRpYXRlVGhyb3dFdmVudD4gJiB7IF9fJCRlbGVtZW50OiBcImludGVybWVkaWF0ZVRocm93RXZlbnRcIiB9PlxuICA+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlRmxvd0VsZW1lbnQoe1xuICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHN0YXRlLmJwbW4ubW9kZWwuZGVmaW5pdGlvbnMsXG4gICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lLnRyaW0oKSB9LFxuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCBbaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQsIHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldE1vcnBoaW5nUGFuZWxFeHBhbmRlZChmYWxzZSksIFtpc0hvdmVyZWRdKTtcbiAgICBjb25zdCBtb3JwaGluZ0FjdGlvbnMgPSB1c2VFdmVudE5vZGVNb3JwaGluZ0FjdGlvbnMoaW50ZXJtZWRpYXRlVGhyb3dFdmVudCk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PihcbiAgICAgICgpID0+XG4gICAgICAgIG5ldyBTZXQoW1xuICAgICAgICAgIFwidGltZXJFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICBcImVycm9yRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJjYW5jZWxFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgICBcImNvbmRpdGlvbmFsRXZlbnREZWZpbml0aW9uXCIsXG4gICAgICAgICAgXCJ0ZXJtaW5hdGVFdmVudERlZmluaXRpb25cIixcbiAgICAgICAgXSksXG4gICAgICBbXVxuICAgICk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8SW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgdmFyaWFudD17aW50ZXJtZWRpYXRlVGhyb3dFdmVudC5ldmVudERlZmluaXRpb24/LlswXT8uX18kJGVsZW1lbnQgPz8gXCJub25lXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0taW50ZXJtZWRpYXRlLXRocm93LWV2ZW50LW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtaW50ZXJtZWRpYXRlLXRocm93LWV2ZW50LW5vZGVgfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17aWR9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmludGVybWVkaWF0ZVRocm93RXZlbnRdLm5vZGVzfVxuICAgICAgICAgICAgICBlZGdlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudC5mb3JlZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWNvbmRhcnlDb2xvcj17Tk9ERV9DT0xPUlMuaW50ZXJtZWRpYXRlVGhyb3dFdmVudC5iYWNrZ3JvdW5kfVxuICAgICAgICAgICAgICBzZWxlY3RlZEFjdGlvbklkPXtpbnRlcm1lZGlhdGVUaHJvd0V2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdLl9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGludGVybWVkaWF0ZVRocm93RXZlbnRbXCJAX25hbWVcIl0gfHwgaXNFZGl0aW5nTGFiZWwpICYmICFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtpbnRlcm1lZGlhdGVUaHJvd0V2ZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17aW50ZXJtZWRpYXRlVGhyb3dFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEVuZEV2ZW50Tm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogZW5kRXZlbnQsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190RW5kRXZlbnQ+ICYgeyBfXyQkZWxlbWVudDogXCJlbmRFdmVudFwiIH0+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zKGVuZEV2ZW50KTtcbiAgICBjb25zdCBkaXNhYmxlZE1vcnBoaW5nQWN0aW9uSWRzID0gdXNlTWVtbzxTZXQ8VW5wYWNrZWQ8dHlwZW9mIG1vcnBoaW5nQWN0aW9ucz5bXCJpZFwiXT4+KFxuICAgICAgKCkgPT4gbmV3IFNldChbXCJ0aW1lckV2ZW50RGVmaW5pdGlvblwiLCBcImNvbmRpdGlvbmFsRXZlbnREZWZpbml0aW9uXCIsIFwibGlua0V2ZW50RGVmaW5pdGlvblwiXSksXG4gICAgICBbXVxuICAgICk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8RW5kRXZlbnROb2RlU3ZnXG4gICAgICAgICAgICB7Li4ubm9kZURpbWVuc2lvbnN9XG4gICAgICAgICAgICB4PXswfVxuICAgICAgICAgICAgeT17MH1cbiAgICAgICAgICAgIHZhcmlhbnQ9e2VuZEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdPy5fXyQkZWxlbWVudCA/PyBcIm5vbmVcIn1cbiAgICAgICAgICAgIHN0cm9rZVdpZHRoPXs2fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWVuZC1ldmVudC1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLWVuZC1ldmVudC1ub2RlYH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2lkfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG5vZGVUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5lbmRFdmVudF0ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5lbmRFdmVudF0uZWRnZXN9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8Tm9kZU1vcnBoaW5nUGFuZWxcbiAgICAgICAgICAgICAgZGlzYWJsZWRBY3Rpb25JZHM9e2Rpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHN9XG4gICAgICAgICAgICAgIGlzVG9nZ2xlVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIGlzRXhwYW5kZWQ9e2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBzZXRFeHBhbmRlZD17c2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkfVxuICAgICAgICAgICAgICBhY3Rpb25zPXttb3JwaGluZ0FjdGlvbnN9XG4gICAgICAgICAgICAgIHByaW1hcnlDb2xvcj17Tk9ERV9DT0xPUlMuZW5kRXZlbnQuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLmVuZEV2ZW50LmJhY2tncm91bmR9XG4gICAgICAgICAgICAgIHNlbGVjdGVkQWN0aW9uSWQ9e2VuZEV2ZW50LmV2ZW50RGVmaW5pdGlvbj8uWzBdLl9fJCRlbGVtZW50ID8/IFwibm9uZVwifVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICB7LyogQ3JlYXRlcyBhIGRpdiBlbGVtZW50IHdpdGggdGhlIG5vZGUgc2l6ZSB0byBwdXNoIGRvd24gdGhlIDxFZGl0YWJsZU5vZGVMYWJlbCAvPiAqL31cbiAgICAgICAgICB7PGRpdiBzdHlsZT17eyBoZWlnaHQ6IG5vZGVEaW1lbnNpb25zLmhlaWdodCwgZmxleFNocmluazogMCB9fSAvPn1cbiAgICAgICAgICB7KGVuZEV2ZW50W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAhaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVMYWJlbEF0VGhlQm90dG9tPlxuICAgICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgICAgbmFtZT17ZW5kRXZlbnRbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtlbmRFdmVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IFRhc2tOb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiB0YXNrLCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxcbiAgICAgIE5vcm1hbGl6ZWQ8XG4gICAgICAgIEVsZW1lbnRGaWx0ZXI8XG4gICAgICAgICAgVW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190UHJvY2Vzc1tcImZsb3dFbGVtZW50XCJdPj4sXG4gICAgICAgICAgXCJ0YXNrXCIgfCBcInNjcmlwdFRhc2tcIiB8IFwic2VydmljZVRhc2tcIiB8IFwiYnVzaW5lc3NSdWxlVGFza1wiIHwgXCJ1c2VyVGFza1wiIHwgXCJjYWxsQWN0aXZpdHlcIlxuICAgICAgICA+XG4gICAgICA+XG4gICAgPlxuICA+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5kaWFncmFtLm92ZXJsYXlzLmVuYWJsZUN1c3RvbU5vZGVTdHlsZXMpO1xuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgeyBmb250Q3NzUHJvcGVydGllcyB9ID0gdXNlTm9kZVN0eWxlKHtcbiAgICAgIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSxcbiAgICAgIGlzRW5hYmxlZDogZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyxcbiAgICB9KTtcblxuICAgIGNvbnN0IGljb25zID0gdXNlQWN0aXZpdHlJY29ucyh0YXNrKTtcblxuICAgIGNvbnN0IFtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZVRhc2tOb2RlTW9ycGhpbmdBY3Rpb25zKHRhc2spO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oKCkgPT4gbmV3IFNldCgpLCBbXSk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8VGFza05vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHg9ezB9XG4gICAgICAgICAgICB5PXswfVxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg9e3Rhc2suX18kJGVsZW1lbnQgPT09IFwiY2FsbEFjdGl2aXR5XCIgPyA1IDogdW5kZWZpbmVkfVxuICAgICAgICAgICAgbWFya2Vycz17aWNvbnN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tdGFzay1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLXRhc2stbm9kZWB9XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXt0YXNrW1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e3VzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSwgW2JwbW5FZGl0b3JTdG9yZUFwaV0pfVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgbmFtZT17dGFza1tcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICAgIHZhbHVlPXt0YXNrW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgLi4uZm9udENzc1Byb3BlcnRpZXMsIHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAge3Nob3VsZEFjdExpa2VIb3ZlcmVkICYmIChcbiAgICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgICAgbm9kZVR5cGU9e3R5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMudGFza31cbiAgICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5vZGVTaGFwZUluZGV4PXtzaGFwZUluZGV4fVxuICAgICAgICAgICAgICAgIE1JTl9OT0RFX1NJWkVTPXtNSU5fTk9ERV9TSVpFU31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMudGFza10ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy50YXNrXS5lZGdlc31cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxOb2RlTW9ycGhpbmdQYW5lbFxuICAgICAgICAgICAgICBkaXNhYmxlZEFjdGlvbklkcz17ZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkc31cbiAgICAgICAgICAgICAgaXNUb2dnbGVWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgaXNFeHBhbmRlZD17aXNNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIHNldEV4cGFuZGVkPXtzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIGFjdGlvbnM9e21vcnBoaW5nQWN0aW9uc31cbiAgICAgICAgICAgICAgcHJpbWFyeUNvbG9yPXtOT0RFX0NPTE9SUy50YXNrLmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy50YXNrLmJhY2tncm91bmR9XG4gICAgICAgICAgICAgIHNlbGVjdGVkQWN0aW9uSWQ9e3Rhc2suX18kJGVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgU3ViUHJvY2Vzc05vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IHN1YlByb2Nlc3MsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxcbiAgICBCcG1uRGlhZ3JhbU5vZGVEYXRhPFxuICAgICAgTm9ybWFsaXplZDxCUE1OMjBfX3RTdWJQcm9jZXNzPiAmIHsgX18kJGVsZW1lbnQ6IFwidHJhbnNhY3Rpb25cIiB8IFwiYWRIb2NTdWJQcm9jZXNzXCIgfCBcInN1YlByb2Nlc3NcIiB9XG4gICAgPlxuICA+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8U1ZHUmVjdEVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5kaWFncmFtLm92ZXJsYXlzLmVuYWJsZUN1c3RvbU5vZGVTdHlsZXMpO1xuICAgIGNvbnN0IGlzT25seVNlbGVjdGVkTm9kZSA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5fc2VsZWN0ZWROb2Rlcy5sZW5ndGggPT09IDEgJiYgc2VsZWN0ZWRcbiAgICApO1xuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgeyBmb250Q3NzUHJvcGVydGllcyB9ID0gdXNlTm9kZVN0eWxlKHtcbiAgICAgIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSxcbiAgICAgIGlzRW5hYmxlZDogZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyxcbiAgICB9KTtcblxuICAgIGNvbnN0IGljb25zID0gdXNlQWN0aXZpdHlJY29ucyhzdWJQcm9jZXNzKTtcblxuICAgIGNvbnN0IFtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCwgc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkKGZhbHNlKSwgW2lzSG92ZXJlZF0pO1xuICAgIGNvbnN0IG1vcnBoaW5nQWN0aW9ucyA9IHVzZVN1YlByb2Nlc3NOb2RlTW9ycGhpbmdBY3Rpb25zKHN1YlByb2Nlc3MpO1xuICAgIGNvbnN0IGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMgPSB1c2VNZW1vPFNldDxVbnBhY2tlZDx0eXBlb2YgbW9ycGhpbmdBY3Rpb25zPltcImlkXCJdPj4oKCkgPT4gbmV3IFNldCgpLCBbXSk7XG4gICAgdXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMocmVmLCBtb3JwaGluZ0FjdGlvbnMsIGRpc2FibGVkTW9ycGhpbmdBY3Rpb25JZHMpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8U3ViUHJvY2Vzc05vZGVTdmdcbiAgICAgICAgICAgIHsuLi5ub2RlRGltZW5zaW9uc31cbiAgICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgICAgeD17MH1cbiAgICAgICAgICAgIHk9ezB9XG4gICAgICAgICAgICBpY29ucz17aWNvbnN9XG4gICAgICAgICAgICB2YXJpYW50PXtcbiAgICAgICAgICAgICAgc3ViUHJvY2Vzcy5fXyQkZWxlbWVudCA9PT0gXCJ0cmFuc2FjdGlvblwiXG4gICAgICAgICAgICAgICAgPyBcInRyYW5zYWN0aW9uXCJcbiAgICAgICAgICAgICAgICA6IHN1YlByb2Nlc3NbXCJAX3RyaWdnZXJlZEJ5RXZlbnRcIl1cbiAgICAgICAgICAgICAgICAgID8gXCJldmVudFwiXG4gICAgICAgICAgICAgICAgICA6IHN1YlByb2Nlc3MubG9vcENoYXJhY3RlcmlzdGljcz8uX18kJGVsZW1lbnQgPT09IFwibXVsdGlJbnN0YW5jZUxvb3BDaGFyYWN0ZXJpc3RpY3NcIlxuICAgICAgICAgICAgICAgICAgICA/IFwibXVsdGktaW5zdGFuY2VcIlxuICAgICAgICAgICAgICAgICAgICA6IFwib3RoZXJcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLXN1Yi1wcm9jZXNzLW5vZGUgJHtjbGFzc05hbWV9IGtpZS1icG1uLWVkaXRvci0tc2VsZWN0ZWQtc3ViLXByb2Nlc3Mtbm9kZWB9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtzdWJQcm9jZXNzW1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNNb3JwaGluZ1BhbmVsRXhwYW5kZWQgJiYgIWlzVGFyZ2V0ZWQgJiYgaXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZ31cbiAgICAgICAgICAgICAgb25DbGljaz17dXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICAgIHN0YXRlLnByb3BlcnRpZXNQYW5lbC5pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8RWRpdGFibGVOb2RlTGFiZWxcbiAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICBuYW1lPXtzdWJQcm9jZXNzW1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICBpc0VkaXRpbmc9e2lzRWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgdmFsdWU9e3N1YlByb2Nlc3NbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgIHNob3VsZENvbW1pdE9uQmx1cj17dHJ1ZX1cbiAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyAuLi5mb250Q3NzUHJvcGVydGllcywgekluZGV4OiAyMDAwIH19XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICB7aXNPbmx5U2VsZWN0ZWROb2RlICYmICFkcmFnZ2luZyAmJiAoXG4gICAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnN1YlByb2Nlc3N9XG4gICAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc01vcnBoaW5nUGFuZWxFeHBhbmRlZCAmJiAhaXNUYXJnZXRlZCAmJiBpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuc3ViUHJvY2Vzc10ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5zdWJQcm9jZXNzXS5lZGdlc31cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxOb2RlTW9ycGhpbmdQYW5lbFxuICAgICAgICAgICAgICBkaXNhYmxlZEFjdGlvbklkcz17ZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkc31cbiAgICAgICAgICAgICAgaXNUb2dnbGVWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgICBpc0V4cGFuZGVkPXtpc01vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgc2V0RXhwYW5kZWQ9e3NldE1vcnBoaW5nUGFuZWxFeHBhbmRlZH1cbiAgICAgICAgICAgICAgYWN0aW9ucz17bW9ycGhpbmdBY3Rpb25zfVxuICAgICAgICAgICAgICBwcmltYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN1YlByb2Nlc3MuZm9yZWdyb3VuZH1cbiAgICAgICAgICAgICAgc2Vjb25kYXJ5Q29sb3I9e05PREVfQ09MT1JTLnN1YlByb2Nlc3MuYmFja2dyb3VuZH1cbiAgICAgICAgICAgICAgc2VsZWN0ZWRBY3Rpb25JZD17XG4gICAgICAgICAgICAgICAgc3ViUHJvY2Vzc1tcIkBfdHJpZ2dlcmVkQnlFdmVudFwiXSA9PT0gdHJ1ZVxuICAgICAgICAgICAgICAgICAgPyBcImV2ZW50U3ViUHJvY2Vzc1wiXG4gICAgICAgICAgICAgICAgICA6IHN1YlByb2Nlc3MubG9vcENoYXJhY3RlcmlzdGljcz8uX18kJGVsZW1lbnQgPT09IFwibXVsdGlJbnN0YW5jZUxvb3BDaGFyYWN0ZXJpc3RpY3NcIlxuICAgICAgICAgICAgICAgICAgICA/IFwibXVsdGlJbnN0YW5jZVN1YlByb2Nlc3NcIlxuICAgICAgICAgICAgICAgICAgICA6IHN1YlByb2Nlc3MuX18kJGVsZW1lbnRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEdhdGV3YXlOb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBnYXRld2F5LCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8XG4gICAgQnBtbkRpYWdyYW1Ob2RlRGF0YTxcbiAgICAgIE5vcm1hbGl6ZWQ8XG4gICAgICAgIEVsZW1lbnRGaWx0ZXI8XG4gICAgICAgICAgVW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190UHJvY2Vzc1tcImZsb3dFbGVtZW50XCJdPj4sXG4gICAgICAgICAgXCJleGNsdXNpdmVHYXRld2F5XCIgfCBcImluY2x1c2l2ZUdhdGV3YXlcIiB8IFwicGFyYWxsZWxHYXRld2F5XCIgfCBcImV2ZW50QmFzZWRHYXRld2F5XCIgfCBcImNvbXBsZXhHYXRld2F5XCJcbiAgICAgICAgPlxuICAgICAgPlxuICAgID5cbiAgPikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgeyBpc0VkaXRpbmdMYWJlbCwgc2V0RWRpdGluZ0xhYmVsLCB0cmlnZ2VyRWRpdGluZywgdHJpZ2dlckVkaXRpbmdJZkVudGVyIH0gPSB1c2VFZGl0YWJsZU5vZGVMYWJlbChpZCk7XG4gICAgdXNlSG92ZXJlZE5vZGVBbHdheXNPblRvcChyZWYsIHpJbmRleCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQsIGRyYWdnaW5nLCBzZWxlY3RlZCwgaXNFZGl0aW5nTGFiZWwpO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoeyBzaGFwZSwgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLCBNSU5fTk9ERV9TSVpFUyB9KTtcblxuICAgIGNvbnN0IHNldE5hbWUgPSB1c2VDYWxsYmFjazxPbkVkaXRhYmxlTm9kZUxhYmVsQ2hhbmdlPihcbiAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgIGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLFxuICAgICAgICAgICAgbmV3Rmxvd0VsZW1lbnQ6IHsgXCJAX25hbWVcIjogbmV3TmFtZS50cmltKCkgfSxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgY29uc3QgW2lzTW9ycGhpbmdQYW5lbEV4cGFuZGVkLCBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiBzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWQoZmFsc2UpLCBbaXNIb3ZlcmVkXSk7XG4gICAgY29uc3QgbW9ycGhpbmdBY3Rpb25zID0gdXNlR2F0ZXdheU5vZGVNb3JwaGluZ0FjdGlvbnMoZ2F0ZXdheSk7XG4gICAgY29uc3QgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyA9IHVzZU1lbW88U2V0PFVucGFja2VkPHR5cGVvZiBtb3JwaGluZ0FjdGlvbnM+W1wiaWRcIl0+PigoKSA9PiBuZXcgU2V0KCksIFtdKTtcbiAgICB1c2VLZXlib2FyZFNob3J0Y3V0c0Zvck1vcnBoaW5nQWN0aW9ucyhyZWYsIG1vcnBoaW5nQWN0aW9ucywgZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9ICR7c2VsZWN0ZWQgPyBcInNlbGVjdGVkXCIgOiBcIlwifWB9PlxuICAgICAgICAgIDxHYXRld2F5Tm9kZVN2ZyB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IHZhcmlhbnQ9e2dhdGV3YXkuX18kJGVsZW1lbnR9IC8+XG4gICAgICAgIDwvc3ZnPlxuICAgICAgICA8UG9zaXRpb25hbE5vZGVIYW5kbGVzIGlzVGFyZ2V0ZWQ9e2lzVGFyZ2V0ZWQgJiYgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXR9IG5vZGVJZD17aWR9IC8+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWdhdGV3YXktbm9kZSAke2NsYXNzTmFtZX0ga2llLWJwbW4tZWRpdG9yLS1zZWxlY3RlZC1nYXRld2F5LW5vZGVgfVxuICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17Z2F0ZXdheVtcIkBfbmFtZVwiXX1cbiAgICAgICAgPlxuICAgICAgICAgIHsvKiB7YHJlbmRlciBjb3VudDogJHtyZW5kZXJDb3VudC5jdXJyZW50fWB9XG4gICAgICAgICAgPGJyIC8+ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZVwifT5cbiAgICAgICAgICAgIDxJbmZvTm9kZVBhbmVsXG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxPdXRnb2luZ1N0dWZmTm9kZVBhbmVsXG4gICAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgZWRnZU1hcHBpbmc9e2JwbW5FZGdlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBub2RlSHJlZj17aWR9XG4gICAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmICFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZ2F0ZXdheV0ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5nYXRld2F5XS5lZGdlc31cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxOb2RlTW9ycGhpbmdQYW5lbFxuICAgICAgICAgICAgICBkaXNhYmxlZEFjdGlvbklkcz17ZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkc31cbiAgICAgICAgICAgICAgaXNUb2dnbGVWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBzaG91bGRBY3RMaWtlSG92ZXJlZH1cbiAgICAgICAgICAgICAgaXNFeHBhbmRlZD17aXNNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIHNldEV4cGFuZGVkPXtzZXRNb3JwaGluZ1BhbmVsRXhwYW5kZWR9XG4gICAgICAgICAgICAgIGFjdGlvbnM9e21vcnBoaW5nQWN0aW9uc31cbiAgICAgICAgICAgICAgcHJpbWFyeUNvbG9yPXtOT0RFX0NPTE9SUy5nYXRld2F5LmZvcmVncm91bmR9XG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtOT0RFX0NPTE9SUy5nYXRld2F5LmJhY2tncm91bmR9XG4gICAgICAgICAgICAgIHNlbGVjdGVkQWN0aW9uSWQ9e2dhdGV3YXkuX18kJGVsZW1lbnR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHsvKiBDcmVhdGVzIGEgZGl2IGVsZW1lbnQgd2l0aCB0aGUgbm9kZSBzaXplIHRvIHB1c2ggZG93biB0aGUgPEVkaXRhYmxlTm9kZUxhYmVsIC8+ICovfVxuICAgICAgICAgIHs8ZGl2IHN0eWxlPXt7IGhlaWdodDogbm9kZURpbWVuc2lvbnMuaGVpZ2h0LCBmbGV4U2hyaW5rOiAwIH19IC8+fVxuICAgICAgICAgIHsoZ2F0ZXdheVtcIkBfbmFtZVwiXSB8fCBpc0VkaXRpbmdMYWJlbCkgJiYgIWlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkICYmIChcbiAgICAgICAgICAgIDxOb2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICAgICAgPEVkaXRhYmxlTm9kZUxhYmVsXG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIG5hbWU9e2dhdGV3YXlbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgICAgaXNFZGl0aW5nPXtpc0VkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICAgIHZhbHVlPXtnYXRld2F5W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXROYW1lfVxuICAgICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgICBzaG91bGRDb21taXRPbkJsdXI9e3RydWV9XG4gICAgICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Ob2RlTGFiZWxBdFRoZUJvdHRvbT5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgRGF0YU9iamVjdE5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IGRhdGFPYmplY3QsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190RGF0YU9iamVjdD4gJiB7IF9fJCRlbGVtZW50OiBcImRhdGFPYmplY3RcIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBpc0hvdmVyZWQgPSB1c2VJc0hvdmVyZWQocmVmKTtcbiAgICBjb25zdCBpc1Jlc2l6aW5nID0gdXNlTm9kZVJlc2l6aW5nKGlkKTtcbiAgICBjb25zdCBzaG91bGRBY3RMaWtlSG92ZXJlZCA9IHVzZUJwbW5FZGl0b3JTdG9yZShcbiAgICAgIChzKSA9PiAoaXNIb3ZlcmVkIHx8IGlzUmVzaXppbmcpICYmIHMueHlGbG93UmVhY3RLaWVEaWFncmFtLmRyYWdnaW5nTm9kZXMubGVuZ3RoID09PSAwXG4gICAgKTtcblxuICAgIGNvbnN0IHsgaXNFZGl0aW5nTGFiZWwsIHNldEVkaXRpbmdMYWJlbCwgdHJpZ2dlckVkaXRpbmcsIHRyaWdnZXJFZGl0aW5nSWZFbnRlciB9ID0gdXNlRWRpdGFibGVOb2RlTGFiZWwoaWQpO1xuICAgIHVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AocmVmLCB6SW5kZXgsIHNob3VsZEFjdExpa2VIb3ZlcmVkLCBkcmFnZ2luZywgc2VsZWN0ZWQsIGlzRWRpdGluZ0xhYmVsKTtcblxuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICBjb25zdCBzZXROYW1lID0gdXNlQ2FsbGJhY2s8T25FZGl0YWJsZU5vZGVMYWJlbENoYW5nZT4oXG4gICAgICAobmV3TmFtZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVGbG93RWxlbWVudCh7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIG5ld0Zsb3dFbGVtZW50OiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2JwbW5FZGl0b3JTdG9yZUFwaSwgaWRdXG4gICAgKTtcblxuICAgIC8vIFRoaXMgaXMgdXNlZCB0byBtb2RpZnkgYSBjc3MgZnJvbSBhIDpiZWZvcmUgZWxlbWVudC5cbiAgICAvLyBUaGUgLS1oZWlnaHQgaXMgYSBjc3MgdmFyIHdoaWNoIGlzIHVzZWQgYnkgd2hlbiB0aGlzIG5vZGUgaXMgc2VsZWN0ZWQgY2xhc3NcbiAgICBjb25zdCBbbm9kZUhlaWdodCwgc2V0Tm9kZUhlaWdodF0gPSBSZWFjdC51c2VTdGF0ZTxudW1iZXI+KDApO1xuICAgIGNvbnN0IHN0eWxlID0gdXNlTWVtbzxSZWFjdC5DU1NQcm9wZXJ0aWVzPihcbiAgICAgICgpID0+ICh7XG4gICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgICAgICAgXCItLXNlbGVjdGVkLWRhdGEtb2JqZWN0LW5vZGUtc2hhcGUtLWhlaWdodFwiOiBgJHtub2RlRGltZW5zaW9ucy5oZWlnaHQgKyAyMCArIDI2ICsgKGlzRWRpdGluZ0xhYmVsID8gMjAgOiBub2RlSGVpZ2h0ID8/IDApfXB4YCxcbiAgICAgIH0pLFxuICAgICAgW25vZGVEaW1lbnNpb25zLCBpc0VkaXRpbmdMYWJlbCwgbm9kZUhlaWdodF1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8RGF0YU9iamVjdE5vZGVTdmcgey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSBzaG93QXJyb3c9e2ZhbHNlfSBzaG93Rm9sZGVkUGFnZT17dHJ1ZX0gLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICBjbGFzc05hbWU9e2BraWUtYnBtbi1lZGl0b3ItLWRhdGEtb2JqZWN0LW5vZGUtY29udGVudCAke2NsYXNzTmFtZX0gJHtzZWxlY3RlZCA/IFwic2VsZWN0ZWRcIiA6IFwiXCJ9YH1cbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICB0YWJJbmRleD17LTF9XG4gICAgICAgICAgZGF0YS1ub2RlaHJlZj17aWR9XG4gICAgICAgICAgZGF0YS1ub2RlbGFiZWw9e2RhdGFPYmplY3RbXCJAX25hbWVcIl19XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17XCJ4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGVcIn0+XG4gICAgICAgICAgICA8SW5mb05vZGVQYW5lbFxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIHtzaG91bGRBY3RMaWtlSG92ZXJlZCAmJiAoXG4gICAgICAgICAgICAgIDxOb2RlUmVzaXplckhhbmRsZVxuICAgICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLmRhdGFPYmplY3R9XG4gICAgICAgICAgICAgICAgbm9kZUlkPXtpZH1cbiAgICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgICBNSU5fTk9ERV9TSVpFUz17TUlOX05PREVfU0laRVN9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8T3V0Z29pbmdTdHVmZk5vZGVQYW5lbFxuICAgICAgICAgICAgICBub2RlTWFwcGluZz17YnBtbk5vZGVzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgICAgbm9kZUhyZWY9e2lkfVxuICAgICAgICAgICAgICBpc1Zpc2libGU9eyFpc1RhcmdldGVkICYmIHNob3VsZEFjdExpa2VIb3ZlcmVkfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMuZGF0YU9iamVjdF0ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5kYXRhT2JqZWN0XS5lZGdlc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgey8qIENyZWF0ZXMgYSBkaXYgZWxlbWVudCB3aXRoIHRoZSBub2RlIHNpemUgdG8gcHVzaCBkb3duIHRoZSA8RWRpdGFibGVOb2RlTGFiZWwgLz4gKi99XG4gICAgICAgICAgezxkaXYgc3R5bGU9e3sgaGVpZ2h0OiBub2RlRGltZW5zaW9ucy5oZWlnaHQsIGZsZXhTaHJpbms6IDAgfX0gLz59XG4gICAgICAgICAgeyhkYXRhT2JqZWN0W1wiQF9uYW1lXCJdIHx8IGlzRWRpdGluZ0xhYmVsKSAmJiAoXG4gICAgICAgICAgICA8Tm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICAgIGlkPXtpZH1cbiAgICAgICAgICAgICAgICBuYW1lPXtkYXRhT2JqZWN0W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgICAgc2V0RWRpdGluZz17c2V0RWRpdGluZ0xhYmVsfVxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPXtnZXROb2RlTGFiZWxQb3NpdGlvbih7IG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSB9KX1cbiAgICAgICAgICAgICAgICB2YWx1ZT17ZGF0YU9iamVjdFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17c2V0TmFtZX1cbiAgICAgICAgICAgICAgICB2YWxpZGF0ZT17KCkgPT4gdHJ1ZX0gLy8gRklYTUU6IFRpYWdvXG4gICAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAgIC8vIEtlZXBzIHRoZSB0ZXh0IG9uIHRvcCBvZiB0aGUgc2VsZWN0ZWQgbGF5ZXJcbiAgICAgICAgICAgICAgICBmb250Q3NzUHJvcGVydGllcz17eyB6SW5kZXg6IDIwMDAgfX1cbiAgICAgICAgICAgICAgICBzZXRMYWJlbEhlaWdodD17c2V0Tm9kZUhlaWdodH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvTm9kZUxhYmVsQXRUaGVCb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IEdyb3VwTm9kZSA9IFJlYWN0Lm1lbW8oXG4gICh7XG4gICAgZGF0YTogeyBicG1uRWxlbWVudDogZ3JvdXAsIHNoYXBlLCBzaGFwZUluZGV4IH0sXG4gICAgc2VsZWN0ZWQsXG4gICAgZHJhZ2dpbmcsXG4gICAgekluZGV4LFxuICAgIHR5cGUsXG4gICAgaWQsXG4gIH06IFJGLk5vZGVQcm9wczxCcG1uRGlhZ3JhbU5vZGVEYXRhPE5vcm1hbGl6ZWQ8QlBNTjIwX190R3JvdXA+ICYgeyBfXyQkZWxlbWVudDogXCJncm91cFwiIH0+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPFNWR1JlY3RFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuICAgIGNvbnN0IGJwbW5FZGl0b3JTdG9yZUFwaSA9IHVzZUJwbW5FZGl0b3JTdG9yZUFwaSgpO1xuICAgIGNvbnN0IHJlYWN0RmxvdyA9IFJGLnVzZVJlYWN0RmxvdzxCcG1uRGlhZ3JhbU5vZGVEYXRhLCBCcG1uRGlhZ3JhbUVkZ2VEYXRhPigpO1xuXG4gICAgY29uc3QgeyBpc1RhcmdldGVkLCBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCB9ID0gdXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyhpZCwgc2hvdWxkQWN0TGlrZUhvdmVyZWQpO1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IHVzZU5vZGVDbGFzc05hbWUoaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQsIGlkLCBOT0RFX1RZUEVTLCBFREdFX1RZUEVTLCB0cnVlKTtcbiAgICBjb25zdCBub2RlRGltZW5zaW9ucyA9IHVzZU5vZGVEaW1lbnNpb25zKHsgc2hhcGUsIG5vZGVUeXBlOiB0eXBlIGFzIEJwbW5Ob2RlVHlwZSwgTUlOX05PREVfU0laRVMgfSk7XG5cbiAgICAvLyBTZWxlY3Qgbm9kZXMgdGhhdCBhcmUgdmlzdWFsbHkgZW50aXJlbHkgaW5zaWRlIHRoZSBncm91cC5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgY29uc3Qgb25Eb3VibGVDbGljayA9ICgpID0+IHtcbiAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgIHN0YXRlLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5fc2VsZWN0ZWROb2RlcyA9IHJlYWN0Rmxvdy5nZXROb2RlcygpLmZsYXRNYXAoKG4pID0+XG4gICAgICAgICAgICBnZXRDb250YWlubWVudFJlbGF0aW9uc2hpcCh7XG4gICAgICAgICAgICAgIGJvdW5kczogbi5kYXRhLnNoYXBlW1wiZGM6Qm91bmRzXCJdISxcbiAgICAgICAgICAgICAgY29udGFpbmVyOiBzaGFwZVtcImRjOkJvdW5kc1wiXSEsXG4gICAgICAgICAgICAgIHNuYXBHcmlkOiBzdGF0ZS54eUZsb3dSZWFjdEtpZURpYWdyYW0uc25hcEdyaWQsXG4gICAgICAgICAgICAgIGNvbnRhaW5lck1pblNpemVzOiBNSU5fTk9ERV9TSVpFU1tOT0RFX1RZUEVTLmdyb3VwXSxcbiAgICAgICAgICAgICAgYm91bmRzTWluU2l6ZXM6IE1JTl9OT0RFX1NJWkVTW24udHlwZSBhcyBCcG1uTm9kZVR5cGVdLFxuICAgICAgICAgICAgICBib3JkZXJBbGxvd2FuY2VJblB4OiAwLCAvLyBXZSBvbmx5IGNhcmUgYWJvdXQgbm9kZXMgdGhhdCBhcmUgY29tcGxldGVseUluc2lkZSB0aGUgR3JvdXAgbm9kZS5cbiAgICAgICAgICAgIH0pLmlzQ29tcGxldGVseUluc2lkZVxuICAgICAgICAgICAgICA/IFtuLmlkXVxuICAgICAgICAgICAgICA6IFtdXG4gICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBjb25zdCByID0gcmVmLmN1cnJlbnQ7XG4gICAgICByPy5hZGRFdmVudExpc3RlbmVyKFwiZGJsY2xpY2tcIiwgb25Eb3VibGVDbGljayk7XG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICByPy5yZW1vdmVFdmVudExpc3RlbmVyKFwiZGJsY2xpY2tcIiwgb25Eb3VibGVDbGljayk7XG4gICAgICB9O1xuICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGksIHJlYWN0Rmxvdywgc2hhcGVdKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX1gfT5cbiAgICAgICAgICA8R3JvdXBOb2RlU3ZnIHJlZj17cmVmfSB7Li4ubm9kZURpbWVuc2lvbnN9IHg9ezB9IHk9ezB9IHN0cm9rZVdpZHRoPXszfSAvPlxuICAgICAgICA8L3N2Zz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlIGtpZS1icG1uLWVkaXRvci0tZ3JvdXAtbm9kZSAke2NsYXNzTmFtZX1gfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17aWR9XG4gICAgICAgID5cbiAgICAgICAgICB7Lyoge2ByZW5kZXIgY291bnQ6ICR7cmVuZGVyQ291bnQuY3VycmVudH1gfVxuICAgICAgICAgIDxiciAvPiAqL31cblxuICAgICAgICAgIHtzZWxlY3RlZCAmJiAhZHJhZ2dpbmcgJiYgKFxuICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLmdyb3VwfVxuICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2VsZWN0ZWQgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgbm9kZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLmdyb3VwXS5ub2Rlc31cbiAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5ncm91cF0uZWRnZXN9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9LFxuICBwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcFxuKTtcblxuZXhwb3J0IGNvbnN0IExhbmVOb2RlID0gUmVhY3QubWVtbyhcbiAgKHtcbiAgICBkYXRhOiB7IGJwbW5FbGVtZW50OiBsYW5lLCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdExhbmU+ICYgeyBfXyQkZWxlbWVudDogXCJsYW5lXCIgfT4+KSA9PiB7XG4gICAgY29uc3QgcmVuZGVyQ291bnQgPSB1c2VSZWY8bnVtYmVyPigwKTtcbiAgICByZW5kZXJDb3VudC5jdXJyZW50Kys7XG5cbiAgICBjb25zdCByZWYgPSB1c2VSZWY8U1ZHUmVjdEVsZW1lbnQ+KG51bGwpO1xuXG4gICAgY29uc3QgaXNPbmx5U2VsZWN0ZWROb2RlID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IHMueHlGbG93UmVhY3RLaWVEaWFncmFtLl9zZWxlY3RlZE5vZGVzLmxlbmd0aCA9PT0gMSAmJiBzZWxlY3RlZFxuICAgICk7XG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7IHNoYXBlLCBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUsIE1JTl9OT0RFX1NJWkVTIH0pO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IHVzZUNhbGxiYWNrPE9uRWRpdGFibGVOb2RlTGFiZWxDaGFuZ2U+KFxuICAgICAgKG5ld05hbWU6IHN0cmluZykgPT4ge1xuICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHN0YXRlKSA9PiB7XG4gICAgICAgICAgdXBkYXRlTGFuZSh7IGRlZmluaXRpb25zOiBzdGF0ZS5icG1uLm1vZGVsLmRlZmluaXRpb25zLCBuZXdMYW5lOiB7IFwiQF9uYW1lXCI6IG5ld05hbWUudHJpbSgpIH0sIGlkIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbYnBtbkVkaXRvclN0b3JlQXBpLCBpZF1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxzdmcgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlLXNoYXBlICR7Y2xhc3NOYW1lfSAke3NlbGVjdGVkID8gXCJzZWxlY3RlZFwiIDogXCJcIn1gfT5cbiAgICAgICAgICA8TGFuZU5vZGVTdmcgey4uLm5vZGVEaW1lbnNpb25zfSB4PXswfSB5PXswfSByZWY9e3JlZn0gLz5cbiAgICAgICAgPC9zdmc+XG4gICAgICAgIDxQb3NpdGlvbmFsTm9kZUhhbmRsZXMgaXNUYXJnZXRlZD17aXNUYXJnZXRlZCAmJiBpc1ZhbGlkQ29ubmVjdGlvblRhcmdldH0gbm9kZUlkPXtpZH0gLz5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uRG91YmxlQ2xpY2s9e3RyaWdnZXJFZGl0aW5nfVxuICAgICAgICAgIG9uS2V5RG93bj17dHJpZ2dlckVkaXRpbmdJZkVudGVyfVxuICAgICAgICAgIGNsYXNzTmFtZT17YGtpZS1icG1uLWVkaXRvci0tbGFuZS1ub2RlICR7Y2xhc3NOYW1lfSBraWUtYnBtbi1lZGl0b3ItLXNlbGVjdGVkLWxhbmUtbm9kZWB9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICAgIGRhdGEtbm9kZWxhYmVsPXtsYW5lW1wiQF9uYW1lXCJdfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1wieHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlXCJ9PlxuICAgICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgICAgYnBtbkVkaXRvclN0b3JlQXBpLnNldFN0YXRlKChzdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgc3RhdGUucHJvcGVydGllc1BhbmVsLmlzT3BlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0sIFticG1uRWRpdG9yU3RvcmVBcGldKX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICAgIG5hbWU9e2xhbmVbXCJAX25hbWVcIl19XG4gICAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICAgIHNldEVkaXRpbmc9e3NldEVkaXRpbmdMYWJlbH1cbiAgICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlIH0pfVxuICAgICAgICAgICAgICB2YWx1ZT17bGFuZVtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3NldE5hbWV9XG4gICAgICAgICAgICAgIHZhbGlkYXRlPXsoKSA9PiB0cnVlfSAvLyBGSVhNRTogVGlhZ29cbiAgICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgICAvLyBLZWVwcyB0aGUgdGV4dCBvbiB0b3Agb2YgdGhlIHNlbGVjdGVkIGxheWVyXG4gICAgICAgICAgICAgIGZvbnRDc3NQcm9wZXJ0aWVzPXt7IHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgICAgLz5cblxuICAgICAgICAgICAge2lzT25seVNlbGVjdGVkTm9kZSAmJiAhZHJhZ2dpbmcgJiYgKFxuICAgICAgICAgICAgICA8Tm9kZVJlc2l6ZXJIYW5kbGVcbiAgICAgICAgICAgICAgICBub2RlVHlwZT17dHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy5sYW5lfVxuICAgICAgICAgICAgICAgIG5vZGVJZD17aWR9XG4gICAgICAgICAgICAgICAgbm9kZVNoYXBlSW5kZXg9e3NoYXBlSW5kZXh9XG4gICAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgICAgbm9kZU1hcHBpbmc9e2JwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nfVxuICAgICAgICAgICAgICBlZGdlTWFwcGluZz17YnBtbkVkZ2VzT3V0Z29pbmdTdHVmZk5vZGVQYW5lbE1hcHBpbmd9XG4gICAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgICAgaXNWaXNpYmxlPXshaXNUYXJnZXRlZCAmJiBpc09ubHlTZWxlY3RlZE5vZGUgJiYgIWRyYWdnaW5nfVxuICAgICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMubGFuZV0ubm9kZXN9XG4gICAgICAgICAgICAgIGVkZ2VUeXBlcz17QlBNTl9PVVRHT0lOR19TVFJVQ1RVUkVbTk9ERV9UWVBFUy5sYW5lXS5lZGdlc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBjb25zdCBUZXh0QW5ub3RhdGlvbk5vZGUgPSBSZWFjdC5tZW1vKFxuICAoe1xuICAgIGRhdGE6IHsgYnBtbkVsZW1lbnQ6IHRleHRBbm5vdGF0aW9uLCBzaGFwZSwgc2hhcGVJbmRleCB9LFxuICAgIHNlbGVjdGVkLFxuICAgIGRyYWdnaW5nLFxuICAgIHpJbmRleCxcbiAgICB0eXBlLFxuICAgIGlkLFxuICB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxOb3JtYWxpemVkPEJQTU4yMF9fdFRleHRBbm5vdGF0aW9uPiAmIHsgX18kJGVsZW1lbnQ6IFwidGV4dEFubm90YXRpb25cIiB9Pj4pID0+IHtcbiAgICBjb25zdCByZW5kZXJDb3VudCA9IHVzZVJlZjxudW1iZXI+KDApO1xuICAgIHJlbmRlckNvdW50LmN1cnJlbnQrKztcblxuICAgIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbCk7XG5cbiAgICBjb25zdCBlbmFibGVDdXN0b21Ob2RlU3R5bGVzID0gdXNlQnBtbkVkaXRvclN0b3JlKChzKSA9PiBzLmRpYWdyYW0ub3ZlcmxheXMuZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyk7XG4gICAgY29uc3QgaXNIb3ZlcmVkID0gdXNlSXNIb3ZlcmVkKHJlZik7XG4gICAgY29uc3QgaXNSZXNpemluZyA9IHVzZU5vZGVSZXNpemluZyhpZCk7XG4gICAgY29uc3Qgc2hvdWxkQWN0TGlrZUhvdmVyZWQgPSB1c2VCcG1uRWRpdG9yU3RvcmUoXG4gICAgICAocykgPT4gKGlzSG92ZXJlZCB8fCBpc1Jlc2l6aW5nKSAmJiBzLnh5Rmxvd1JlYWN0S2llRGlhZ3JhbS5kcmFnZ2luZ05vZGVzLmxlbmd0aCA9PT0gMFxuICAgICk7XG5cbiAgICBjb25zdCB7IGlzRWRpdGluZ0xhYmVsLCBzZXRFZGl0aW5nTGFiZWwsIHRyaWdnZXJFZGl0aW5nLCB0cmlnZ2VyRWRpdGluZ0lmRW50ZXIgfSA9IHVzZUVkaXRhYmxlTm9kZUxhYmVsKGlkKTtcbiAgICB1c2VIb3ZlcmVkTm9kZUFsd2F5c09uVG9wKHJlZiwgekluZGV4LCBzaG91bGRBY3RMaWtlSG92ZXJlZCwgZHJhZ2dpbmcsIHNlbGVjdGVkLCBpc0VkaXRpbmdMYWJlbCk7XG5cbiAgICBjb25zdCBicG1uRWRpdG9yU3RvcmVBcGkgPSB1c2VCcG1uRWRpdG9yU3RvcmVBcGkoKTtcblxuICAgIGNvbnN0IHsgaXNUYXJnZXRlZCwgaXNWYWxpZENvbm5lY3Rpb25UYXJnZXQgfSA9IHVzZUNvbm5lY3Rpb25UYXJnZXRTdGF0dXMoaWQsIHNob3VsZEFjdExpa2VIb3ZlcmVkKTtcbiAgICBjb25zdCBjbGFzc05hbWUgPSB1c2VOb2RlQ2xhc3NOYW1lKGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0LCBpZCwgTk9ERV9UWVBFUywgRURHRV9UWVBFUyk7XG4gICAgY29uc3Qgbm9kZURpbWVuc2lvbnMgPSB1c2VOb2RlRGltZW5zaW9ucyh7XG4gICAgICBub2RlVHlwZTogdHlwZSBhcyB0eXBlb2YgTk9ERV9UWVBFUy50ZXh0QW5ub3RhdGlvbixcbiAgICAgIHNoYXBlLFxuICAgICAgTUlOX05PREVfU0laRVMsXG4gICAgfSk7XG5cbiAgICBjb25zdCBzZXRUZXh0ID0gdXNlQ2FsbGJhY2soXG4gICAgICAobmV3VGV4dDogc3RyaW5nKSA9PiB7XG4gICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICB1cGRhdGVUZXh0QW5ub3RhdGlvbih7XG4gICAgICAgICAgICBkZWZpbml0aW9uczogc3RhdGUuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgIGlkLFxuICAgICAgICAgICAgbmV3VGV4dEFubm90YXRpb246IHsgdGV4dDogeyBfXyQkdGV4dDogbmV3VGV4dCB9IH0sXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIFticG1uRWRpdG9yU3RvcmVBcGksIGlkXVxuICAgICk7XG5cbiAgICBjb25zdCB7IGZvbnRDc3NQcm9wZXJ0aWVzIH0gPSB1c2VOb2RlU3R5bGUoe1xuICAgICAgbm9kZVR5cGU6IHR5cGUgYXMgQnBtbk5vZGVUeXBlLFxuICAgICAgaXNFbmFibGVkOiBlbmFibGVDdXN0b21Ob2RlU3R5bGVzLFxuICAgIH0pO1xuXG4gICAgY29uc3QgY29udGVudCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgcmV0dXJuIFN0cmluZyh0ZXh0QW5ub3RhdGlvbi50ZXh0Py5fXyQkdGV4dCkgfHwgcGFyc2VCcG1uMjBEcm9vbHMxME1ldGFEYXRhKHRleHRBbm5vdGF0aW9uKS5nZXQoXCJlbGVtZW50bmFtZVwiKTtcbiAgICB9LCBbdGV4dEFubm90YXRpb25dKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8c3ZnIGNsYXNzTmFtZT17YHh5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS0tbm9kZS1zaGFwZSAke2NsYXNzTmFtZX1gfT5cbiAgICAgICAgICA8VGV4dEFubm90YXRpb25Ob2RlU3ZnIHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gLz5cbiAgICAgICAgPC9zdmc+XG5cbiAgICAgICAgPFBvc2l0aW9uYWxOb2RlSGFuZGxlcyBpc1RhcmdldGVkPXtpc1RhcmdldGVkICYmIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0fSBub2RlSWQ9e2lkfSAvPlxuXG4gICAgICAgIDxkaXZcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUga2llLWJwbW4tZWRpdG9yLS10ZXh0LWFubm90YXRpb24tbm9kZSAke2NsYXNzTmFtZX1gfVxuICAgICAgICAgIHRhYkluZGV4PXstMX1cbiAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0cmlnZ2VyRWRpdGluZ31cbiAgICAgICAgICBvbktleURvd249e3RyaWdnZXJFZGl0aW5nSWZFbnRlcn1cbiAgICAgICAgICBkYXRhLW5vZGVocmVmPXtpZH1cbiAgICAgICAgICBkYXRhLW5vZGVsYWJlbD17U3RyaW5nKHRleHRBbm5vdGF0aW9uLnRleHQpfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgLz5cblxuICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgbmFtZT17Y29udGVudH1cbiAgICAgICAgICAgIGlzRWRpdGluZz17aXNFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICBzZXRFZGl0aW5nPXtzZXRFZGl0aW5nTGFiZWx9XG4gICAgICAgICAgICBwb3NpdGlvbj17Z2V0Tm9kZUxhYmVsUG9zaXRpb24oeyBub2RlVHlwZTogdHlwZSBhcyBCcG1uTm9kZVR5cGUgfSl9XG4gICAgICAgICAgICB2YWx1ZT17Y29udGVudH1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtzZXRUZXh0fVxuICAgICAgICAgICAgdmFsaWRhdGU9eygpID0+IHRydWV9IC8vIEZJWE1FOiBUaWFnb1xuICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgICAgLy8gS2VlcHMgdGhlIHRleHQgb24gdG9wIG9mIHRoZSBzZWxlY3RlZCBsYXllclxuICAgICAgICAgICAgZm9udENzc1Byb3BlcnRpZXM9e3sgLi4uZm9udENzc1Byb3BlcnRpZXMsIHpJbmRleDogMjAwMCB9fVxuICAgICAgICAgIC8+XG5cbiAgICAgICAgICB7c2hvdWxkQWN0TGlrZUhvdmVyZWQgJiYgKFxuICAgICAgICAgICAgPE5vZGVSZXNpemVySGFuZGxlXG4gICAgICAgICAgICAgIG5vZGVUeXBlPXt0eXBlIGFzIHR5cGVvZiBOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9ufVxuICAgICAgICAgICAgICBub2RlSWQ9e2lkfVxuICAgICAgICAgICAgICBub2RlU2hhcGVJbmRleD17c2hhcGVJbmRleH1cbiAgICAgICAgICAgICAgTUlOX05PREVfU0laRVM9e01JTl9OT0RFX1NJWkVTfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgPE91dGdvaW5nU3R1ZmZOb2RlUGFuZWxcbiAgICAgICAgICAgIG5vZGVNYXBwaW5nPXticG1uTm9kZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgIGVkZ2VNYXBwaW5nPXticG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZ31cbiAgICAgICAgICAgIG5vZGVIcmVmPXtpZH1cbiAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICBub2RlVHlwZXM9e0JQTU5fT1VUR09JTkdfU1RSVUNUVVJFW05PREVfVFlQRVMudGV4dEFubm90YXRpb25dLm5vZGVzfVxuICAgICAgICAgICAgZWRnZVR5cGVzPXtCUE1OX09VVEdPSU5HX1NUUlVDVFVSRVtOT0RFX1RZUEVTLnRleHRBbm5vdGF0aW9uXS5lZGdlc31cbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4gIHByb3BzSGF2ZVNhbWVWYWx1ZXNEZWVwXG4pO1xuXG5leHBvcnQgY29uc3QgVW5rbm93bk5vZGUgPSBSZWFjdC5tZW1vKFxuICAoeyBkYXRhOiB7IHNoYXBlLCBzaGFwZUluZGV4IH0sIHNlbGVjdGVkLCBkcmFnZ2luZywgekluZGV4LCB0eXBlLCBpZCB9OiBSRi5Ob2RlUHJvcHM8QnBtbkRpYWdyYW1Ob2RlRGF0YTxhbnk+PikgPT4ge1xuICAgIGNvbnN0IHJlbmRlckNvdW50ID0gdXNlUmVmPG51bWJlcj4oMCk7XG4gICAgcmVuZGVyQ291bnQuY3VycmVudCsrO1xuXG4gICAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICAgIGNvbnN0IGlzSG92ZXJlZCA9IHVzZUlzSG92ZXJlZChyZWYpO1xuICAgIGNvbnN0IGlzUmVzaXppbmcgPSB1c2VOb2RlUmVzaXppbmcoaWQpO1xuICAgIGNvbnN0IHNob3VsZEFjdExpa2VIb3ZlcmVkID0gdXNlQnBtbkVkaXRvclN0b3JlKFxuICAgICAgKHMpID0+IChpc0hvdmVyZWQgfHwgaXNSZXNpemluZykgJiYgcy54eUZsb3dSZWFjdEtpZURpYWdyYW0uZHJhZ2dpbmdOb2Rlcy5sZW5ndGggPT09IDBcbiAgICApO1xuXG4gICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG5cbiAgICBjb25zdCB7IGlzVGFyZ2V0ZWQsIGlzVmFsaWRDb25uZWN0aW9uVGFyZ2V0IH0gPSB1c2VDb25uZWN0aW9uVGFyZ2V0U3RhdHVzKGlkLCBzaG91bGRBY3RMaWtlSG92ZXJlZCk7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdXNlTm9kZUNsYXNzTmFtZShpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCwgaWQsIE5PREVfVFlQRVMsIEVER0VfVFlQRVMpO1xuICAgIGNvbnN0IG5vZGVEaW1lbnNpb25zID0gdXNlTm9kZURpbWVuc2lvbnMoe1xuICAgICAgbm9kZVR5cGU6IHR5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMudW5rbm93bixcbiAgICAgIHNoYXBlLFxuICAgICAgTUlOX05PREVfU0laRVMsXG4gICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPHN2ZyBjbGFzc05hbWU9e2B4eWZsb3ctcmVhY3Qta2llLWRpYWdyYW0tLW5vZGUtc2hhcGUgJHtjbGFzc05hbWV9YH0+XG4gICAgICAgICAgPFVua25vd25Ob2RlU3ZnIHsuLi5ub2RlRGltZW5zaW9uc30geD17MH0geT17MH0gLz5cbiAgICAgICAgPC9zdmc+XG5cbiAgICAgICAgPFJGLkhhbmRsZSBrZXk9e1widW5rbm93blwifSBpZD17XCJ1bmtub3duXCJ9IHR5cGU9e1wic291cmNlXCJ9IHN0eWxlPXt7IG9wYWNpdHk6IDAgfX0gcG9zaXRpb249e1JGLlBvc2l0aW9uLlRvcH0gLz5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgICAgY2xhc3NOYW1lPXtgeHlmbG93LXJlYWN0LWtpZS1kaWFncmFtLS1ub2RlIGtpZS1icG1uLWVkaXRvci0tdW5rbm93bi1ub2RlICR7Y2xhc3NOYW1lfWB9XG4gICAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICAgIGRhdGEtbm9kZWhyZWY9e2lkfVxuICAgICAgICA+XG4gICAgICAgICAgey8qIHtgcmVuZGVyIGNvdW50OiAke3JlbmRlckNvdW50LmN1cnJlbnR9YH1cbiAgICAgICAgICA8YnIgLz4gKi99XG4gICAgICAgICAgPEluZm9Ob2RlUGFuZWxcbiAgICAgICAgICAgIGlzVmlzaWJsZT17IWlzVGFyZ2V0ZWQgJiYgc2hvdWxkQWN0TGlrZUhvdmVyZWR9XG4gICAgICAgICAgICBvbkNsaWNrPXt1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICAgIGJwbW5FZGl0b3JTdG9yZUFwaS5zZXRTdGF0ZSgoc3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzUGFuZWwuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBbYnBtbkVkaXRvclN0b3JlQXBpXSl9XG4gICAgICAgICAgLz5cblxuICAgICAgICAgIDxFZGl0YWJsZU5vZGVMYWJlbFxuICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgbmFtZT17dW5kZWZpbmVkfVxuICAgICAgICAgICAgcG9zaXRpb249e2dldE5vZGVMYWJlbFBvc2l0aW9uKHsgbm9kZVR5cGU6IHR5cGUgYXMgdHlwZW9mIE5PREVfVFlQRVMudW5rbm93biB9KX1cbiAgICAgICAgICAgIGlzRWRpdGluZz17ZmFsc2V9XG4gICAgICAgICAgICBzZXRFZGl0aW5nPXsoKSA9PiB7fX1cbiAgICAgICAgICAgIHZhbHVlPXtgPyBgfVxuICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+IHt9fVxuICAgICAgICAgICAgc2tpcFZhbGlkYXRpb249e2ZhbHNlfVxuICAgICAgICAgICAgdmFsaWRhdGU9e3VzZUNhbGxiYWNrKCh2YWx1ZSkgPT4gdHJ1ZSwgW10pfVxuICAgICAgICAgICAgc2hvdWxkQ29tbWl0T25CbHVyPXt0cnVlfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC8+XG4gICAgKTtcbiAgfSxcbiAgcHJvcHNIYXZlU2FtZVZhbHVlc0RlZXBcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBY3Rpdml0eUljb25zKFxuICBhY3Rpdml0eTpcbiAgICB8IChOb3JtYWxpemVkPEJQTU4yMF9fdFN1YlByb2Nlc3M+ICYgeyBfXyQkZWxlbWVudDogXCJ0cmFuc2FjdGlvblwiIHwgXCJhZEhvY1N1YlByb2Nlc3NcIiB8IFwic3ViUHJvY2Vzc1wiIH0pXG4gICAgfCAoTm9ybWFsaXplZDxCUE1OMjBfX3RUYXNrPiAmIHtcbiAgICAgICAgX18kJGVsZW1lbnQ6IFwidGFza1wiIHwgXCJzZXJ2aWNlVGFza1wiIHwgXCJ1c2VyVGFza1wiIHwgXCJidXNpbmVzc1J1bGVUYXNrXCIgfCBcInNjcmlwdFRhc2tcIiB8IFwiY2FsbEFjdGl2aXR5XCI7XG4gICAgICB9KVxuKSB7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBpY29uczogQWN0aXZpdHlOb2RlTWFya2VyW10gPSBbXTtcbiAgICBpZiAoYWN0aXZpdHkuX18kJGVsZW1lbnQgPT09IFwiYWRIb2NTdWJQcm9jZXNzXCIpIHtcbiAgICAgIGljb25zLnB1c2goQWN0aXZpdHlOb2RlTWFya2VyLkFkSG9jU3ViUHJvY2Vzcyk7XG4gICAgfVxuXG4gICAgaWYgKGFjdGl2aXR5W1wiQF9pc0ZvckNvbXBlbnNhdGlvblwiXSkge1xuICAgICAgaWNvbnMucHVzaChBY3Rpdml0eU5vZGVNYXJrZXIuQ29tcGVuc2F0aW9uKTtcbiAgICB9XG5cbiAgICBpZiAoYWN0aXZpdHkubG9vcENoYXJhY3RlcmlzdGljcz8uX18kJGVsZW1lbnQgPT09IFwibXVsdGlJbnN0YW5jZUxvb3BDaGFyYWN0ZXJpc3RpY3NcIikge1xuICAgICAgaWNvbnMucHVzaChcbiAgICAgICAgYWN0aXZpdHkubG9vcENoYXJhY3RlcmlzdGljc1tcIkBfaXNTZXF1ZW50aWFsXCJdXG4gICAgICAgICAgPyBBY3Rpdml0eU5vZGVNYXJrZXIuTXVsdGlJbnN0YW5jZVNlcXVlbnRpYWxcbiAgICAgICAgICA6IEFjdGl2aXR5Tm9kZU1hcmtlci5NdWx0aUluc3RhbmNlUGFyYWxsZWxcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGFjdGl2aXR5Lmxvb3BDaGFyYWN0ZXJpc3RpY3M/Ll9fJCRlbGVtZW50ID09PSBcInN0YW5kYXJkTG9vcENoYXJhY3RlcmlzdGljc1wiKSB7XG4gICAgICBpY29ucy5wdXNoKEFjdGl2aXR5Tm9kZU1hcmtlci5Mb29wKTtcbiAgICB9XG5cbiAgICBpZiAoYWN0aXZpdHkuX18kJGVsZW1lbnQgPT09IFwiY2FsbEFjdGl2aXR5XCIpIHtcbiAgICAgIGljb25zLnB1c2goQWN0aXZpdHlOb2RlTWFya2VyLkNvbGxhcHNlZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGljb25zO1xuICB9LCBbYWN0aXZpdHldKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE5vZGVMYWJlbEF0VGhlQm90dG9tKHsgY2hpbGRyZW4gfTogUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48e30+KSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgZm9udFNpemU6IFwiMC44ZW1cIixcbiAgICAgICAgbWFyZ2luVG9wOiBcIjEwcHhcIixcbiAgICAgICAgYm9yZGVyUmFkaXVzOiBcIjVweFwiLFxuICAgICAgICBwYWRkaW5nOiBcIjVweFwiLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwicmdiYSgwLDAsMCwwLjAyKVwiLFxuICAgICAgICBib3JkZXI6IFwiMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKVwiLFxuICAgICAgICBib3hTaGFkb3c6IFwicmdiYSgwLCAwLCAwLCAwLjQpIDJweCAycHggNnB4XCIsXG4gICAgICAgIGJhY2tkcm9wRmlsdGVyOiBcImJsdXIoNHB4KVwiLFxuICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiBcImNhbGMoMTAwJSArIDIwcHgpXCIsXG4gICAgICAgIG1hcmdpbkxlZnQ6IFwiLTEwcHhcIixcbiAgICAgIH19XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbIkNvbnRhaW5tZW50TW9kZSIsIkRhdGFPYmplY3ROb2RlIiwiRW5kRXZlbnROb2RlIiwiR2F0ZXdheU5vZGUiLCJHcm91cE5vZGUiLCJJbnRlcm1lZGlhdGVDYXRjaEV2ZW50Tm9kZSIsIkludGVybWVkaWF0ZVRocm93RXZlbnROb2RlIiwiTGFuZU5vZGUiLCJTdGFydEV2ZW50Tm9kZSIsIlN1YlByb2Nlc3NOb2RlIiwiVGFza05vZGUiLCJUZXh0QW5ub3RhdGlvbk5vZGUiLCJVbmtub3duTm9kZSIsIlNlcXVlbmNlRmxvd1BhdGgiLCJBc3NvY2lhdGlvblBhdGgiLCJTdGFydEV2ZW50Tm9kZVN2ZyIsIkludGVybWVkaWF0ZUNhdGNoRXZlbnROb2RlU3ZnIiwiSW50ZXJtZWRpYXRlVGhyb3dFdmVudE5vZGVTdmciLCJFbmRFdmVudE5vZGVTdmciLCJUYXNrTm9kZVN2ZyIsIlN1YlByb2Nlc3NOb2RlU3ZnIiwiR2F0ZXdheU5vZGVTdmciLCJUZXh0QW5ub3RhdGlvbk5vZGVTdmciLCJMYW5lTm9kZVN2ZyIsIlNlcXVlbmNlRmxvd0VkZ2UiLCJBc3NvY2lhdGlvbkVkZ2UiLCJzd2l0Y2hFeHByZXNzaW9uIiwiQ09OVEFJTkVSX05PREVTX0RFU0lSQUJMRV9QQURESU5HIiwic25hcFBvaW50IiwiTk9ERV9UWVBFUyIsInN0YXJ0RXZlbnQiLCJpbnRlcm1lZGlhdGVDYXRjaEV2ZW50IiwiaW50ZXJtZWRpYXRlVGhyb3dFdmVudCIsImVuZEV2ZW50IiwidGFzayIsInN1YlByb2Nlc3MiLCJnYXRld2F5IiwiZGF0YU9iamVjdCIsInRleHRBbm5vdGF0aW9uIiwidW5rbm93biIsImdyb3VwIiwibGFuZSIsIkVER0VfVFlQRVMiLCJzZXF1ZW5jZUZsb3ciLCJhc3NvY2lhdGlvbiIsIkFjdGl2aXR5Tm9kZU1hcmtlciIsIkJQTU5fR1JBUEhfU1RSVUNUVVJFIiwiTWFwIiwiU2V0IiwiQlBNTl9DT05UQUlOTUVOVF9NQVAiLCJJTlNJREUiLCJCT1JERVIiLCJDT05ORUNUSU9OX0xJTkVfRURHRV9DT01QT05FTlRTX01BUFBJTkciLCJDT05ORUNUSU9OX0xJTkVfTk9ERV9DT01QT05FTlRfTUFQUElORyIsIm5vZGVfZGF0YU9iamVjdCIsInVuZGVmaW5lZCIsIm5vZGVfdW5rbm93biIsIm5vZGVfZ3JvdXAiLCJYWV9GTE9XX05PREVfVFlQRVMiLCJYWV9GTE9XX0VER0VfVFlQRVMiLCJCUE1OX09VVEdPSU5HX1NUUlVDVFVSRSIsIm5vZGVzIiwiZWRnZXMiLCJicG1uRWRnZXNPdXRnb2luZ1N0dWZmTm9kZVBhbmVsTWFwcGluZyIsImFjdGlvblRpdGxlIiwiaWNvbiIsIl9yZWYiLCJ2aWV3Ym94U2l6ZSIsIl9qc3giLCJkIiwiX3JlZjIiLCJzdHJva2VXaWR0aCIsImJwbW5Ob2Rlc091dGdvaW5nU3R1ZmZOb2RlUGFuZWxNYXBwaW5nIiwibm9kZVN2Z1Byb3BzIiwidmFyaWFudCIsIm1hcmtlcnMiLCJoZWlnaHQiLCJ3aWR0aCIsIngiLCJ5IiwiTUlOX05PREVfU0laRVMiLCJfcmVmMyIsInNuYXBHcmlkIiwic25hcHBlZE1pblNpemUiLCJNSU5fU0laRV9GT1JfTk9ERVMiLCJfcmVmNCIsIl9yZWY1IiwiX3JlZjYiLCJfcmVmNyIsIl9yZWY4IiwiX3JlZjkiLCJfcmVmMTAiLCJOT0RFX01JTl9XSURUSCIsIk5PREVfTUlOX0hFSUdIVCIsIl9yZWYxMSIsIl9yZWYxMiIsIl9yZWYxMyIsIl9yZWYxNCIsIkRFRkFVTFRfTk9ERV9TSVpFUyIsIl9yZWYxNSIsIl9yZWYxNiIsIl9yZWYxNyIsIl9yZWYxOCIsIl9yZWYxOSIsIl9yZWYyMCIsIl9yZWYyMSIsIl9yZWYyMiIsIl9yZWYyMyIsIl9yZWYyNCIsIl9yZWYyNSIsIl9yZWYyNiIsImdyaWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzbmFwcGVkIiwiZ2V0Tm9kZVR5cGVGcm9tQnBtbkVsZW1lbnQiLCJicG1uRWxlbWVudCIsInR5cGUiLCJfXyQkZWxlbWVudCIsImRlZmF1bHQiLCJlbGVtZW50VG9Ob2RlVHlwZSIsImJvdW5kYXJ5RXZlbnQiLCJjYWxsQWN0aXZpdHkiLCJidXNpbmVzc1J1bGVUYXNrIiwidXNlclRhc2siLCJzY3JpcHRUYXNrIiwic2VydmljZVRhc2siLCJhZEhvY1N1YlByb2Nlc3MiLCJ0cmFuc2FjdGlvbiIsImNvbXBsZXhHYXRld2F5IiwiZXZlbnRCYXNlZEdhdGV3YXkiLCJleGNsdXNpdmVHYXRld2F5IiwiaW5jbHVzaXZlR2F0ZXdheSIsInBhcmFsbGVsR2F0ZXdheSIsImV2ZW50IiwiZWxlbWVudFRvRWRnZVR5cGUiLCJ1c2VFZGdlQ2xhc3NOYW1lIiwiUG90ZW50aWFsV2F5cG9pbnQiLCJXYXlwb2ludHMiLCJ1c2VBbHdheXNWaXNpYmxlRWRnZVVwZGF0ZXJzQXROb2RlQm9yZGVycyIsInVzZVBhdGhGb3JFZGdlV2l0aFdheXBvaW50cyIsInVzZVBvdGVudGlhbFdheXBvaW50Q29udHJvbHMiLCJERUZBVUxUX0lOVFJBQ1RJT05fV0lEVEgiLCJwcm9wc0hhdmVTYW1lVmFsdWVzRGVlcCIsInVzZUlzSG92ZXJlZCIsIlJlYWN0IiwidXNlUmVmIiwiUkYiLCJpbnRlcmFjdGlvblN0cm9rZVByb3BzIiwic3Ryb2tlT3BhY2l0eSIsIm1hcmtlckVuZCIsInN0eWxlIiwiY2xhc3NOYW1lIiwic3Ryb2tlIiwic3Ryb2tlTGluZWNhcCIsIm1lbW8iLCJwcm9wcyIsInJlbmRlckNvdW50IiwiY3VycmVudCIsInBhdGgiLCJwb2ludHMiLCJ3YXlwb2ludHMiLCJzb3VyY2UiLCJ0YXJnZXQiLCJfYSIsImRhdGEiLCJicG1uRWRnZSIsIl9iIiwiYnBtblNoYXBlU291cmNlIiwiX2MiLCJicG1uU2hhcGVUYXJnZXQiLCJpbnRlcmFjdGlvblBhdGhSZWYiLCJpc0hvdmVyZWQiLCJvbk1vdXNlTW92ZSIsIm9uTW91c2VNb3ZlT25FZGdlIiwib25Eb3VibGVDbGljayIsIm9uRG91YmxlQ2xpY2tFZGdlIiwicG90ZW50aWFsV2F5cG9pbnQiLCJpc0RyYWdnaW5nV2F5cG9pbnQiLCJzZWxlY3RlZCIsImlkIiwiX2QiLCJicG1uRWRnZUluZGV4IiwiaXNDb25uZWN0aW5nIiwidXNlU3RvcmUiLCJzIiwiY29ubmVjdGlvbk5vZGVJZCIsIl9qc3hzIiwiX0ZyYWdtZW50IiwiY2hpbGRyZW4iLCJzdmdSZWYiLCJfZSIsImludGVyYWN0aW9uV2lkdGgiLCJfZiIsImVkZ2VJZCIsImVkZ2VJbmRleCIsIm9uRHJhZ1N0b3AiLCJwb2ludCIsInBhcnNlQnBtbjIwRHJvb2xzMTBNZXRhRGF0YSIsImdldENvbnRhaW5tZW50UmVsYXRpb25zaGlwIiwiRWRpdGFibGVOb2RlTGFiZWwiLCJ1c2VFZGl0YWJsZU5vZGVMYWJlbCIsIk5vZGVSZXNpemVySGFuZGxlIiwidXNlQ29ubmVjdGlvblRhcmdldFN0YXR1cyIsInVzZUhvdmVyZWROb2RlQWx3YXlzT25Ub3AiLCJ1c2VOb2RlQ2xhc3NOYW1lIiwidXNlTm9kZURpbWVuc2lvbnMiLCJ1c2VOb2RlUmVzaXppbmciLCJJbmZvTm9kZVBhbmVsIiwiT3V0Z29pbmdTdHVmZk5vZGVQYW5lbCIsIlBvc2l0aW9uYWxOb2RlSGFuZGxlcyIsInVzZUNhbGxiYWNrIiwidXNlRWZmZWN0IiwidXNlTWVtbyIsInVzZVN0YXRlIiwidXBkYXRlRmxvd0VsZW1lbnQiLCJ1cGRhdGVMYW5lIiwidXBkYXRlVGV4dEFubm90YXRpb24iLCJ1c2VCcG1uRWRpdG9yU3RvcmUiLCJ1c2VCcG1uRWRpdG9yU3RvcmVBcGkiLCJnZXROb2RlTGFiZWxQb3NpdGlvbiIsInVzZU5vZGVTdHlsZSIsIkRhdGFPYmplY3ROb2RlU3ZnIiwiR3JvdXBOb2RlU3ZnIiwiTk9ERV9DT0xPUlMiLCJVbmtub3duTm9kZVN2ZyIsIk5vZGVNb3JwaGluZ1BhbmVsIiwidXNlRXZlbnROb2RlTW9ycGhpbmdBY3Rpb25zIiwidXNlR2F0ZXdheU5vZGVNb3JwaGluZ0FjdGlvbnMiLCJ1c2VUYXNrTm9kZU1vcnBoaW5nQWN0aW9ucyIsInVzZVN1YlByb2Nlc3NOb2RlTW9ycGhpbmdBY3Rpb25zIiwidXNlS2V5Ym9hcmRTaG9ydGN1dHNGb3JNb3JwaGluZ0FjdGlvbnMiLCJzaGFwZSIsInNoYXBlSW5kZXgiLCJwYXJlbnRYeUZsb3dOb2RlIiwiZHJhZ2dpbmciLCJ6SW5kZXgiLCJyZWYiLCJpc1Jlc2l6aW5nIiwic2hvdWxkQWN0TGlrZUhvdmVyZWQiLCJ4eUZsb3dSZWFjdEtpZURpYWdyYW0iLCJkcmFnZ2luZ05vZGVzIiwiaXNFZGl0aW5nTGFiZWwiLCJzZXRFZGl0aW5nTGFiZWwiLCJ0cmlnZ2VyRWRpdGluZyIsInRyaWdnZXJFZGl0aW5nSWZFbnRlciIsImJwbW5FZGl0b3JTdG9yZUFwaSIsImlzVGFyZ2V0ZWQiLCJpc1ZhbGlkQ29ubmVjdGlvblRhcmdldCIsIm5vZGVEaW1lbnNpb25zIiwibm9kZVR5cGUiLCJzZXROYW1lIiwibmV3TmFtZSIsInNldFN0YXRlIiwic3RhdGUiLCJkZWZpbml0aW9ucyIsImJwbW4iLCJtb2RlbCIsIm5ld0Zsb3dFbGVtZW50IiwidHJpbSIsImlzTW9ycGhpbmdQYW5lbEV4cGFuZGVkIiwic2V0TW9ycGhpbmdQYW5lbEV4cGFuZGVkIiwibW9ycGhpbmdBY3Rpb25zIiwiZGlzYWJsZWRNb3JwaGluZ0FjdGlvbklkcyIsImV2ZW50RGVmaW5pdGlvbiIsIm5vZGVJZCIsIm9uS2V5RG93biIsInRhYkluZGV4IiwiaXNWaXNpYmxlIiwib25DbGljayIsInByb3BlcnRpZXNQYW5lbCIsImlzT3BlbiIsIm5vZGVNYXBwaW5nIiwiZWRnZU1hcHBpbmciLCJub2RlSHJlZiIsIm5vZGVUeXBlcyIsImVkZ2VUeXBlcyIsImRpc2FibGVkQWN0aW9uSWRzIiwiaXNUb2dnbGVWaXNpYmxlIiwiaXNFeHBhbmRlZCIsInNldEV4cGFuZGVkIiwiYWN0aW9ucyIsInByaW1hcnlDb2xvciIsImZvcmVncm91bmQiLCJzZWNvbmRhcnlDb2xvciIsImJhY2tncm91bmQiLCJzZWxlY3RlZEFjdGlvbklkIiwiZmxleFNocmluayIsIk5vZGVMYWJlbEF0VGhlQm90dG9tIiwibmFtZSIsImlzRWRpdGluZyIsInNldEVkaXRpbmciLCJwb3NpdGlvbiIsInZhbHVlIiwib25DaGFuZ2UiLCJ2YWxpZGF0ZSIsInNob3VsZENvbW1pdE9uQmx1ciIsImZvbnRDc3NQcm9wZXJ0aWVzIiwiZW5hYmxlQ3VzdG9tTm9kZVN0eWxlcyIsImRpYWdyYW0iLCJvdmVybGF5cyIsImlzRW5hYmxlZCIsImljb25zIiwidXNlQWN0aXZpdHlJY29ucyIsIm5vZGVTaGFwZUluZGV4IiwiaXNPbmx5U2VsZWN0ZWROb2RlIiwiX3NlbGVjdGVkTm9kZXMiLCJsb29wQ2hhcmFjdGVyaXN0aWNzIiwibm9kZUhlaWdodCIsInNldE5vZGVIZWlnaHQiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsIm91dGxpbmUiLCJzaG93QXJyb3ciLCJzaG93Rm9sZGVkUGFnZSIsInNldExhYmVsSGVpZ2h0IiwicmVhY3RGbG93IiwidXNlUmVhY3RGbG93IiwiZ2V0Tm9kZXMiLCJmbGF0TWFwIiwibiIsImJvdW5kcyIsImNvbnRhaW5lciIsImNvbnRhaW5lck1pblNpemVzIiwiYm91bmRzTWluU2l6ZXMiLCJib3JkZXJBbGxvd2FuY2VJblB4IiwiaXNDb21wbGV0ZWx5SW5zaWRlIiwiciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibmV3TGFuZSIsInNldFRleHQiLCJuZXdUZXh0IiwibmV3VGV4dEFubm90YXRpb24iLCJ0ZXh0IiwiX18kJHRleHQiLCJjb250ZW50IiwiU3RyaW5nIiwiZ2V0IiwiSGFuZGxlIiwib3BhY2l0eSIsIlBvc2l0aW9uIiwiVG9wIiwic2tpcFZhbGlkYXRpb24iLCJhY3Rpdml0eSIsInB1c2giLCJBZEhvY1N1YlByb2Nlc3MiLCJDb21wZW5zYXRpb24iLCJNdWx0aUluc3RhbmNlU2VxdWVudGlhbCIsIk11bHRpSW5zdGFuY2VQYXJhbGxlbCIsIkxvb3AiLCJDb2xsYXBzZWQiLCJmb250U2l6ZSIsIm1hcmdpblRvcCIsImJvcmRlclJhZGl1cyIsInBhZGRpbmciLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXIiLCJib3hTaGFkb3ciLCJiYWNrZHJvcEZpbHRlciIsInRleHRBbGlnbiIsIm1hcmdpbkxlZnQiXSwic291cmNlUm9vdCI6IiJ9