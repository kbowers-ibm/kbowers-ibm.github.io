"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx":
/*!***********************************************************************!*\
  !*** ./src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MultiInstanceProperties: () => (/* binding */ MultiInstanceProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../codeInput/CodeInput */ "./src/propertiesPanel/codeInput/CodeInput.tsx");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension */ "../bpmn-marshaller/dist/drools-extension.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/ToggleGroup */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/ToggleGroup/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextInput */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextInput/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _MultiInstanceProperties_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MultiInstanceProperties.css */ "./src/propertiesPanel/multiInstance/MultiInstanceProperties.css");










function MultiInstanceProperties(_ref) {
  let {
    element
  } = _ref;
  var _a, _b;
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_3__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_3__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Implementation",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6__.ToggleGroup, {
        "aria-label": "Implementation",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6__.ToggleGroupItem, {
          text: "Parallel",
          isDisabled: isReadOnly,
          isSelected: ((_a = element[""]) !== null && _a !== void 0 ? _a : element["@_drools:serviceimplementation"]) === _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.java,
          onChange: () => {
            bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__.visitFlowElementsAndArtifacts)(process, _ref2 => {
                let {
                  element: e
                } = _ref2;
                if (e["@_id"] === serviceTask["@_id"] && e.__$$element === serviceTask.__$$element) {
                  e["@_implementation"] = _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.java;
                  e["@_drools:serviceimplementation"] = _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.java;
                }
              });
            });
          }
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_6__.ToggleGroupItem, {
          text: "Sequential",
          isDisabled: isReadOnly,
          isSelected: ((_b = serviceTask[""]) !== null && _b !== void 0 ? _b : serviceTask["@_drools:serviceimplementation"]) === _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.webService,
          onChange: () => {
            bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__.visitFlowElementsAndArtifacts)(process, _ref3 => {
                let {
                  element: e
                } = _ref3;
                if (e["@_id"] === serviceTask["@_id"] && e.__$$element === serviceTask.__$$element) {
                  e["@_implementation"] = _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.webService;
                  e["@_drools:serviceimplementation"] = _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_2__.SERVICE_TASK_IMPLEMENTATIONS.webService;
                }
              });
            });
          }
        })]
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Interface",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__.TextInput, {
        "aria-label": "Interface",
        type: "text",
        isDisabled: isReadOnly,
        placeholder: "Enter an interface...",
        value: serviceTask["@_drools:serviceinterface"],
        onChange: newInterface => bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__.visitFlowElementsAndArtifacts)(process, _ref4 => {
            let {
              element: e
            } = _ref4;
            if (e["@_id"] === serviceTask["@_id"] && e.__$$element === serviceTask.__$$element) {
              e["@_drools:serviceinterface"] = newInterface;
            }
          });
        })
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Operation",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__.TextInput, {
        "aria-label": "Operation",
        type: "text",
        isDisabled: isReadOnly,
        placeholder: "Enter an operation...",
        value: serviceTask["@_drools:serviceoperation"],
        onChange: newOperation => bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__.visitFlowElementsAndArtifacts)(process, _ref5 => {
            let {
              element: e
            } = _ref5;
            if (e["@_id"] === serviceTask["@_id"] && e.__$$element === serviceTask.__$$element) {
              e["@_drools:serviceoperation"] = newOperation;
            }
          });
        })
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Execution mode"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Collection input"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Data input"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Collection output"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Data output"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_1__.CodeInput, {
      label: "Completion condition",
      languages: ["MVEL"],
      value: "",
      onChange: newCode => {}
    })]
  });
}
try {
    // @ts-ignore
    MultiInstanceProperties.displayName = "MultiInstanceProperties";
    // @ts-ignore
    MultiInstanceProperties.__docgenInfo = { "description": "", "displayName": "MultiInstanceProperties", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithMultiInstanceProperties" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx#MultiInstanceProperties"] = { docgenInfo: MultiInstanceProperties.__docgenInfo, name: "MultiInstanceProperties", path: "src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx#MultiInstanceProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,