"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./stories/misc/empty/Empty.stories.tsx":
/*!**********************************************!*\
  !*** ./stories/misc/empty/Empty.stories.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Empty: () => (/* binding */ Empty),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   generateEmptyBpmn20: () => (/* binding */ generateEmptyBpmn20)
/* harmony export */ });
/* harmony import */ var _kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller */ "../bpmn-marshaller/dist/index.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta */ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js");
/* harmony import */ var _kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/boxed-expression-component/dist/api */ "../boxed-expression-component/dist/api/index.js");
/* harmony import */ var _bpmnEditorStoriesWrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../bpmnEditorStoriesWrapper */ "./stories/bpmnEditorStoriesWrapper.tsx");
/* harmony import */ var _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/BpmnEditor */ "./src/BpmnEditor.tsx");
var _a, _b, _c;





const generateEmptyBpmn20 = () => `<?xml version="1.0" encoding="UTF-8"?>
<definitions
  xmlns="${_kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.ns.get("")}"
  targetNamespace="https://kie.apache.org/bpmn/${(0,_kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_2__.generateUuid)()}"
  expressionLanguage=""
  id="${(0,_kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_2__.generateUuid)()}">
</definitions>`;
const meta = {
  title: "Misc/Empty",
  component: _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_4__.BpmnEditor,
  includeStories: /^[A-Z]/
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const marshaller = (0,_kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_0__.getMarshaller)(generateEmptyBpmn20(), {
  upgradeTo: "latest"
});
const model = marshaller.parser.parse();
const Empty = {
  render: args => (0,_bpmnEditorStoriesWrapper__WEBPACK_IMPORTED_MODULE_3__.BpmnEditorWrapper)(),
  args: {
    model: model,
    originalVersion: "2.0",
    externalContextDescription: "",
    externalContextName: "Storybook - BPMN Editor",
    issueTrackerHref: "",
    xml: marshaller.builder.build(model)
  }
};
Empty.parameters = {
  ...Empty.parameters,
  docs: {
    ...((_a = Empty.parameters) === null || _a === void 0 ? void 0 : _a.docs),
    source: {
      originalSource: "{\n  render: args => BpmnEditorWrapper(),\n  args: {\n    model: model,\n    originalVersion: \"2.0\",\n    externalContextDescription: \"\",\n    externalContextName: \"Storybook - BPMN Editor\",\n    issueTrackerHref: \"\",\n    xml: marshaller.builder.build(model)\n  }\n}",
      ...((_c = (_b = Empty.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)
    }
  }
};;const __namedExportsOrder = ["generateEmptyBpmn20","Empty"];

/***/ }),

/***/ "./dist/idRandomizer/bpmnIdRandomizer.js":
/*!***********************************************!*\
  !*** ./dist/idRandomizer/bpmnIdRandomizer.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNewBpmnIdRandomizer: () => (/* binding */ getNewBpmnIdRandomizer)
/* harmony export */ });
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta */ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xml-parser-ts/dist/idRandomizer */ "../xml-parser-ts/dist/idRandomizer.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__);



function getNewBpmnIdRandomizer() {
  return new _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__.XmlParserTsIdRandomizer({
    meta: _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__.meta,
    elements: _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__.elements,
    newIdGenerator: _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__.generateUuid
  });
}

/***/ }),

/***/ "../bpmn-marshaller/dist/drools-extension-metaData.js":
/*!************************************************************!*\
  !*** ../bpmn-marshaller/dist/drools-extension-metaData.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addBpmn20Drools10MetaData: () => (/* binding */ addBpmn20Drools10MetaData),
/* harmony export */   deleteBpmn20Drools10MetaDataEntry: () => (/* binding */ deleteBpmn20Drools10MetaDataEntry),
/* harmony export */   parseBpmn20Drools10MetaData: () => (/* binding */ parseBpmn20Drools10MetaData),
/* harmony export */   renameBpmn20Drools10MetaDataEntry: () => (/* binding */ renameBpmn20Drools10MetaDataEntry),
/* harmony export */   setBpmn20Drools10MetaData: () => (/* binding */ setBpmn20Drools10MetaData)
/* harmony export */ });
/* harmony import */ var _drools_extension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drools-extension */ "../bpmn-marshaller/dist/drools-extension.js");

function parseBpmn20Drools10MetaData(obj) {
  var _a, _b;
  const metadata = new Map();
  for (let i = 0; i < ((_b = (_a = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _a === void 0 ? void 0 : _a["drools:metaData"]) !== null && _b !== void 0 ? _b : []).length; i++) {
    const entry = obj.extensionElements["drools:metaData"][i];
    if (entry["@_name"] !== undefined) {
      metadata.set(entry["@_name"], entry["drools:metaValue"].__$$text);
    }
  }
  return metadata;
}
function setBpmn20Drools10MetaData(obj, keyOrIndex, value) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j;
  var _k;
  if (obj) {
    (_a = obj.extensionElements) !== null && _a !== void 0 ? _a : obj.extensionElements = {
      "drools:metaData": []
    };
    (_b = (_k = obj.extensionElements)["drools:metaData"]) !== null && _b !== void 0 ? _b : _k["drools:metaData"] = [];
  }
  if (typeof keyOrIndex === "number") {
    if ((_d = (_c = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _c === void 0 ? void 0 : _c["drools:metaData"]) === null || _d === void 0 ? void 0 : _d[keyOrIndex]) {
      obj.extensionElements["drools:metaData"][keyOrIndex]["drools:metaValue"] = {
        __$$text: value
      };
    } else {}
  } else {
    let updated = false;
    for (let i = 0; i < ((_g = (_f = (_e = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _e === void 0 ? void 0 : _e["drools:metaData"]) === null || _f === void 0 ? void 0 : _f.length) !== null && _g !== void 0 ? _g : 0); i++) {
      const entry = obj.extensionElements["drools:metaData"][i];
      if (entry["@_name"] === keyOrIndex) {
        if (updated) {
          break;
        }
        entry["drools:metaValue"] = {
          __$$text: value
        };
        updated = true;
      }
    }
    if (!updated) {
      (_j = (_h = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _h === void 0 ? void 0 : _h["drools:metaData"]) === null || _j === void 0 ? void 0 : _j.push({
        "@_name": keyOrIndex,
        "drools:metaValue": {
          __$$text: value
        }
      });
    }
  }
}
function addBpmn20Drools10MetaData(obj, key, value) {
  var _a, _b, _c;
  var _d;
  if (obj) {
    (_a = obj.extensionElements) !== null && _a !== void 0 ? _a : obj.extensionElements = {
      "drools:metaData": []
    };
    (_b = (_d = obj.extensionElements)["drools:metaData"]) !== null && _b !== void 0 ? _b : _d["drools:metaData"] = [];
    (_c = obj.extensionElements["drools:metaData"]) === null || _c === void 0 ? void 0 : _c.push({
      "@_name": key,
      "drools:metaValue": {
        __$$text: value
      }
    });
  }
}
function renameBpmn20Drools10MetaDataEntry(obj, index, newKeyName) {
  var _a, _b;
  if ((_b = (_a = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _a === void 0 ? void 0 : _a["drools:metaData"]) === null || _b === void 0 ? void 0 : _b[index]) {
    obj.extensionElements["drools:metaData"][index]["@_name"] = newKeyName;
  }
}
function deleteBpmn20Drools10MetaDataEntry(obj, keyOrIndex) {
  var _a, _b, _c;
  if (typeof keyOrIndex === "number") {
    (_b = (_a = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _a === void 0 ? void 0 : _a["drools:metaData"]) === null || _b === void 0 ? void 0 : _b.splice(keyOrIndex, 1);
  } else if ((_c = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _c === void 0 ? void 0 : _c["drools:metaData"]) {
    obj.extensionElements["drools:metaData"] = obj.extensionElements["drools:metaData"].filter(m => m["@_name"] !== keyOrIndex);
  }
}

/***/ }),

/***/ "../bpmn-marshaller/dist/index.js":
/*!****************************************!*\
  !*** ../bpmn-marshaller/dist/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BPMN_LATEST_VERSION: () => (/* binding */ BPMN_LATEST_VERSION),
/* harmony export */   BPMN_PARSERS: () => (/* binding */ BPMN_PARSERS),
/* harmony export */   BPMN_VERSIONS_TIMELINE: () => (/* binding */ BPMN_VERSIONS_TIMELINE),
/* harmony export */   getBpmnVersion: () => (/* binding */ getBpmnVersion),
/* harmony export */   getMarshaller: () => (/* binding */ getMarshaller),
/* harmony export */   getMarshallerForFixedVersion: () => (/* binding */ getMarshallerForFixedVersion)
/* harmony export */ });
/* harmony import */ var _kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kie-tools/xml-parser-ts */ "../xml-parser-ts/dist/index.js");
/* harmony import */ var _kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schemas/bpmn-2_0/ts-gen/meta */ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js");


const BPMN_PARSERS = {
  "2.0": (0,_kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0__.getParser)({
    ns: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.ns,
    meta: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.meta,
    subs: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.subs,
    elements: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.elements,
    root: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.root
  })
};
const BPMN_VERSIONS_TIMELINE = ["2.0"];
const BPMN_LATEST_VERSION = "2.0";
function getMarshaller(xml, opts) {
  var _a;
  const originalDomdoc = _kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0__.domParser.getDomDocument(xml);
  const originalInstanceNs = (0,_kie_tools_xml_parser_ts__WEBPACK_IMPORTED_MODULE_0__.getInstanceNs)(originalDomdoc);
  const originalMarshaller = getMarshallerForFixedVersion(originalDomdoc, originalInstanceNs);
  const targetVersion = (opts === null || opts === void 0 ? void 0 : opts.upgradeTo) === "latest" ? BPMN_LATEST_VERSION : (_a = opts === null || opts === void 0 ? void 0 : opts.upgradeTo) !== null && _a !== void 0 ? _a : originalMarshaller.version;
  if (originalMarshaller.version === targetVersion) {
    return {
      ...originalMarshaller,
      originalVersion: originalMarshaller.version,
      isLatest: true
    };
  } else {
    throw new Error(`BPMN MARSHALLER: Cannot build BPMN ${targetVersion} marshaller from a model that's already in version '${originalMarshaller.version}'. Downgrading BPMN models is not possible.`);
  }
}
function getBpmnVersion(instanceNs) {
  if (instanceNs.get(_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.ns.get("")) !== undefined) {
    return "2.0";
  } else {
    throw new Error(`BPMN MARSHALLER: Unknown version declared for BPMN. Instance NS --> '${JSON.stringify([...instanceNs.entries()])}'.`);
  }
}
function getMarshallerForFixedVersion(domdoc, instanceNs) {
  const version = getBpmnVersion(instanceNs);
  switch (version) {
    case "2.0":
      return {
        instanceNs,
        version: "2.0",
        root: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.root,
        meta: _schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_1__.meta,
        parser: {
          parse: () => BPMN_PARSERS["2.0"].parse({
            type: "domdoc",
            domdoc,
            instanceNs
          }).json
        },
        builder: {
          build: json => BPMN_PARSERS["2.0"].build({
            json,
            instanceNs
          })
        }
      };
    default:
      throw new Error(`BPMN MARSHALLER: Unknown version declared for BPMN. Instance NS --> '${JSON.stringify([...instanceNs.entries()])}'.`);
  }
}

/***/ }),

/***/ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js":
/*!***************************************************************!*\
  !*** ../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   elements: () => (/* binding */ elements),
/* harmony export */   meta: () => (/* binding */ meta),
/* harmony export */   ns: () => (/* binding */ ns),
/* harmony export */   root: () => (/* binding */ root),
/* harmony export */   subs: () => (/* binding */ subs)
/* harmony export */ });
const root = {
  element: "definitions",
  type: "BPMN20__tDefinitions"
};
const ns = new Map([["http://www.omg.org/spec/BPMN/20100524/MODEL", ""], ["", "http://www.omg.org/spec/BPMN/20100524/MODEL"], ["http://www.omg.org/spec/BPMN/20100524/DI", "bpmndi:"], ["bpmndi:", "http://www.omg.org/spec/BPMN/20100524/DI"], ["http://www.omg.org/spec/DD/20100524/DC", "dc:"], ["dc:", "http://www.omg.org/spec/DD/20100524/DC"], ["http://www.omg.org/spec/DD/20100524/DI", "di:"], ["di:", "http://www.omg.org/spec/DD/20100524/DI"]]);
const subs = {
  "": {
    "adHocSubProcess": "flowElement",
    "boundaryEvent": "flowElement",
    "businessRuleTask": "flowElement",
    "callActivity": "flowElement",
    "callChoreography": "flowElement",
    "choreographyTask": "flowElement",
    "complexGateway": "flowElement",
    "dataObject": "flowElement",
    "dataObjectReference": "flowElement",
    "dataStoreReference": "flowElement",
    "endEvent": "flowElement",
    "event": "flowElement",
    "eventBasedGateway": "flowElement",
    "exclusiveGateway": "flowElement",
    "implicitThrowEvent": "flowElement",
    "inclusiveGateway": "flowElement",
    "intermediateCatchEvent": "flowElement",
    "intermediateThrowEvent": "flowElement",
    "manualTask": "flowElement",
    "parallelGateway": "flowElement",
    "receiveTask": "flowElement",
    "scriptTask": "flowElement",
    "sendTask": "flowElement",
    "sequenceFlow": "flowElement",
    "serviceTask": "flowElement",
    "startEvent": "flowElement",
    "subChoreography": "flowElement",
    "subProcess": "flowElement",
    "task": "flowElement",
    "transaction": "flowElement",
    "userTask": "flowElement",
    "association": "artifact",
    "group": "artifact",
    "textAnnotation": "artifact",
    "callConversation": "conversationNode",
    "conversation": "conversationNode",
    "subConversation": "conversationNode",
    "cancelEventDefinition": "eventDefinition",
    "compensateEventDefinition": "eventDefinition",
    "conditionalEventDefinition": "eventDefinition",
    "errorEventDefinition": "eventDefinition",
    "escalationEventDefinition": "eventDefinition",
    "linkEventDefinition": "eventDefinition",
    "messageEventDefinition": "eventDefinition",
    "signalEventDefinition": "eventDefinition",
    "terminateEventDefinition": "eventDefinition",
    "timerEventDefinition": "eventDefinition",
    "category": "rootElement",
    "collaboration": "rootElement",
    "correlationProperty": "rootElement",
    "dataStore": "rootElement",
    "endPoint": "rootElement",
    "error": "rootElement",
    "escalation": "rootElement",
    "eventDefinition": "rootElement",
    "globalBusinessRuleTask": "rootElement",
    "globalManualTask": "rootElement",
    "globalScriptTask": "rootElement",
    "globalTask": "rootElement",
    "globalUserTask": "rootElement",
    "interface": "rootElement",
    "itemDefinition": "rootElement",
    "message": "rootElement",
    "partnerEntity": "rootElement",
    "partnerRole": "rootElement",
    "process": "rootElement",
    "resource": "rootElement",
    "signal": "rootElement",
    "choreography": "collaboration",
    "globalConversation": "collaboration",
    "formalExpression": "expression",
    "globalChoreographyTask": "choreography",
    "humanPerformer": "performer",
    "potentialOwner": "performer",
    "multiInstanceLoopCharacteristics": "loopCharacteristics",
    "standardLoopCharacteristics": "loopCharacteristics",
    "performer": "resourceRole"
  },
  "bpmndi:": {
    "bpmndi:BPMNShape": "di:DiagramElement",
    "bpmndi:BPMNEdge": "di:DiagramElement"
  },
  "dc:": {},
  "di:": {}
};
const elements = {
  "definitions": "BPMN20__tDefinitions",
  "import": "BPMN20__tImport",
  "activity": "BPMN20__tActivity",
  "adHocSubProcess": "BPMN20__tAdHocSubProcess",
  "artifact": "BPMN20__tArtifact",
  "assignment": "BPMN20__tAssignment",
  "association": "BPMN20__tAssociation",
  "auditing": "BPMN20__tAuditing",
  "baseElement": "BPMN20__tBaseElement",
  "baseElementWithMixedContent": "BPMN20__tBaseElementWithMixedContent",
  "boundaryEvent": "BPMN20__tBoundaryEvent",
  "businessRuleTask": "BPMN20__tBusinessRuleTask",
  "callableElement": "BPMN20__tCallableElement",
  "callActivity": "BPMN20__tCallActivity",
  "callChoreography": "BPMN20__tCallChoreography",
  "callConversation": "BPMN20__tCallConversation",
  "cancelEventDefinition": "BPMN20__tCancelEventDefinition",
  "catchEvent": "BPMN20__tCatchEvent",
  "category": "BPMN20__tCategory",
  "categoryValue": "BPMN20__tCategoryValue",
  "choreography": "BPMN20__tChoreography",
  "choreographyActivity": "BPMN20__tChoreographyActivity",
  "choreographyTask": "BPMN20__tChoreographyTask",
  "collaboration": "BPMN20__tCollaboration",
  "compensateEventDefinition": "BPMN20__tCompensateEventDefinition",
  "complexBehaviorDefinition": "BPMN20__tComplexBehaviorDefinition",
  "complexGateway": "BPMN20__tComplexGateway",
  "conditionalEventDefinition": "BPMN20__tConditionalEventDefinition",
  "conversation": "BPMN20__tConversation",
  "conversationAssociation": "BPMN20__tConversationAssociation",
  "conversationLink": "BPMN20__tConversationLink",
  "conversationNode": "BPMN20__tConversationNode",
  "correlationKey": "BPMN20__tCorrelationKey",
  "correlationProperty": "BPMN20__tCorrelationProperty",
  "correlationPropertyBinding": "BPMN20__tCorrelationPropertyBinding",
  "correlationPropertyRetrievalExpression": "BPMN20__tCorrelationPropertyRetrievalExpression",
  "correlationSubscription": "BPMN20__tCorrelationSubscription",
  "dataAssociation": "BPMN20__tDataAssociation",
  "dataInput": "BPMN20__tDataInput",
  "dataInputAssociation": "BPMN20__tDataInputAssociation",
  "dataObject": "BPMN20__tDataObject",
  "dataObjectReference": "BPMN20__tDataObjectReference",
  "dataOutput": "BPMN20__tDataOutput",
  "dataOutputAssociation": "BPMN20__tDataOutputAssociation",
  "dataState": "BPMN20__tDataState",
  "dataStore": "BPMN20__tDataStore",
  "dataStoreReference": "BPMN20__tDataStoreReference",
  "documentation": "BPMN20__tDocumentation",
  "endEvent": "BPMN20__tEndEvent",
  "endPoint": "BPMN20__tEndPoint",
  "error": "BPMN20__tError",
  "errorEventDefinition": "BPMN20__tErrorEventDefinition",
  "escalation": "BPMN20__tEscalation",
  "escalationEventDefinition": "BPMN20__tEscalationEventDefinition",
  "event": "BPMN20__tEvent",
  "eventBasedGateway": "BPMN20__tEventBasedGateway",
  "eventDefinition": "BPMN20__tEventDefinition",
  "exclusiveGateway": "BPMN20__tExclusiveGateway",
  "expression": "BPMN20__tExpression",
  "extension": "BPMN20__tExtension",
  "flowElement": "BPMN20__tFlowElement",
  "flowNode": "BPMN20__tFlowNode",
  "formalExpression": "BPMN20__tFormalExpression",
  "gateway": "BPMN20__tGateway",
  "globalBusinessRuleTask": "BPMN20__tGlobalBusinessRuleTask",
  "globalChoreographyTask": "BPMN20__tGlobalChoreographyTask",
  "globalConversation": "BPMN20__tGlobalConversation",
  "globalManualTask": "BPMN20__tGlobalManualTask",
  "globalScriptTask": "BPMN20__tGlobalScriptTask",
  "globalTask": "BPMN20__tGlobalTask",
  "globalUserTask": "BPMN20__tGlobalUserTask",
  "group": "BPMN20__tGroup",
  "humanPerformer": "BPMN20__tHumanPerformer",
  "implicitThrowEvent": "BPMN20__tImplicitThrowEvent",
  "inclusiveGateway": "BPMN20__tInclusiveGateway",
  "inputSet": "BPMN20__tInputSet",
  "interface": "BPMN20__tInterface",
  "intermediateCatchEvent": "BPMN20__tIntermediateCatchEvent",
  "intermediateThrowEvent": "BPMN20__tIntermediateThrowEvent",
  "ioBinding": "BPMN20__tInputOutputBinding",
  "ioSpecification": "BPMN20__tInputOutputSpecification",
  "itemDefinition": "BPMN20__tItemDefinition",
  "lane": "BPMN20__tLane",
  "laneSet": "BPMN20__tLaneSet",
  "linkEventDefinition": "BPMN20__tLinkEventDefinition",
  "loopCharacteristics": "BPMN20__tLoopCharacteristics",
  "manualTask": "BPMN20__tManualTask",
  "message": "BPMN20__tMessage",
  "messageEventDefinition": "BPMN20__tMessageEventDefinition",
  "messageFlow": "BPMN20__tMessageFlow",
  "messageFlowAssociation": "BPMN20__tMessageFlowAssociation",
  "monitoring": "BPMN20__tMonitoring",
  "multiInstanceLoopCharacteristics": "BPMN20__tMultiInstanceLoopCharacteristics",
  "operation": "BPMN20__tOperation",
  "outputSet": "BPMN20__tOutputSet",
  "parallelGateway": "BPMN20__tParallelGateway",
  "participant": "BPMN20__tParticipant",
  "participantAssociation": "BPMN20__tParticipantAssociation",
  "participantMultiplicity": "BPMN20__tParticipantMultiplicity",
  "partnerEntity": "BPMN20__tPartnerEntity",
  "partnerRole": "BPMN20__tPartnerRole",
  "performer": "BPMN20__tPerformer",
  "potentialOwner": "BPMN20__tPotentialOwner",
  "process": "BPMN20__tProcess",
  "property": "BPMN20__tProperty",
  "receiveTask": "BPMN20__tReceiveTask",
  "relationship": "BPMN20__tRelationship",
  "rendering": "BPMN20__tRendering",
  "resource": "BPMN20__tResource",
  "resourceAssignmentExpression": "BPMN20__tResourceAssignmentExpression",
  "resourceParameter": "BPMN20__tResourceParameter",
  "resourceParameterBinding": "BPMN20__tResourceParameterBinding",
  "resourceRole": "BPMN20__tResourceRole",
  "rootElement": "BPMN20__tRootElement",
  "scriptTask": "BPMN20__tScriptTask",
  "script": "BPMN20__tScript",
  "sendTask": "BPMN20__tSendTask",
  "sequenceFlow": "BPMN20__tSequenceFlow",
  "serviceTask": "BPMN20__tServiceTask",
  "signal": "BPMN20__tSignal",
  "signalEventDefinition": "BPMN20__tSignalEventDefinition",
  "standardLoopCharacteristics": "BPMN20__tStandardLoopCharacteristics",
  "startEvent": "BPMN20__tStartEvent",
  "subChoreography": "BPMN20__tSubChoreography",
  "subConversation": "BPMN20__tSubConversation",
  "subProcess": "BPMN20__tSubProcess",
  "task": "BPMN20__tTask",
  "terminateEventDefinition": "BPMN20__tTerminateEventDefinition",
  "textAnnotation": "BPMN20__tTextAnnotation",
  "throwEvent": "BPMN20__tThrowEvent",
  "timerEventDefinition": "BPMN20__tTimerEventDefinition",
  "transaction": "BPMN20__tTransaction",
  "userTask": "BPMN20__tUserTask",
  "bpmndi:BPMNDiagram": "BPMNDI__BPMNDiagram",
  "bpmndi:BPMNPlane": "BPMNDI__BPMNPlane",
  "bpmndi:BPMNLabelStyle": "BPMNDI__BPMNLabelStyle",
  "bpmndi:BPMNShape": "BPMNDI__BPMNShape",
  "bpmndi:BPMNLabel": "BPMNDI__BPMNLabel",
  "bpmndi:BPMNEdge": "BPMNDI__BPMNEdge",
  "dc:Font": "DC__Font",
  "dc:Point": "DC__Point",
  "dc:Bounds": "DC__Bounds",
  "di:DiagramElement": "DI__DiagramElement",
  "di:Diagram": "DI__Diagram",
  "di:Style": "DI__Style",
  "di:Node": "DI__Node",
  "di:Edge": "DI__Edge",
  "di:Shape": "DI__Shape",
  "di:Plane": "DI__Plane",
  "di:LabeledEdge": "DI__LabeledEdge",
  "di:Label": "DI__Label",
  "di:LabeledShape": "DI__LabeledShape"
};
const meta = {
  "BPMN20__tDefinitions": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:ID"
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "@_targetNamespace": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_expressionLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_typeLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_exporter": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "@_exporterVersion": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "import": {
      type: "BPMN20__tImport",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "extension": {
      type: "BPMN20__tExtension",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "rootElement": {
      type: "BPMN20__tRootElement",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "bpmndi:BPMNDiagram": {
      type: "BPMNDI__BPMNDiagram",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "relationship": {
      type: "BPMN20__tRelationship",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    }
  },
  "BPMN20__tImport": {
    "@_namespace": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:anyURI"
    },
    "@_location": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:string"
    },
    "@_importType": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:anyURI"
    }
  },
  "BPMN20__tActivity__extensionElements": {},
  "BPMN20__tAdHocSubProcess__extensionElements": {},
  "BPMN20__tAdHocSubProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAdHocSubProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "@_cancelRemainingInstances": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "xsd:boolean"
    },
    "@_ordering": {
      type: "BPMN20__tAdHocOrdering",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "// local type"
    },
    "completionCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "// local type"
    }
  },
  "BPMN20__tArtifact__extensionElements": {},
  "BPMN20__tAssignment__extensionElements": {},
  "BPMN20__tAssignment": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAssignment__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "from": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAssignment",
      xsdType: "// local type"
    },
    "to": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAssignment",
      xsdType: "// local type"
    }
  },
  "BPMN20__tAssociation__extensionElements": {},
  "BPMN20__tAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "xsd:QName"
    },
    "@_associationDirection": {
      type: "BPMN20__tAssociationDirection",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tAuditing__extensionElements": {},
  "BPMN20__tAuditing": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAuditing__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tBaseElement__extensionElements": {},
  "BPMN20__tBaseElementWithMixedContent__extensionElements": {},
  "BPMN20__tBoundaryEvent__extensionElements": {},
  "BPMN20__tBoundaryEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tBoundaryEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    },
    "@_cancelActivity": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tBoundaryEvent",
      xsdType: "xsd:boolean"
    },
    "@_attachedToRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBoundaryEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tBusinessRuleTask__extensionElements": {},
  "BPMN20__tBusinessRuleTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tBusinessRuleTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tBusinessRuleTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallableElement__extensionElements": {},
  "BPMN20__tCallableElement": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallableElement__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallActivity__extensionElements": {},
  "BPMN20__tCallActivity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallActivity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_calledElement": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallActivity",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCallChoreography__extensionElements": {},
  "BPMN20__tCallChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "@_calledChoreographyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallChoreography",
      xsdType: "xsd:QName"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCallChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallConversation__extensionElements": {},
  "BPMN20__tCallConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    },
    "@_calledCollaborationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallConversation",
      xsdType: "xsd:QName"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCallConversation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCancelEventDefinition__extensionElements": {},
  "BPMN20__tCancelEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCancelEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tCatchEvent__extensionElements": {},
  "BPMN20__tCategory__extensionElements": {},
  "BPMN20__tCategory": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCategory__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCategory",
      xsdType: "xsd:string"
    },
    "categoryValue": {
      type: "BPMN20__tCategoryValue",
      isArray: true,
      fromType: "BPMN20__tCategory",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCategoryValue__extensionElements": {},
  "BPMN20__tCategoryValue": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCategoryValue__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_value": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCategoryValue",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tChoreography__extensionElements": {},
  "BPMN20__tChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tChoreographyActivity__extensionElements": {},
  "BPMN20__tChoreographyTask__extensionElements": {},
  "BPMN20__tChoreographyTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tChoreographyTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCollaboration__extensionElements": {},
  "BPMN20__tCollaboration": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCollaboration__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCompensateEventDefinition__extensionElements": {},
  "BPMN20__tCompensateEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCompensateEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_waitForCompletion": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCompensateEventDefinition",
      xsdType: "xsd:boolean"
    },
    "@_activityRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCompensateEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tComplexBehaviorDefinition__extensionElements": {},
  "BPMN20__tComplexBehaviorDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tComplexBehaviorDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "condition": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tComplexBehaviorDefinition",
      xsdType: "// local type"
    },
    "event": {
      type: "BPMN20__tImplicitThrowEvent",
      isArray: false,
      fromType: "BPMN20__tComplexBehaviorDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tComplexGateway__extensionElements": {},
  "BPMN20__tComplexGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tComplexGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tComplexGateway",
      xsdType: "xsd:IDREF"
    },
    "activationCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tComplexGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConditionalEventDefinition__extensionElements": {},
  "BPMN20__tConditionalEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConditionalEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "condition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tConditionalEventDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConversation__extensionElements": {},
  "BPMN20__tConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConversationAssociation__extensionElements": {},
  "BPMN20__tConversationAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversationAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_innerConversationNodeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationAssociation",
      xsdType: "xsd:QName"
    },
    "@_outerConversationNodeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tConversationLink__extensionElements": {},
  "BPMN20__tConversationLink": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversationLink__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:string"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tConversationNode__extensionElements": {},
  "BPMN20__tCorrelationKey__extensionElements": {},
  "BPMN20__tCorrelationKey": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationKey__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationKey",
      xsdType: "xsd:string"
    },
    "correlationPropertyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCorrelationKey",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCorrelationProperty__extensionElements": {},
  "BPMN20__tCorrelationProperty": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationProperty__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "xsd:string"
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "xsd:QName"
    },
    "correlationPropertyRetrievalExpression": {
      type: "BPMN20__tCorrelationPropertyRetrievalExpression",
      isArray: true,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationPropertyBinding__extensionElements": {},
  "BPMN20__tCorrelationPropertyBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationPropertyBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_correlationPropertyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyBinding",
      xsdType: "xsd:QName"
    },
    "dataPath": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyBinding",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationPropertyRetrievalExpression__extensionElements": {},
  "BPMN20__tCorrelationPropertyRetrievalExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationPropertyRetrievalExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyRetrievalExpression",
      xsdType: "xsd:QName"
    },
    "messagePath": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyRetrievalExpression",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationSubscription__extensionElements": {},
  "BPMN20__tCorrelationSubscription": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationSubscription__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_correlationKeyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationSubscription",
      xsdType: "xsd:QName"
    },
    "correlationPropertyBinding": {
      type: "BPMN20__tCorrelationPropertyBinding",
      isArray: true,
      fromType: "BPMN20__tCorrelationSubscription",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataAssociation__extensionElements": {},
  "BPMN20__tDataAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataInput__extensionElements": {},
  "BPMN20__tDataInput": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataInput__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataInputAssociation__extensionElements": {},
  "BPMN20__tDataInputAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataInputAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataObject__extensionElements": {},
  "BPMN20__tDataObject": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataObject__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataObjectReference__extensionElements": {},
  "BPMN20__tDataObjectReference": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataObjectReference__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "xsd:QName"
    },
    "@_dataObjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "xsd:IDREF"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataOutput__extensionElements": {},
  "BPMN20__tDataOutput": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataOutput__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataOutputAssociation__extensionElements": {},
  "BPMN20__tDataOutputAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataOutputAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataState__extensionElements": {},
  "BPMN20__tDataState": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataState__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataState",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tDataStore__extensionElements": {},
  "BPMN20__tDataStore": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataStore__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:string"
    },
    "@_capacity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:integer"
    },
    "@_isUnlimited": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:boolean"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataStoreReference__extensionElements": {},
  "BPMN20__tDataStoreReference": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataStoreReference__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "xsd:QName"
    },
    "@_dataStoreRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDocumentation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:ID"
    },
    "@_textFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:string"
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tEndEvent__extensionElements": {},
  "BPMN20__tEndEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEndEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEndPoint__extensionElements": {},
  "BPMN20__tEndPoint": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEndPoint__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tError__extensionElements": {},
  "BPMN20__tError": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tError__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:string"
    },
    "@_errorCode": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tErrorEventDefinition__extensionElements": {},
  "BPMN20__tErrorEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tErrorEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_errorRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tErrorEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEscalation__extensionElements": {},
  "BPMN20__tEscalation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEscalation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:string"
    },
    "@_escalationCode": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEscalationEventDefinition__extensionElements": {},
  "BPMN20__tEscalationEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEscalationEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_escalationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalationEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEvent__extensionElements": {},
  "BPMN20__tEventBasedGateway__extensionElements": {},
  "BPMN20__tEventBasedGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEventBasedGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_instantiate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tEventBasedGateway",
      xsdType: "xsd:boolean"
    },
    "@_eventGatewayType": {
      type: "BPMN20__tEventBasedGatewayType",
      isArray: false,
      fromType: "BPMN20__tEventBasedGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tEventDefinition__extensionElements": {},
  "BPMN20__tExclusiveGateway__extensionElements": {},
  "BPMN20__tExclusiveGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tExclusiveGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExclusiveGateway",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tExpression__extensionElements": {},
  "BPMN20__tExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "Anonumous type..."
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExpression",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tExtension": {
    "@_definition": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExtension",
      xsdType: "xsd:QName"
    },
    "@_mustUnderstand": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tExtension",
      xsdType: "xsd:boolean"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tExtension",
      xsdType: "// local type"
    }
  },
  "BPMN20__tFlowElement__extensionElements": {},
  "BPMN20__tFlowNode__extensionElements": {},
  "BPMN20__tFormalExpression__extensionElements": {},
  "BPMN20__tFormalExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tFormalExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "Anonumous type..."
    },
    "@_language": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:anyURI"
    },
    "@_evaluatesToTypeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:QName"
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tGateway__extensionElements": {},
  "BPMN20__tGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalBusinessRuleTask__extensionElements": {},
  "BPMN20__tGlobalBusinessRuleTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalBusinessRuleTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tGlobalBusinessRuleTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalChoreographyTask__extensionElements": {},
  "BPMN20__tGlobalChoreographyTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalChoreographyTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tChoreography",
      xsdType: "// local type"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalChoreographyTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tGlobalConversation__extensionElements": {},
  "BPMN20__tGlobalConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalManualTask__extensionElements": {},
  "BPMN20__tGlobalManualTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalManualTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalScriptTask__extensionElements": {},
  "BPMN20__tGlobalScriptTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalScriptTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_scriptLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalScriptTask",
      xsdType: "xsd:anyURI"
    },
    "script": {
      type: "BPMN20__tScript",
      isArray: false,
      fromType: "BPMN20__tGlobalScriptTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalTask__extensionElements": {},
  "BPMN20__tGlobalTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalUserTask__extensionElements": {},
  "BPMN20__tGlobalUserTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalUserTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "// local type"
    },
    "taskName": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "subject": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "content": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "description": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "priority": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "skippable": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:boolean"
    },
    "rendering": {
      type: "BPMN20__tRendering",
      isArray: true,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGroup__extensionElements": {},
  "BPMN20__tGroup": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGroup__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_categoryValueRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGroup",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tHumanPerformer__extensionElements": {},
  "BPMN20__tHumanPerformer": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tHumanPerformer__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tImplicitThrowEvent__extensionElements": {},
  "BPMN20__tImplicitThrowEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tImplicitThrowEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tInclusiveGateway__extensionElements": {},
  "BPMN20__tInclusiveGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInclusiveGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInclusiveGateway",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInputSet__extensionElements": {},
  "BPMN20__tInputSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:string"
    },
    "dataInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "optionalInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "whileExecutingInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "outputSetRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInterface__extensionElements": {},
  "BPMN20__tInterface": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInterface__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInterface",
      xsdType: "xsd:string"
    },
    "@_implementationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInterface",
      xsdType: "xsd:QName"
    },
    "operation": {
      type: "BPMN20__tOperation",
      isArray: true,
      fromType: "BPMN20__tInterface",
      xsdType: "// local type"
    }
  },
  "BPMN20__tIntermediateCatchEvent__extensionElements": {},
  "BPMN20__tIntermediateCatchEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tIntermediateCatchEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tIntermediateThrowEvent__extensionElements": {},
  "BPMN20__tIntermediateThrowEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tIntermediateThrowEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tInputOutputBinding__extensionElements": {},
  "BPMN20__tInputOutputBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputOutputBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:QName"
    },
    "@_inputDataRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:IDREF"
    },
    "@_outputDataRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInputOutputSpecification__extensionElements": {},
  "BPMN20__tInputOutputSpecification": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputOutputSpecification__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    }
  },
  "BPMN20__tItemDefinition__extensionElements": {},
  "BPMN20__tItemDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tItemDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "xsd:boolean"
    },
    "@_itemKind": {
      type: "BPMN20__tItemKind",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLane__extensionElements": {},
  "BPMN20__tLane": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLane__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:string"
    },
    "@_partitionElementRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:QName"
    },
    "partitionElement": {
      type: "BPMN20__tBaseElement",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "// local type"
    },
    "flowNodeRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:IDREF"
    },
    "childLaneSet": {
      type: "BPMN20__tLaneSet",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLaneSet__extensionElements": {},
  "BPMN20__tLaneSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLaneSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLaneSet",
      xsdType: "xsd:string"
    },
    "lane": {
      type: "BPMN20__tLane",
      isArray: true,
      fromType: "BPMN20__tLaneSet",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLinkEventDefinition__extensionElements": {},
  "BPMN20__tLinkEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLinkEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:string"
    },
    "source": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:QName"
    },
    "target": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tLoopCharacteristics__extensionElements": {},
  "BPMN20__tManualTask__extensionElements": {},
  "BPMN20__tManualTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tManualTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    }
  },
  "BPMN20__tMessage__extensionElements": {},
  "BPMN20__tMessage": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessage__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessage",
      xsdType: "xsd:string"
    },
    "@_itemRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessage",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageEventDefinition__extensionElements": {},
  "BPMN20__tMessageEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageEventDefinition",
      xsdType: "xsd:QName"
    },
    "operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageFlow__extensionElements": {},
  "BPMN20__tMessageFlow": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageFlow__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:string"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageFlowAssociation__extensionElements": {},
  "BPMN20__tMessageFlowAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageFlowAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_innerMessageFlowRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlowAssociation",
      xsdType: "xsd:QName"
    },
    "@_outerMessageFlowRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlowAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMonitoring__extensionElements": {},
  "BPMN20__tMonitoring": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMonitoring__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tMultiInstanceLoopCharacteristics__extensionElements": {},
  "BPMN20__tMultiInstanceLoopCharacteristics": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMultiInstanceLoopCharacteristics__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_isSequential": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:boolean"
    },
    "@_behavior": {
      type: "BPMN20__tMultiInstanceFlowCondition",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "@_oneBehaviorEventRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "@_noneBehaviorEventRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "loopCardinality": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "loopDataInputRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "loopDataOutputRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "inputDataItem": {
      type: "BPMN20__tDataInput",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "outputDataItem": {
      type: "BPMN20__tDataOutput",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "complexBehaviorDefinition": {
      type: "BPMN20__tComplexBehaviorDefinition",
      isArray: true,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "completionCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    }
  },
  "BPMN20__tOperation__extensionElements": {},
  "BPMN20__tOperation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tOperation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:string"
    },
    "@_implementationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "inMessageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "outMessageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "errorRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tOutputSet__extensionElements": {},
  "BPMN20__tOutputSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tOutputSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:string"
    },
    "dataOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "optionalOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "whileExecutingOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "inputSetRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tParallelGateway__extensionElements": {},
  "BPMN20__tParallelGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParallelGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tParticipant__extensionElements": {},
  "BPMN20__tParticipant": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipant__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:string"
    },
    "@_processRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "interfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "endPointRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "participantMultiplicity": {
      type: "BPMN20__tParticipantMultiplicity",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "// local type"
    }
  },
  "BPMN20__tParticipantAssociation__extensionElements": {},
  "BPMN20__tParticipantAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipantAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "innerParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipantAssociation",
      xsdType: "xsd:QName"
    },
    "outerParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipantAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tParticipantMultiplicity__extensionElements": {},
  "BPMN20__tParticipantMultiplicity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipantMultiplicity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_minimum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tParticipantMultiplicity",
      xsdType: "xsd:int"
    },
    "@_maximum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tParticipantMultiplicity",
      xsdType: "xsd:int"
    }
  },
  "BPMN20__tPartnerEntity__extensionElements": {},
  "BPMN20__tPartnerEntity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPartnerEntity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tPartnerEntity",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tPartnerEntity",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tPartnerRole__extensionElements": {},
  "BPMN20__tPartnerRole": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPartnerRole__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tPartnerRole",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tPartnerRole",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tPerformer__extensionElements": {},
  "BPMN20__tPerformer": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPerformer__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tPotentialOwner__extensionElements": {},
  "BPMN20__tPotentialOwner": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPotentialOwner__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tProcess__extensionElements": {},
  "BPMN20__tProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "@_processType": {
      type: "BPMN20__tProcessType",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:boolean"
    },
    "@_isExecutable": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:boolean"
    },
    "@_definitionalCollaborationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:QName"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "correlationSubscription": {
      type: "BPMN20__tCorrelationSubscription",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "supports": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tProperty__extensionElements": {},
  "BPMN20__tProperty": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tProperty__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "// local type"
    }
  },
  "BPMN20__tReceiveTask__extensionElements": {},
  "BPMN20__tReceiveTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tReceiveTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "// local type"
    },
    "@_instantiate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:boolean"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:QName"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tRelationship__extensionElements": {},
  "BPMN20__tRelationship": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tRelationship__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:string"
    },
    "@_direction": {
      type: "BPMN20__tRelationshipDirection",
      isArray: false,
      fromType: "BPMN20__tRelationship",
      xsdType: "// local type"
    },
    "source": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:QName"
    },
    "target": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tRendering__extensionElements": {},
  "BPMN20__tRendering": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tRendering__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tResource__extensionElements": {},
  "BPMN20__tResource": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResource__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResource",
      xsdType: "xsd:string"
    },
    "resourceParameter": {
      type: "BPMN20__tResourceParameter",
      isArray: true,
      fromType: "BPMN20__tResource",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceAssignmentExpression__extensionElements": {},
  "BPMN20__tResourceAssignmentExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceAssignmentExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "expression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tResourceAssignmentExpression",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceParameter__extensionElements": {},
  "BPMN20__tResourceParameter": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceParameter__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:string"
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:QName"
    },
    "@_isRequired": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:boolean"
    }
  },
  "BPMN20__tResourceParameterBinding__extensionElements": {},
  "BPMN20__tResourceParameterBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceParameterBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_parameterRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameterBinding",
      xsdType: "xsd:QName"
    },
    "expression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tResourceParameterBinding",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceRole__extensionElements": {},
  "BPMN20__tResourceRole": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceRole__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tRootElement__extensionElements": {},
  "BPMN20__tScriptTask__extensionElements": {},
  "BPMN20__tScriptTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tScriptTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_scriptFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tScriptTask",
      xsdType: "xsd:string"
    },
    "script": {
      type: "BPMN20__tScript",
      isArray: false,
      fromType: "BPMN20__tScriptTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tScript": {
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tScript",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tSendTask__extensionElements": {},
  "BPMN20__tSendTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSendTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "// local type"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "xsd:QName"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSequenceFlow__extensionElements": {},
  "BPMN20__tSequenceFlow": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSequenceFlow__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:IDREF"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:IDREF"
    },
    "@_isImmediate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:boolean"
    },
    "conditionExpression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "// local type"
    }
  },
  "BPMN20__tServiceTask__extensionElements": {},
  "BPMN20__tServiceTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tServiceTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tServiceTask",
      xsdType: "// local type"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tServiceTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSignal__extensionElements": {},
  "BPMN20__tSignal": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSignal__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignal",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignal",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSignalEventDefinition__extensionElements": {},
  "BPMN20__tSignalEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSignalEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_signalRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignalEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tStandardLoopCharacteristics__extensionElements": {},
  "BPMN20__tStandardLoopCharacteristics": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tStandardLoopCharacteristics__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_testBefore": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "xsd:boolean"
    },
    "@_loopMaximum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "xsd:integer"
    },
    "loopCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "// local type"
    }
  },
  "BPMN20__tStartEvent__extensionElements": {},
  "BPMN20__tStartEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tStartEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    },
    "@_isInterrupting": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tStartEvent",
      xsdType: "xsd:boolean"
    }
  },
  "BPMN20__tSubChoreography__extensionElements": {},
  "BPMN20__tSubChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubChoreography",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tSubConversation__extensionElements": {},
  "BPMN20__tSubConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tSubConversation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tSubProcess__extensionElements": {},
  "BPMN20__tSubProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTask__extensionElements": {},
  "BPMN20__tTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTerminateEventDefinition__extensionElements": {},
  "BPMN20__tTerminateEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTerminateEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tTextAnnotation__extensionElements": {},
  "BPMN20__tTextAnnotation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTextAnnotation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_textFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tTextAnnotation",
      xsdType: "xsd:string"
    },
    "text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tTextAnnotation",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tThrowEvent__extensionElements": {},
  "BPMN20__tTimerEventDefinition__extensionElements": {},
  "BPMN20__tTimerEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTimerEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "timeDate": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    },
    "timeDuration": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    },
    "timeCycle": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTransaction__extensionElements": {},
  "BPMN20__tTransaction": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTransaction__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "@_method": {
      type: "BPMN20__tTransactionMethod",
      isArray: false,
      fromType: "BPMN20__tTransaction",
      xsdType: "// local type"
    }
  },
  "BPMN20__tUserTask__extensionElements": {},
  "BPMN20__tUserTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tUserTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "// local type"
    },
    "taskName": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "rendering": {
      type: "BPMN20__tRendering",
      isArray: true,
      fromType: "BPMN20__tUserTask",
      xsdType: "// local type"
    }
  },
  "BPMNDI__BPMNDiagram": {
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:string"
    },
    "@_documentation": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:string"
    },
    "@_resolution": {
      type: "float",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:double"
    },
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:ID"
    },
    "bpmndi:BPMNPlane": {
      type: "BPMNDI__BPMNPlane",
      isArray: false,
      fromType: "BPMNDI__BPMNDiagram",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "bpmndi:BPMNLabelStyle": {
      type: "BPMNDI__BPMNLabelStyle",
      isArray: true,
      fromType: "BPMNDI__BPMNDiagram",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNPlane__extension": {},
  "BPMNDI__BPMNPlane": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNPlane__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "di:DiagramElement": {
      type: "DI__DiagramElement",
      isArray: true,
      fromType: "DI__Plane",
      xsdType: "type found from namespace with declaration name 'di'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNPlane",
      xsdType: "xsd:QName"
    }
  },
  "BPMNDI__BPMNEdge__extension": {},
  "BPMNDI__BPMNEdge": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNEdge__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "di:waypoint": {
      type: "DC__Point",
      isArray: true,
      fromType: "DI__Edge",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_sourceElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_targetElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_messageVisibleKind": {
      type: "BPMNDI__MessageVisibleKind",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "bpmndi:BPMNLabel": {
      type: "BPMNDI__BPMNLabel",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNShape__extension": {},
  "BPMNDI__BPMNShape": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNShape__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "dc:Bounds": {
      type: "DC__Bounds",
      isArray: false,
      fromType: "DI__Shape",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:QName"
    },
    "@_isHorizontal": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isExpanded": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isMarkerVisible": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isMessageVisible": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_participantBandKind": {
      type: "BPMNDI__ParticipantBandKind",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "@_choreographyActivityShape": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:QName"
    },
    "bpmndi:BPMNLabel": {
      type: "BPMNDI__BPMNLabel",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNLabel__extension": {},
  "BPMNDI__BPMNLabel": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNLabel__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "dc:Bounds": {
      type: "DC__Bounds",
      isArray: false,
      fromType: "DI__Label",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_labelStyle": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNLabel",
      xsdType: "xsd:QName"
    }
  },
  "BPMNDI__BPMNLabelStyle": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__Style",
      xsdType: "xsd:ID"
    },
    "dc:Font": {
      type: "DC__Font",
      isArray: false,
      fromType: "BPMNDI__BPMNLabelStyle",
      xsdType: "type found from namespace with declaration name 'dc'."
    }
  },
  "DC__Font": {
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:string"
    },
    "@_size": {
      type: "float",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:double"
    },
    "@_isBold": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isItalic": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isUnderline": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isStrikeThrough": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    }
  },
  "DC__Point": {
    "@_x": {
      type: "float",
      isArray: false,
      fromType: "DC__Point",
      xsdType: "xsd:double"
    },
    "@_y": {
      type: "float",
      isArray: false,
      fromType: "DC__Point",
      xsdType: "xsd:double"
    }
  },
  "DC__Bounds": {
    "@_x": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_y": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_width": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_height": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    }
  },
  "DI__DiagramElement__extension": {},
  "DI__Node__extension": {},
  "DI__Edge__extension": {},
  "DI__LabeledEdge__extension": {},
  "DI__Shape__extension": {},
  "DI__LabeledShape__extension": {},
  "DI__Label__extension": {},
  "DI__Plane__extension": {}
};

/***/ }),

/***/ "./src/diagram/BpmnVersionLabel.tsx":
/*!******************************************!*\
  !*** ./src/diagram/BpmnVersionLabel.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BpmnVersionLabel: () => (/* binding */ BpmnVersionLabel)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Label */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Label/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Popover */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Popover/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller */ "../bpmn-marshaller/dist/index.js");





const latestChangelogHref = `https://www.omg.org/spec/BPMN/2.0.2/PDF/changebar`;
function BpmnVersionLabel(props) {
  const label = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__.Label, {
    style: {
      cursor: "pointer",
      position: "absolute",
      bottom: "8px",
      left: "calc(50% - 34px)",
      zIndex: 100
    },
    children: `BPMN ${_kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_2__.BPMN_LATEST_VERSION}`
  }), []);
  if (props.version === _kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_2__.BPMN_LATEST_VERSION) {
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: label
    });
  }
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__.Popover, {
    className: "kie-bpmn-editor--version-popover",
    "aria-label": "BPMN version popover",
    position: _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__.PopoverPosition.top,
    headerContent: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      children: "Version upgraded!"
    }),
    bodyContent: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      children: ["This BPMN was originally imported as BPMN ", props.version, ", but was converted to BPMN ", _kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_2__.BPMN_LATEST_VERSION, " to enable new features.", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("a", {
        href: latestChangelogHref,
        target: "_blank",
        children: ["\u00A0", `See what's new on BPMN ${_kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_2__.BPMN_LATEST_VERSION}`, "."]
      })]
    }),
    children: label
  });
}
try {
    // @ts-ignore
    BpmnVersionLabel.displayName = "BpmnVersionLabel";
    // @ts-ignore
    BpmnVersionLabel.__docgenInfo = { "description": "", "displayName": "BpmnVersionLabel", "props": { "version": { "defaultValue": null, "description": "", "name": "version", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/BpmnVersionLabel.tsx#BpmnVersionLabel"] = { docgenInfo: BpmnVersionLabel.__docgenInfo, name: "BpmnVersionLabel", path: "src/diagram/BpmnVersionLabel.tsx#BpmnVersionLabel" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons,
        variant: task.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isIconExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isIconExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isIconExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isIconExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"task\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/idRandomizer/bpmnIdRandomizer.tsx":
/*!***********************************************!*\
  !*** ./src/idRandomizer/bpmnIdRandomizer.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNewBpmnIdRandomizer: () => (/* binding */ getNewBpmnIdRandomizer)
/* harmony export */ });
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta */ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xml-parser-ts/dist/idRandomizer */ "../xml-parser-ts/dist/idRandomizer.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__);



function getNewBpmnIdRandomizer() {
  return new _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__.XmlParserTsIdRandomizer({
    meta: _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__.meta,
    elements: _kie_tools_bpmn_marshaller_dist_schemas_bpmn_2_0_ts_gen_meta__WEBPACK_IMPORTED_MODULE_0__.elements,
    newIdGenerator: _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__.generateUuid
  });
}

/***/ }),

/***/ "./src/propertiesPanel/GlobalProperties.tsx":
/*!**************************************************!*\
  !*** ./src/propertiesPanel/GlobalProperties.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GlobalProperties: () => (/* binding */ GlobalProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/ToggleGroup */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/ToggleGroup/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextInput */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextInput/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Checkbox */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Checkbox/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextArea */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextArea/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextArea__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Modal */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Modal/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var _patternfly_react_core_dist_js_components_ClipboardCopy__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/ClipboardCopy */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/ClipboardCopy/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_ClipboardCopy__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_ClipboardCopy__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/times-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_sync_alt_icon__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/sync-alt-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/sync-alt-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_data_source_icon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/data-source-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/data-source-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_people_carry_icon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/people-carry-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/people-carry-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_columns_icon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/columns-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/columns-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_tag_icon__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/tag-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/tag-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_import_icon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/import-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/import-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/edit-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/edit-icon.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader */ "../xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader.js");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _metadata_Metadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./metadata/Metadata */ "./src/propertiesPanel/metadata/Metadata.tsx");
/* harmony import */ var _imports_Imports__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./imports/Imports */ "./src/propertiesPanel/imports/Imports.tsx");
/* harmony import */ var _correlations_Correlations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./correlations/Correlations */ "./src/propertiesPanel/correlations/Correlations.tsx");
/* harmony import */ var _slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./slaDueDate/SlaDueDateInput */ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx");
/* harmony import */ var _variables_VariablesFormSection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./variables/VariablesFormSection */ "./src/propertiesPanel/variables/VariablesFormSection.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_18__);






























function GlobalProperties() {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
  const thisBpmn = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.bpmn);
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.settings);
  const process = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => {
    var _a;
    return (_a = s.bpmn.model.definitions.rootElement) === null || _a === void 0 ? void 0 : _a.find(s => s.__$$element === "process");
  });
  const correlationCount = (_b = (_a = process === null || process === void 0 ? void 0 : process.correlationSubscription) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
  const importsCount = (_e = (_d = (_c = process === null || process === void 0 ? void 0 : process.extensionElements) === null || _c === void 0 ? void 0 : _c["drools:import"]) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0;
  const metadataEntriesCount = (_h = (_g = (_f = process === null || process === void 0 ? void 0 : process.extensionElements) === null || _f === void 0 ? void 0 : _f["drools:metaData"]) === null || _g === void 0 ? void 0 : _g.length) !== null && _h !== void 0 ? _h : 0;
  const [isGlobalSectionExpanded, setGlobalSectionExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);
  const [isImportsSectionExpanded, setImportsSectionExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [isMetadataSectionExpanded, setMetadataSectionExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [isIdNamespaceSectionExpanded, setIdNamespaceSectionExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [isMiscSectionExpanded, setMiscSectionExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const [showRegenerateIdConfirmationModal, setShowRegenerateIdConfirmationModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [showCorrelationsModal, setShowCorrelationsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const closeCorrelationsModal = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {
    setShowCorrelationsModal(false);
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.Form, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: true,
          isSectionExpanded: isGlobalSectionExpanded,
          toogleSectionExpanded: () => setGlobalSectionExpanded(prev => !prev),
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_data_source_icon__WEBPACK_IMPORTED_MODULE_11__.DataSourceIcon, {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Process",
          action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.Button, {
            title: "Close",
            variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.ButtonVariant.plain,
            onClick: () => {
              bpmnEditorStoreApi.setState(state => {
                state.propertiesPanel.isOpen = false;
              });
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_13__.TimesIcon, {})
          })
        }),
        children: isGlobalSectionExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
            style: {
              paddingLeft: "20px",
              marginTop: "20px"
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Name",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__.TextInput, {
                "aria-label": "Name",
                type: "text",
                isDisabled: settings.isReadOnly,
                placeholder: "Enter a name...",
                value: process === null || process === void 0 ? void 0 : process["@_name"],
                onChange: newName => bpmnEditorStoreApi.setState(s => {
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  process["@_name"] = newName;
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Documentation",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea__WEBPACK_IMPORTED_MODULE_16__.TextArea, {
                "aria-label": "Documentation",
                type: "text",
                isDisabled: settings.isReadOnly,
                style: {
                  resize: "vertical",
                  minHeight: "40px"
                },
                rows: 3,
                placeholder: "Enter documentation...",
                value: (_j = process === null || process === void 0 ? void 0 : process.documentation) === null || _j === void 0 ? void 0 : _j[0].__$$text,
                onChange: newDocumentation => bpmnEditorStoreApi.setState(s => {
                  var _a;
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  (_a = process.documentation) !== null && _a !== void 0 ? _a : process.documentation = [];
                  process.documentation[0] = {
                    "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_17__.generateUuid)(),
                    __$$text: newDocumentation
                  };
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_18__.Divider, {
              inset: {
                default: "insetXs"
              }
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              fieldId: "kie-bpmn-editor--global-properties-panel--adhoc",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_19__.Checkbox, {
                label: "Ad-hoc",
                id: "kie-bpmn-editor--global-properties-panel--adhoc",
                name: "is-adhoc",
                "aria-label": "Adhoc",
                isChecked: (_k = process === null || process === void 0 ? void 0 : process["@_drools:adHoc"]) !== null && _k !== void 0 ? _k : false,
                onChange: checked => {
                  bpmnEditorStoreApi.setState(s => {
                    const {
                      process
                    } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                      definitions: s.bpmn.model.definitions
                    });
                    process["@_drools:adHoc"] = checked;
                  });
                }
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__.SlaDueDateInput, {
              element: process
            })]
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: true,
          isSectionExpanded: isImportsSectionExpanded,
          toogleSectionExpanded: () => setImportsSectionExpanded(prev => !prev),
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_import_icon__WEBPACK_IMPORTED_MODULE_20__.ImportIcon, {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Imports" + (importsCount > 0 ? ` (${importsCount})` : "")
        }),
        children: isImportsSectionExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
            style: {
              paddingLeft: "20px",
              marginTop: "20px",
              gap: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_imports_Imports__WEBPACK_IMPORTED_MODULE_6__.Imports, {
              p: process
            })
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_variables_VariablesFormSection__WEBPACK_IMPORTED_MODULE_9__.VariablesFormSection, {
        p: process
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: "modal",
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_people_carry_icon__WEBPACK_IMPORTED_MODULE_21__.PeopleCarryIcon, {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Collaboration" + (correlationCount > 0 ? ` (${correlationCount})` : ""),
          toogleSectionExpanded: () => setShowCorrelationsModal(true),
          action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.Button, {
            title: "Manage",
            variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.ButtonVariant.plain,
            isDisabled: settings.isReadOnly,
            onClick: () => setShowCorrelationsModal(true),
            style: {
              paddingBottom: 0,
              paddingTop: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_22__.EditIcon, {})
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: true,
          isSectionExpanded: isMetadataSectionExpanded,
          toogleSectionExpanded: () => setMetadataSectionExpanded(prev => !prev),
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_columns_icon__WEBPACK_IMPORTED_MODULE_23__.ColumnsIcon, {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Metadata" + (metadataEntriesCount > 0 ? ` (${metadataEntriesCount})` : "")
        }),
        children: isMetadataSectionExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
            style: {
              paddingLeft: "20px",
              marginTop: "20px",
              gap: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_metadata_Metadata__WEBPACK_IMPORTED_MODULE_5__.Metadata, {
              obj: process
            })
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: true,
          isSectionExpanded: isIdNamespaceSectionExpanded,
          toogleSectionExpanded: () => setIdNamespaceSectionExpanded(prev => !prev),
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_tag_icon__WEBPACK_IMPORTED_MODULE_24__.TagIcon, {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "ID & Namespace",
          action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.Button, {
            title: "Re-generate ID & Namespace",
            variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.ButtonVariant.plain,
            isDisabled: settings.isReadOnly,
            onClick: () => setShowRegenerateIdConfirmationModal(true),
            style: {
              paddingBottom: 0,
              paddingTop: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_sync_alt_icon__WEBPACK_IMPORTED_MODULE_25__.SyncAltIcon, {})
          })
        }),
        children: isIdNamespaceSectionExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
            style: {
              paddingLeft: "20px",
              marginTop: "20px"
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "ID",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ClipboardCopy__WEBPACK_IMPORTED_MODULE_26__.ClipboardCopy, {
                placeholder: "Enter an ID...",
                isReadOnly: settings.isReadOnly,
                hoverTip: "Copy",
                clickTip: "Copied",
                onChange: newId => {
                  bpmnEditorStoreApi.setState(state => {
                    state.bpmn.model.definitions["@_id"] = `${newId}`;
                  });
                },
                children: thisBpmn.model.definitions["@_id"]
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Namespace",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ClipboardCopy__WEBPACK_IMPORTED_MODULE_26__.ClipboardCopy, {
                placeholder: "Enter a Namespace...",
                isReadOnly: settings.isReadOnly,
                hoverTip: "Copy",
                clickTip: "Copied",
                onChange: newNamespace => {
                  bpmnEditorStoreApi.setState(state => {
                    state.bpmn.model.definitions["@_targetNamespace"] = `${newNamespace}`;
                  });
                },
                children: thisBpmn.model.definitions["@_targetNamespace"]
              })
            })]
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
          expands: true,
          isSectionExpanded: isMiscSectionExpanded,
          toogleSectionExpanded: () => setMiscSectionExpanded(prev => !prev),
          title: "Misc."
        }),
        children: isMiscSectionExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormSection, {
            style: {
              paddingLeft: "20px",
              marginTop: "20px"
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Expression language",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__.TextInput, {
                "aria-label": "Expression language",
                type: "text",
                isDisabled: settings.isReadOnly,
                placeholder: "Enter an expression language...",
                value: thisBpmn.model.definitions["@_expressionLanguage"],
                onChange: newExprLang => bpmnEditorStoreApi.setState(state => {
                  state.bpmn.model.definitions["@_expressionLanguage"] = newExprLang;
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Type",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27__.ToggleGroup, {
                isCompact: true,
                "aria-label": "Process type",
                children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27__.ToggleGroupItem, {
                  text: "Private",
                  isDisabled: settings.isReadOnly,
                  isSelected: (process === null || process === void 0 ? void 0 : process["@_processType"]) === "Private",
                  onChange: () => {
                    bpmnEditorStoreApi.setState(s => {
                      const {
                        process
                      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                        definitions: s.bpmn.model.definitions
                      });
                      process["@_processType"] = "Private";
                    });
                  }
                }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_ToggleGroup__WEBPACK_IMPORTED_MODULE_27__.ToggleGroupItem, {
                  text: "Public",
                  isDisabled: settings.isReadOnly,
                  isSelected: (process === null || process === void 0 ? void 0 : process["@_processType"]) === "Public",
                  onChange: () => {
                    bpmnEditorStoreApi.setState(s => {
                      const {
                        process
                      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                        definitions: s.bpmn.model.definitions
                      });
                      process["@_processType"] = "Public";
                    });
                  }
                })]
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              fieldId: "kie-bpmn-editor--global-properties-panel--executable",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_19__.Checkbox, {
                label: "Executable",
                id: "kie-bpmn-editor--global-properties-panel--executable",
                name: "is-executable",
                "aria-label": "Executable",
                isChecked: (_l = process === null || process === void 0 ? void 0 : process["@_isExecutable"]) !== null && _l !== void 0 ? _l : true,
                onChange: checked => {
                  bpmnEditorStoreApi.setState(s => {
                    const {
                      process
                    } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                      definitions: s.bpmn.model.definitions
                    });
                    process["@_isExecutable"] = checked;
                  });
                }
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Package name",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__.TextInput, {
                "aria-label": "Package name",
                type: "text",
                isDisabled: settings.isReadOnly,
                rows: 3,
                placeholder: "Enter a package name...",
                value: process === null || process === void 0 ? void 0 : process["@_drools:packageName"],
                onChange: newPackageName => bpmnEditorStoreApi.setState(s => {
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  process["@_drools:packageName"] = newPackageName;
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Version",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_14__.TextInput, {
                "aria-label": "Version",
                type: "text",
                isDisabled: settings.isReadOnly,
                placeholder: "Enter a version...",
                value: process === null || process === void 0 ? void 0 : process["@_drools:version"],
                onChange: newVersion => bpmnEditorStoreApi.setState(s => {
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  process["@_drools:version"] = newVersion;
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormGroup, {
              label: "Process Instance Description",
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea__WEBPACK_IMPORTED_MODULE_16__.TextArea, {
                "aria-label": "Process Instance Description",
                type: "text",
                isDisabled: settings.isReadOnly,
                style: {
                  resize: "vertical",
                  minHeight: "40px"
                },
                rows: 3,
                placeholder: "Enter a description...",
                value: (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_4__.parseBpmn20Drools10MetaData)(process).get("customDescription"),
                onChange: newDescription => bpmnEditorStoreApi.setState(s => {
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_15__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_4__.setBpmn20Drools10MetaData)(process, "customDescription", newDescription);
                })
              })
            })]
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_correlations_Correlations__WEBPACK_IMPORTED_MODULE_7__.Correlations, {
        isOpen: showCorrelationsModal,
        onClose: closeCorrelationsModal
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_28__.Modal, {
        "aria-labelledby": "Regenerate ID & Namespace",
        variant: _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_28__.ModalVariant.small,
        isOpen: showRegenerateIdConfirmationModal,
        onClose: () => setShowRegenerateIdConfirmationModal(false),
        actions: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.Button, {
          variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.ButtonVariant.primary,
          isDisabled: settings.isReadOnly,
          onClick: () => {
            setShowRegenerateIdConfirmationModal(false);
            bpmnEditorStoreApi.setState(state => {
              state.bpmn.model.definitions["@_id"] = (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_17__.generateUuid)();
              state.bpmn.model.definitions["@_targetNamespace"] = `https://kie.apache.org/bpmn/${(0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_17__.generateUuid)()}`;
            });
          },
          children: "Yes, re-generate ID and Namespace"
        }, "confirm"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_12__.Button, {
          variant: "link",
          onClick: () => setShowRegenerateIdConfirmationModal(false),
          children: "Cancel"
        }, "cancel")],
        children: ["Re-generating the ID and Namespace of a BPMN file will potentially break references to it.", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), "Are you sure you want to continue?"]
      })]
    })
  });
}

/***/ }),

/***/ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx":
/*!*******************************************************************************!*\
  !*** ./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdhocAutostartCheckbox: () => (/* binding */ AdhocAutostartCheckbox)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Checkbox */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Checkbox/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _AdhocAutostartCheckbox_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AdhocAutostartCheckbox.css */ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.css");








function AdhocAutostartCheckbox(_ref) {
  let {
    element
  } = _ref;
  var _a;
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormGroup, {
    fieldId: "kie-bpmn-editor--properties-panel--adhoc-auto-start",
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__.Checkbox, {
      label: "Ad-hoc auto-start",
      id: "kie-bpmn-editor--properties-panel--adhoc-auto-start",
      name: "is-adhoc-auto-start",
      "aria-label": "Ad-hoc auto-start",
      isDisabled: isReadOnly,
      isChecked: ((_a = (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.parseBpmn20Drools10MetaData)(element).get("customAutoStart")) !== null && _a !== void 0 ? _a : "false") === "true",
      onChange: checked => {
        bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_6__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_7__.visitFlowElementsAndArtifacts)(process, _ref2 => {
            let {
              element: e
            } = _ref2;
            if (e["@_id"] === element["@_id"] && e.__$$element === element.__$$element) {
              (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(e, "customAutoStart", `${checked}`);
            }
          });
        });
      }
    })
  });
}
try {
    // @ts-ignore
    AdhocAutostartCheckbox.displayName = "AdhocAutostartCheckbox";
    // @ts-ignore
    AdhocAutostartCheckbox.__docgenInfo = { "description": "", "displayName": "AdhocAutostartCheckbox", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithAdhocAutostart" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx#AdhocAutostartCheckbox"] = { docgenInfo: AdhocAutostartCheckbox.__docgenInfo, name: "AdhocAutostartCheckbox", path: "src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx#AdhocAutostartCheckbox" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx":
/*!*************************************************************!*\
  !*** ./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncCheckbox: () => (/* binding */ AsyncCheckbox)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Checkbox */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Checkbox/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _AsyncCheckbox_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AsyncCheckbox.css */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.css");








function AsyncCheckbox(_ref) {
  let {
    element
  } = _ref;
  var _a;
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormGroup, {
    fieldId: "kie-bpmn-editor--properties-panel--async",
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_5__.Checkbox, {
      label: "Async",
      id: "kie-bpmn-editor--properties-panel--async",
      name: "is-async",
      "aria-label": "Async",
      isChecked: ((_a = (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.parseBpmn20Drools10MetaData)(element).get("customAsync")) !== null && _a !== void 0 ? _a : "false") === "true",
      onChange: checked => {
        bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_6__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_7__.visitFlowElementsAndArtifacts)(process, _ref2 => {
            let {
              element: e
            } = _ref2;
            if (e["@_id"] === element["@_id"] && e.__$$element === element.__$$element) {
              (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(e, "customAsync", `${checked}`);
            }
          });
        });
      }
    })
  });
}
try {
    // @ts-ignore
    AsyncCheckbox.displayName = "AsyncCheckbox";
    // @ts-ignore
    AsyncCheckbox.__docgenInfo = { "description": "", "displayName": "AsyncCheckbox", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithAsync" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx#AsyncCheckbox"] = { docgenInfo: AsyncCheckbox.__docgenInfo, name: "AsyncCheckbox", path: "src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx#AsyncCheckbox" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/metadata/Metadata.tsx":
/*!***************************************************!*\
  !*** ./src/propertiesPanel/metadata/Metadata.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Metadata: () => (/* binding */ Metadata)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension */ "../bpmn-marshaller/dist/drools-extension.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/Button.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _emptyState_PropertiesPanelListEmptyState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../emptyState/PropertiesPanelListEmptyState */ "./src/propertiesPanel/emptyState/PropertiesPanelListEmptyState.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Grid */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Grid/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/plus-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/times-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js");
/* harmony import */ var _Metadata_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Metadata.css */ "./src/propertiesPanel/metadata/Metadata.css");













function Metadata(_ref) {
  let {
    obj
  } = _ref;
  var _a, _b, _c, _d, _e;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_3__.useBpmnEditorStoreApi)();
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_3__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const addButton = (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
    variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
    style: {
      paddingLeft: 0
    },
    onClick: () => {
      bpmnEditorStoreApi.setState(s => {
        const {
          process
        } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
          definitions: s.bpmn.model.definitions
        });
        if (!obj || process["@_id"] === (obj === null || obj === void 0 ? void 0 : obj["@_id"])) {
          (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.addBpmn20Drools10MetaData)(process, "", "");
        } else {
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitFlowElementsAndArtifacts)(process, _ref2 => {
            let {
              element
            } = _ref2;
            if (element["@_id"] === (obj === null || obj === void 0 ? void 0 : obj["@_id"])) {
              (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.addBpmn20Drools10MetaData)(element, "", "");
            }
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitLanes)(process, _ref3 => {
            let {
              lane
            } = _ref3;
            if (lane["@_id"] === obj["@_id"]) {
              (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.addBpmn20Drools10MetaData)(lane, "", "");
            }
          });
        }
      });
    },
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_10__.PlusCircleIcon, {})
  }), [bpmnEditorStoreApi, obj]);
  const entryStyle = {
    padding: "4px",
    margin: "8px",
    width: "calc(100% - 2 * 4px - 2 * 8px)"
  };
  const [hoveredIndex, setHoveredIndex] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(undefined);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: ((_c = (_b = (_a = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _a === void 0 ? void 0 : _a["drools:metaData"]) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : 0) > 0 && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.Grid, {
          md: 6,
          style: {
            alignItems: "center"
          },
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 5,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: entryStyle,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                children: "Name"
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 6,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: entryStyle,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                children: "Value"
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 1,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: {
                textAlign: "right"
              },
              children: !isReadOnly && addButton
            })
          })]
        })
      }), (_e = (_d = obj === null || obj === void 0 ? void 0 : obj.extensionElements) === null || _d === void 0 ? void 0 : _d["drools:metaData"]) === null || _e === void 0 ? void 0 : _e.map((entry, i) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.Grid, {
          md: 6,
          className: "kie-bpmn-editor--properties-panel--metadata-entry",
          onMouseEnter: () => setHoveredIndex(i),
          onMouseLeave: () => setHoveredIndex(undefined),
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 5,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
              autoFocus: true,
              style: entryStyle,
              type: "text",
              placeholder: "Name...",
              value: entry["@_name"],
              onChange: e => bpmnEditorStoreApi.setState(s => {
                const {
                  process
                } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                  definitions: s.bpmn.model.definitions
                });
                if (process["@_id"] === obj["@_id"]) {
                  (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.renameBpmn20Drools10MetaDataEntry)(process, i, e.target.value);
                } else {
                  (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitFlowElementsAndArtifacts)(process, _ref4 => {
                    let {
                      element
                    } = _ref4;
                    if (element["@_id"] === obj["@_id"]) {
                      (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.renameBpmn20Drools10MetaDataEntry)(element, i, e.target.value);
                    }
                  });
                  (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitLanes)(process, _ref5 => {
                    let {
                      lane
                    } = _ref5;
                    if (lane["@_id"] === obj["@_id"]) {
                      (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.renameBpmn20Drools10MetaDataEntry)(lane, i, e.target.value);
                    }
                  });
                }
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 6,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
              style: entryStyle,
              type: "text",
              placeholder: "Value...",
              value: entry["drools:metaValue"].__$$text,
              onChange: e => bpmnEditorStoreApi.setState(s => {
                const {
                  process
                } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                  definitions: s.bpmn.model.definitions
                });
                if (process["@_id"] === obj["@_id"]) {
                  (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(process, i, e.target.value);
                } else {
                  (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitFlowElementsAndArtifacts)(process, _ref6 => {
                    let {
                      element
                    } = _ref6;
                    if (element["@_id"] === obj["@_id"]) {
                      (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(element, i, e.target.value);
                    }
                  });
                  (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitLanes)(process, _ref7 => {
                    let {
                      lane
                    } = _ref7;
                    if (lane["@_id"] === obj["@_id"]) {
                      (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(lane, i, e.target.value);
                    }
                  });
                }
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_11__.GridItem, {
            span: 1,
            style: {
              textAlign: "right"
            },
            children: hoveredIndex === i && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
              tabIndex: 9999,
              variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
              style: {
                paddingLeft: 0
              },
              onClick: () => {
                bpmnEditorStoreApi.setState(s => {
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  if (process["@_id"] === obj["@_id"]) {
                    (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.deleteBpmn20Drools10MetaDataEntry)(process, i);
                  } else {
                    (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitFlowElementsAndArtifacts)(process, _ref8 => {
                      let {
                        element
                      } = _ref8;
                      if (element["@_id"] === obj["@_id"]) {
                        (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.deleteBpmn20Drools10MetaDataEntry)(element, i);
                      }
                    });
                    (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitLanes)(process, _ref9 => {
                      let {
                        lane
                      } = _ref9;
                      if (lane["@_id"] === obj["@_id"]) {
                        (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.deleteBpmn20Drools10MetaDataEntry)(lane, i);
                      }
                    });
                  }
                });
              },
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_12__.TimesIcon, {})
            })
          })]
        })
      }, i))]
    }) || (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      style: {
        position: "relative"
      },
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_emptyState_PropertiesPanelListEmptyState__WEBPACK_IMPORTED_MODULE_4__.PropertiesPanelListEmptyState, {}), !isReadOnly && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
          style: {
            position: "absolute",
            top: "calc(50% - 16px)",
            right: "0"
          },
          children: addButton
        })
      })]
    })
  });
}
try {
    // @ts-ignore
    Metadata.displayName = "Metadata";
    // @ts-ignore
    Metadata.__docgenInfo = { "description": "", "displayName": "Metadata", "props": { "obj": { "defaultValue": null, "description": "", "name": "obj", "required": true, "type": { "name": "{ \"@_id\": string; extensionElements?: WithMetaData | undefined; } | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/metadata/Metadata.tsx#Metadata"] = { docgenInfo: Metadata.__docgenInfo, name: "Metadata", path: "src/propertiesPanel/metadata/Metadata.tsx#Metadata" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/singleNodeProperties/AdHocSubProcessProperties.tsx":
/*!********************************************************************************!*\
  !*** ./src/propertiesPanel/singleNodeProperties/AdHocSubProcessProperties.tsx ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdHocSubProcessProperties: () => (/* binding */ AdHocSubProcessProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nameDocumentationAndId/NameDocumentationAndId */ "./src/propertiesPanel/nameDocumentationAndId/NameDocumentationAndId.tsx");
/* harmony import */ var _onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../onEntryAndExitScripts/OnEntryAndExitScriptsFormSection */ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx");
/* harmony import */ var _diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../diagram/nodes/NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_PropertiesPanelHeaderFormSection */ "./src/propertiesPanel/singleNodeProperties/_PropertiesPanelHeaderFormSection.tsx");
/* harmony import */ var _variables_VariablesFormSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../variables/VariablesFormSection */ "./src/propertiesPanel/variables/VariablesFormSection.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../codeInput/CodeInput */ "./src/propertiesPanel/codeInput/CodeInput.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/FormSelect */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/FormSelect/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_FormSelect__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../adhocAutostartCheckbox/AdhocAutostartCheckbox */ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx");
/* harmony import */ var _slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../slaDueDate/SlaDueDateInput */ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx");
/* harmony import */ var _asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../asyncCheckbox/AsyncCheckbox */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx");

















function AdHocSubProcessProperties(_ref) {
  let {
    adHocSubProcess
  } = _ref;
  var _a;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_5__.PropertiesPanelHeaderFormSection, {
      title: adHocSubProcess["@_name"] || "Ad-hoc sub-process",
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_4__.SubProcessIcon, {}),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__.NameDocumentationAndId, {
        element: adHocSubProcess
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_12__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_10__.SlaDueDateInput, {
        element: adHocSubProcess
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_11__.AsyncCheckbox, {
        element: adHocSubProcess
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_12__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_7__.CodeInput, {
        label: "Ad-hoc activation condition",
        languages: ["Drools"],
        value: (_a = (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__.parseBpmn20Drools10MetaData)(adHocSubProcess).get("customActivationCondition")) !== null && _a !== void 0 ? _a : "",
        onChange: newCode => {
          bpmnEditorStoreApi(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_13__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_14__.visitFlowElementsAndArtifacts)(process, _ref2 => {
              let {
                element: e
              } = _ref2;
              if (e["@_id"] === adHocSubProcess["@_id"] && e.__$$element === adHocSubProcess.__$$element) {
                (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__.setBpmn20Drools10MetaData)(e, "customActivationCondition", newCode);
              }
            });
          });
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_7__.CodeInput, {
        label: "Ad-hoc completion condition",
        languages: ["MVEL", "Drools"],
        value: "",
        onChange: newCode => {}
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_15__.FormGroup, {
        label: "Ad-hoc ordering",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect__WEBPACK_IMPORTED_MODULE_16__.FormSelect, {
          id: "select",
          value: undefined,
          isDisabled: isReadOnly,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect__WEBPACK_IMPORTED_MODULE_16__.FormSelectOption, {
            id: "none",
            isPlaceholder: true,
            label: "-- None --"
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_9__.AdhocAutostartCheckbox, {
        element: adHocSubProcess
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_variables_VariablesFormSection__WEBPACK_IMPORTED_MODULE_6__.VariablesFormSection, {
      p: adHocSubProcess
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_3__.OnEntryAndExitScriptsFormSection, {
      element: adHocSubProcess
    })]
  });
}
try {
    // @ts-ignore
    AdHocSubProcessProperties.displayName = "AdHocSubProcessProperties";
    // @ts-ignore
    AdHocSubProcessProperties.__docgenInfo = { "description": "", "displayName": "AdHocSubProcessProperties", "props": { "adHocSubProcess": { "defaultValue": null, "description": "", "name": "adHocSubProcess", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/singleNodeProperties/AdHocSubProcessProperties.tsx#AdHocSubProcessProperties"] = { docgenInfo: AdHocSubProcessProperties.__docgenInfo, name: "AdHocSubProcessProperties", path: "src/propertiesPanel/singleNodeProperties/AdHocSubProcessProperties.tsx#AdHocSubProcessProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/singleNodeProperties/CallActivityProperties.tsx":
/*!*****************************************************************************!*\
  !*** ./src/propertiesPanel/singleNodeProperties/CallActivityProperties.tsx ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CallActivityProperties: () => (/* binding */ CallActivityProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nameDocumentationAndId/NameDocumentationAndId */ "./src/propertiesPanel/nameDocumentationAndId/NameDocumentationAndId.tsx");
/* harmony import */ var _assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assignments/AssignmentsFormSection */ "./src/propertiesPanel/assignments/AssignmentsFormSection.tsx");
/* harmony import */ var _onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../onEntryAndExitScripts/OnEntryAndExitScriptsFormSection */ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx");
/* harmony import */ var _diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../diagram/nodes/NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_PropertiesPanelHeaderFormSection */ "./src/propertiesPanel/singleNodeProperties/_PropertiesPanelHeaderFormSection.tsx");
/* harmony import */ var _calledElementSelector_CalledElementSelector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../calledElementSelector/CalledElementSelector */ "./src/propertiesPanel/calledElementSelector/CalledElementSelector.tsx");
/* harmony import */ var _multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../multiInstance/MultiInstanceProperties */ "./src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Checkbox */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Checkbox/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../asyncCheckbox/AsyncCheckbox */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx");
/* harmony import */ var _slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../slaDueDate/SlaDueDateInput */ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx");
/* harmony import */ var _multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../multiInstanceCheckbox/MultiInstanceCheckbox */ "./src/propertiesPanel/multiInstanceCheckbox/MultiInstanceCheckbox.tsx");


















function CallActivityProperties(_ref) {
  let {
    callActivity
  } = _ref;
  var _a, _b, _c, _d;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__.PropertiesPanelHeaderFormSection, {
      title: callActivity["@_name"] || "Call activity",
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__.CallActivityIcon, {}),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__.NameDocumentationAndId, {
        element: callActivity
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_calledElementSelector_CalledElementSelector__WEBPACK_IMPORTED_MODULE_7__.CalledElementSelector, {
        element: callActivity
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14__.FormGroup, {
        fieldId: "kie-bpmn-editor--properties-panel--call-activity--independent",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15__.Checkbox, {
          label: "Independent",
          id: "kie-bpmn-editor--properties-panel--call-activity--independent",
          name: "is-independent",
          "aria-label": "Independent",
          isChecked: (_a = callActivity["@_drools:independent"]) !== null && _a !== void 0 ? _a : false,
          onChange: checked => {
            bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_16__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_17__.visitFlowElementsAndArtifacts)(process, _ref2 => {
                let {
                  element
                } = _ref2;
                if (element["@_id"] === callActivity["@_id"] && element.__$$element === callActivity.__$$element) {
                  element["@_drools:independent"] = checked;
                }
              });
            });
          }
        })
      }), !(callActivity["@_drools:independent"] === true) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14__.FormGroup, {
        fieldId: "kie-bpmn-editor--properties-panel--call-activity--abort-parent",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15__.Checkbox, {
          label: "Abort parent",
          id: "kie-bpmn-editor--properties-panel--call-activity--abort-parent",
          name: "should-abort-parent",
          "aria-label": "Abort parent",
          isChecked: ((_b = (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_9__.parseBpmn20Drools10MetaData)(callActivity).get("customAbortParent")) !== null && _b !== void 0 ? _b : "true") === "true",
          onChange: checked => {
            bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_16__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_17__.visitFlowElementsAndArtifacts)(process, _ref3 => {
                let {
                  element: e
                } = _ref3;
                if (e["@_id"] === callActivity["@_id"] && e.__$$element === callActivity.__$$element) {
                  (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_9__.setBpmn20Drools10MetaData)(e, "customAbortParent", `${checked}`);
                }
              });
            });
          }
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_14__.FormGroup, {
        fieldId: "kie-bpmn-editor--properties-panel--call-activity--wait-for-completion",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Checkbox__WEBPACK_IMPORTED_MODULE_15__.Checkbox, {
          label: "Wait for completion",
          id: "kie-bpmn-editor--properties-panel--call-activity--wait-for-completion",
          name: "should-wait-for-completion",
          "aria-label": "Wait for completion",
          isChecked: (_c = callActivity["@_drools:waitForCompletion"]) !== null && _c !== void 0 ? _c : true,
          onChange: checked => {
            bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_16__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_17__.visitFlowElementsAndArtifacts)(process, _ref4 => {
                let {
                  element: e
                } = _ref4;
                if (e["@_id"] === callActivity["@_id"] && e.__$$element === callActivity.__$$element) {
                  e["@_drools:waitForCompletion"] = checked;
                }
              });
            });
          }
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_11__.SlaDueDateInput, {
        element: callActivity
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_10__.AsyncCheckbox, {
        element: callActivity
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_13__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_12__.MultiInstanceCheckbox, {
        element: callActivity
      }), ((_d = callActivity.loopCharacteristics) === null || _d === void 0 ? void 0 : _d.__$$element) === "multiInstanceLoopCharacteristics" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_8__.MultiInstanceProperties, {
        element: callActivity
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__.BidirectionalAssignmentsFormSection, {
      element: callActivity
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__.OnEntryAndExitScriptsFormSection, {
      element: callActivity
    })]
  });
}
try {
    // @ts-ignore
    CallActivityProperties.displayName = "CallActivityProperties";
    // @ts-ignore
    CallActivityProperties.__docgenInfo = { "description": "", "displayName": "CallActivityProperties", "props": { "callActivity": { "defaultValue": null, "description": "", "name": "callActivity", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 19 more ...; \"@_drools:waitForCompletion\"?: Namespaced<...> | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/singleNodeProperties/CallActivityProperties.tsx#CallActivityProperties"] = { docgenInfo: CallActivityProperties.__docgenInfo, name: "CallActivityProperties", path: "src/propertiesPanel/singleNodeProperties/CallActivityProperties.tsx#CallActivityProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/singleNodeProperties/ScriptTaskProperties.tsx":
/*!***************************************************************************!*\
  !*** ./src/propertiesPanel/singleNodeProperties/ScriptTaskProperties.tsx ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScriptTaskProperties: () => (/* binding */ ScriptTaskProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nameDocumentationAndId/NameDocumentationAndId */ "./src/propertiesPanel/nameDocumentationAndId/NameDocumentationAndId.tsx");
/* harmony import */ var _PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_PropertiesPanelHeaderFormSection */ "./src/propertiesPanel/singleNodeProperties/_PropertiesPanelHeaderFormSection.tsx");
/* harmony import */ var _diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../diagram/nodes/NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../codeInput/CodeInput */ "./src/propertiesPanel/codeInput/CodeInput.tsx");
/* harmony import */ var _adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../adhocAutostartCheckbox/AdhocAutostartCheckbox */ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx");
/* harmony import */ var _asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../asyncCheckbox/AsyncCheckbox */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");












function ScriptTaskProperties(_ref) {
  let {
    scriptTask
  } = _ref;
  var _a;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_7__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_2__.PropertiesPanelHeaderFormSection, {
      title: scriptTask["@_name"] || "Script task",
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {
        variant: scriptTask.__$$element,
        isIcon: true
      }),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_1__.NameDocumentationAndId, {
        element: scriptTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_9__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_4__.CodeInput, {
        label: "Script",
        languages: ["Java"],
        value: (_a = (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__.parseBpmn20Drools10MetaData)(scriptTask).get("customActivationCondition")) !== null && _a !== void 0 ? _a : "",
        onChange: newScript => {
          bpmnEditorStoreApi(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_10__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_11__.visitFlowElementsAndArtifacts)(process, _ref2 => {
              let {
                element: e
              } = _ref2;
              if (e["@_id"] === scriptTask["@_id"] && e.__$$element === scriptTask.__$$element) {
                (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_8__.setBpmn20Drools10MetaData)(e, "customActivationCondition", newScript);
              }
            });
          });
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_6__.AsyncCheckbox, {
        element: scriptTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_5__.AdhocAutostartCheckbox, {
        element: scriptTask
      })]
    })
  });
}
try {
    // @ts-ignore
    ScriptTaskProperties.displayName = "ScriptTaskProperties";
    // @ts-ignore
    ScriptTaskProperties.__docgenInfo = { "description": "", "displayName": "ScriptTaskProperties", "props": { "scriptTask": { "defaultValue": null, "description": "", "name": "scriptTask", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 18 more ...; script?: ({ ...; } & BPMN20__tScript) | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/singleNodeProperties/ScriptTaskProperties.tsx#ScriptTaskProperties"] = { docgenInfo: ScriptTaskProperties.__docgenInfo, name: "ScriptTaskProperties", path: "src/propertiesPanel/singleNodeProperties/ScriptTaskProperties.tsx#ScriptTaskProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx":
/*!************************************************************!*\
  !*** ./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SlaDueDateInput: () => (/* binding */ SlaDueDateInput)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextInput */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextInput/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");







function SlaDueDateInput(_ref) {
  let {
    element
  } = _ref;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_3__.FormGroup, {
      label: "SLA Due Date",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_4__.TextInput, {
        "aria-label": "SLA Due Date",
        type: "text",
        isDisabled: isReadOnly,
        placeholder: "Enter a date...",
        value: (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(element).get("customSLADueDate"),
        onChange: newSlaDueDate => bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_5__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          if (!element || element["@_id"] === process["@_id"]) {
            (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.setBpmn20Drools10MetaData)(process, "customSLADueDate", newSlaDueDate);
          } else {
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_6__.visitFlowElementsAndArtifacts)(process, _ref2 => {
              let {
                element: e
              } = _ref2;
              if (e["@_id"] === element["@_id"]) {
                (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.setBpmn20Drools10MetaData)(element, "customSLADueDate", newSlaDueDate);
              }
            });
          }
        })
      })
    })
  });
}
try {
    // @ts-ignore
    SlaDueDateInput.displayName = "SlaDueDateInput";
    // @ts-ignore
    SlaDueDateInput.__docgenInfo = { "description": "", "displayName": "SlaDueDateInput", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithSlaDueDate" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx#SlaDueDateInput"] = { docgenInfo: SlaDueDateInput.__docgenInfo, name: "SlaDueDateInput", path: "src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx#SlaDueDateInput" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/propertiesPanel/variables/Variables.tsx":
/*!*****************************************************!*\
  !*** ./src/propertiesPanel/variables/Variables.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Variables: () => (/* binding */ Variables)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension */ "../bpmn-marshaller/dist/drools-extension.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/Button.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Grid */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Grid/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/plus-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/times-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _emptyState_PropertiesPanelListEmptyState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../emptyState/PropertiesPanelListEmptyState */ "./src/propertiesPanel/emptyState/PropertiesPanelListEmptyState.tsx");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _Variables_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Variables.css */ "./src/propertiesPanel/variables/Variables.css");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");














function Variables(_ref) {
  let {
    p
  } = _ref;
  var _a, _b, _c;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_4__.useBpmnEditorStoreApi)();
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_4__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const addButton = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
    variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
    style: {
      paddingLeft: 0
    },
    onClick: () => {
      bpmnEditorStoreApi.setState(s => {
        var _a, _b;
        const {
          process
        } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
          definitions: s.bpmn.model.definitions
        });
        if (!p || p["@_id"] === process["@_id"]) {
          (_a = process.property) !== null && _a !== void 0 ? _a : process.property = [];
          (_b = process.property) === null || _b === void 0 ? void 0 : _b.push({
            "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_9__.generateUuid)(),
            "@_name": "",
            "@_itemSubjectRef": ""
          });
        } else {
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__.visitFlowElementsAndArtifacts)(process, _ref2 => {
            let {
              element
            } = _ref2;
            var _a, _b;
            if (element["@_id"] === p["@_id"] && element.__$$element === p.__$$element) {
              (_a = element.property) !== null && _a !== void 0 ? _a : element.property = [];
              (_b = element.property) === null || _b === void 0 ? void 0 : _b.push({
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_9__.generateUuid)(),
                "@_name": "",
                "@_itemSubjectRef": ""
              });
            }
          });
        }
      });
    },
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_11__.PlusCircleIcon, {})
  }), [bpmnEditorStoreApi, p]);
  const entryColumnStyle = {
    padding: "4px",
    margin: "8px",
    width: "calc(100% - 2 * 4px - 2 * 8px)"
  };
  const [hoveredIndex, setHoveredIndex] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(undefined);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: ((_b = (_a = p === null || p === void 0 ? void 0 : p.property) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0 && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.Grid, {
          md: 6,
          style: {
            alignItems: "center"
          },
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 4,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: entryColumnStyle,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                children: "Name"
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 4,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: entryColumnStyle,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                children: "Data type"
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: entryColumnStyle,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                children: "Tags"
              })
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 1,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
              style: {
                textAlign: "right"
              },
              children: !isReadOnly && addButton
            })
          })]
        })
      }), (_c = p === null || p === void 0 ? void 0 : p.property) === null || _c === void 0 ? void 0 : _c.map((entry, i) => {
        var _a;
        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
          style: {
            padding: "0 8px"
          },
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.Grid, {
            md: 6,
            className: "kie-bpmn-editor--properties-panel--variables-entry",
            onMouseEnter: () => setHoveredIndex(i),
            onMouseLeave: () => setHoveredIndex(undefined),
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
              span: 4,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
                autoFocus: true,
                style: entryColumnStyle,
                type: "text",
                placeholder: "Name...",
                value: entry["@_name"],
                onChange: e => bpmnEditorStoreApi.setState(s => {
                  var _a;
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  if (!p || p["@_id"] === process["@_id"]) {
                    if ((_a = process.property) === null || _a === void 0 ? void 0 : _a[i]) {
                      process.property[i]["@_name"] = e.target.value;
                    }
                  } else {
                    (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__.visitFlowElementsAndArtifacts)(process, _ref3 => {
                      let {
                        element
                      } = _ref3;
                      var _a;
                      if (element["@_id"] === p["@_id"] && element.__$$element === p.__$$element) {
                        if ((_a = element.property) === null || _a === void 0 ? void 0 : _a[i]) {
                          element.property[i]["@_name"] = e.target.value;
                        }
                      }
                    });
                  }
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
              span: 4,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
                style: entryColumnStyle,
                type: "text",
                placeholder: "Data type...",
                value: entry["@_itemSubjectRef"],
                onChange: e => bpmnEditorStoreApi.setState(s => {
                  var _a;
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  if (!p || p["@_id"] === process["@_id"]) {
                    if ((_a = process.property) === null || _a === void 0 ? void 0 : _a[i]) {
                      process.property[i]["@_itemSubjectRef"] = e.target.value;
                    }
                  } else {
                    (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__.visitFlowElementsAndArtifacts)(process, _ref4 => {
                      let {
                        element
                      } = _ref4;
                      var _a;
                      if (element["@_id"] === p["@_id"] && element.__$$element === p.__$$element) {
                        if ((_a = element.property) === null || _a === void 0 ? void 0 : _a[i]) {
                          element.property[i]["@_itemSubjectRef"] = e.target.value;
                        }
                      }
                    });
                  }
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
              span: 3,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
                style: entryColumnStyle,
                type: "text",
                placeholder: "Tags...",
                value: (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.parseBpmn20Drools10MetaData)((_a = p.property) === null || _a === void 0 ? void 0 : _a[i]).get("customTags"),
                onChange: e => bpmnEditorStoreApi.setState(s => {
                  var _a, _b, _c;
                  var _d, _e;
                  const {
                    process
                  } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                    definitions: s.bpmn.model.definitions
                  });
                  if (!p || p["@_id"] === process["@_id"]) {
                    if ((_a = process.property) === null || _a === void 0 ? void 0 : _a[i]) {
                      (_b = (_d = process.property[i]).extensionElements) !== null && _b !== void 0 ? _b : _d.extensionElements = {};
                      (_c = (_e = process.property[i].extensionElements)["drools:metaData"]) !== null && _c !== void 0 ? _c : _e["drools:metaData"] = [];
                      (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(process.property[i], "customTags", e.target.value);
                    }
                  } else {
                    (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__.visitFlowElementsAndArtifacts)(process, _ref5 => {
                      let {
                        element
                      } = _ref5;
                      var _a, _b, _c;
                      var _d, _e;
                      if (element["@_id"] === p["@_id"] && element.__$$element === p.__$$element) {
                        if ((_a = element.property) === null || _a === void 0 ? void 0 : _a[i]) {
                          (_b = (_d = element.property[i]).extensionElements) !== null && _b !== void 0 ? _b : _d.extensionElements = {};
                          (_c = (_e = element.property[i].extensionElements)["drools:metaData"]) !== null && _c !== void 0 ? _c : _e["drools:metaData"] = [];
                          (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_2__.setBpmn20Drools10MetaData)(element.property[i], "customTags", e.target.value);
                        }
                      }
                    });
                  }
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
              span: 1,
              style: {
                textAlign: "right"
              },
              children: hoveredIndex === i && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
                tabIndex: 9999,
                variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
                style: {
                  paddingLeft: 0
                },
                onClick: () => {
                  bpmnEditorStoreApi.setState(s => {
                    var _a;
                    const {
                      process
                    } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                      definitions: s.bpmn.model.definitions
                    });
                    if (!p || p["@_id"] === process["@_id"]) {
                      (_a = process.property) === null || _a === void 0 ? void 0 : _a.splice(i, 1);
                    } else {
                      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_10__.visitFlowElementsAndArtifacts)(process, _ref6 => {
                        let {
                          element
                        } = _ref6;
                        var _a;
                        if (element["@_id"] === p["@_id"] && element.__$$element === p.__$$element) {
                          (_a = element.property) === null || _a === void 0 ? void 0 : _a.splice(i, 1);
                        }
                      });
                    }
                  });
                },
                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_13__.TimesIcon, {})
              })
            })]
          })
        }, i);
      })]
    }) || (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      style: {
        position: "relative"
      },
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_emptyState_PropertiesPanelListEmptyState__WEBPACK_IMPORTED_MODULE_5__.PropertiesPanelListEmptyState, {}), !isReadOnly && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
          style: {
            position: "absolute",
            top: "calc(50% - 16px)",
            right: "0"
          },
          children: addButton
        })
      })]
    })
  });
}
try {
    // @ts-ignore
    Variables.displayName = "Variables";
    // @ts-ignore
    Variables.__docgenInfo = { "description": "", "displayName": "Variables", "props": { "p": { "defaultValue": null, "description": "", "name": "p", "required": true, "type": { "name": "WithVariables | undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/variables/Variables.tsx#Variables"] = { docgenInfo: Variables.__docgenInfo, name: "Variables", path: "src/propertiesPanel/variables/Variables.tsx#Variables" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./stories/bpmnEditorStoriesWrapper.tsx":
/*!**********************************************!*\
  !*** ./stories/bpmnEditorStoriesWrapper.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BpmnEditorWrapper: () => (/* binding */ BpmnEditorWrapper)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @storybook/preview-api */ "@storybook/preview-api");
/* harmony import */ var _storybook_preview_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/BpmnEditor */ "./src/BpmnEditor.tsx");
/* harmony import */ var _kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller */ "../bpmn-marshaller/dist/index.js");
/* harmony import */ var _kie_tools_bpmn_editor_dist_normalization_normalize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/bpmn-editor/dist/normalization/normalize */ "./dist/normalization/normalize.js");
/* harmony import */ var deep_object_diff__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! deep-object-diff */ "../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/diff.js");
/* harmony import */ var _misc_empty_Empty_stories__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./misc/empty/Empty.stories */ "./stories/misc/empty/Empty.stories.tsx");








function BpmnEditorWrapper(props) {
  var _a, _b, _c, _d, _e;
  const [args, updateArgs] = (0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__.useArgs)();
  const argsCopy = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(args);
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
  const [modelArgs, setModelArgs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.model);
  const model = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    var _a;
    return (_a = props === null || props === void 0 ? void 0 : props.model) !== null && _a !== void 0 ? _a : modelArgs;
  }, [modelArgs, props === null || props === void 0 ? void 0 : props.model]);
  const [modelChanged, setModelChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const onModelChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (props === null || props === void 0 ? void 0 : props.onModelChange) ? props.onModelChange : setModelArgs, [props === null || props === void 0 ? void 0 : props.onModelChange]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(argsCopy.current.model, model)).length !== 0) {
      updateArgs({
        ...argsCopy.current,
        model: model,
        xml: (0,_kie_tools_bpmn_marshaller__WEBPACK_IMPORTED_MODULE_4__.getMarshaller)((0,_misc_empty_Empty_stories__WEBPACK_IMPORTED_MODULE_6__.generateEmptyBpmn20)(), {
          upgradeTo: "latest"
        }).builder.build(model)
      });
    }
  }, [updateArgs, model]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(argsCopy.current, args)).length === 0) {
      return;
    }
    argsCopy.current = args;
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(args.model, model)).length === 0) {
      return;
    }
    onModelChange((0,_kie_tools_bpmn_editor_dist_normalization_normalize__WEBPACK_IMPORTED_MODULE_5__.normalize)(args.model));
  }, [args, model, onModelChange]);
  const onModelDebounceStateChanged = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(changed => {
    setModelChange(changed);
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [modelChanged && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      "data-testid": "storybook--bpmn-editor-model",
      style: {
        display: "none"
      },
      children: JSON.stringify(model)
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      style: {
        position: "absolute",
        width: "100%",
        height: "100%",
        top: "0px",
        left: "0px"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__.BpmnEditor, {
        ref: ref,
        model: model,
        originalVersion: (_a = props === null || props === void 0 ? void 0 : props.originalVersion) !== null && _a !== void 0 ? _a : args.originalVersion,
        onModelChange: onModelChange,
        externalContextName: (_b = props === null || props === void 0 ? void 0 : props.externalContextName) !== null && _b !== void 0 ? _b : args.externalContextName,
        externalContextDescription: (_c = props === null || props === void 0 ? void 0 : props.externalContextDescription) !== null && _c !== void 0 ? _c : args.externalContextDescription,
        issueTrackerHref: (_d = props === null || props === void 0 ? void 0 : props.issueTrackerHref) !== null && _d !== void 0 ? _d : args.issueTrackerHref,
        onRequestToJumpToPath: (_e = props === null || props === void 0 ? void 0 : props.onRequestToJumpToPath) !== null && _e !== void 0 ? _e : args.onRequestToJumpToPath,
        onModelDebounceStateChanged: onModelDebounceStateChanged
      })
    })]
  });
}
try {
    // @ts-ignore
    BpmnEditorWrapper.displayName = "BpmnEditorWrapper";
    // @ts-ignore
    BpmnEditorWrapper.__docgenInfo = { "description": "", "displayName": "BpmnEditorWrapper", "props": { "model": { "defaultValue": null, "description": "The BPMN itself.", "name": "model", "required": false, "type": { "name": "BpmnLatestModel" } }, "originalVersion": { "defaultValue": null, "description": "The original version of `model` before upgrading to `latest`.", "name": "originalVersion", "required": false, "type": { "name": "enum", "value": [{ "value": "\"2.0\"" }] } }, "onModelChange": { "defaultValue": null, "description": "Called when a change occurs on `model`, so the controlled flow of the component can be done.", "name": "onModelChange", "required": false, "type": { "name": "OnBpmnModelChange" } }, "externalContextName": { "defaultValue": null, "description": "The name of context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use `externalContextName={\"My project\"}`", "name": "externalContextName", "required": false, "type": { "name": "string" } }, "externalContextDescription": { "defaultValue": null, "description": "Describe the context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use\n`externalContextDescription={'All models (DMN, etc) of \"My project\" are available.'}`", "name": "externalContextDescription", "required": false, "type": { "name": "string" } }, "issueTrackerHref": { "defaultValue": null, "description": "A link that will take users to an issue tracker so they can report problems they find on the BPMN Editor.\nThis is shown on the ErrorBoundary fallback component, when an uncaught error happens.", "name": "issueTrackerHref", "required": false, "type": { "name": "string" } }, "onRequestToJumpToPath": { "defaultValue": null, "description": "When users want to jump to another file, this method is called, allowing the controller of this component decide what to do.\nLinks are only rendered if this is provided. Otherwise, paths will be rendered as text.", "name": "onRequestToJumpToPath", "required": false, "type": { "name": "OnRequestToJumpToPath" } }, "onRequestToResolvePath": { "defaultValue": null, "description": "All paths inside the BPMN Editor are relative. To be able to resolve them and display them as absolute paths, this function is called.\nIf undefined, the relative paths will be displayed.", "name": "onRequestToResolvePath", "required": false, "type": { "name": "OnRequestToResolvePath" } }, "onModelDebounceStateChanged": { "defaultValue": null, "description": "Notifies the caller when the BPMN Editor performs a new edit after the debounce time.", "name": "onModelDebounceStateChanged", "required": false, "type": { "name": "((changed: boolean) => void)" } }, "xml": { "defaultValue": null, "description": "", "name": "xml", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["stories/bpmnEditorStoriesWrapper.tsx#BpmnEditorWrapper"] = { docgenInfo: BpmnEditorWrapper.__docgenInfo, name: "BpmnEditorWrapper", path: "stories/bpmnEditorStoriesWrapper.tsx#BpmnEditorWrapper" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,