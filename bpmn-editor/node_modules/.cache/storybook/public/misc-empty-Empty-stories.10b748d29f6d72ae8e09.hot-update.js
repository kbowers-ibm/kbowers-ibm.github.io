"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/messageSelector/MessageSelector.tsx":
/*!*****************************************************************!*\
  !*** ./src/propertiesPanel/messageSelector/MessageSelector.tsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MessageSelector: () => (/* binding */ MessageSelector)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextInput */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextInput/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");







function MessageSelector(_ref) {
  let {
    element
  } = _ref;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.settings);
  const message = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => {
    var _a;
    if (!message) return undefined;
    return (_a = s.bpmn.model.definitions.rootElement) === null || _a === void 0 ? void 0 : _a.find(e => e.__$$element === "message" && e["@_id"] === messageRef);
  });
  const onMessageChanged = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(newMessage => {
    bpmnEditorStoreApi.setState(s => {
      var _a;
      let msgRef = messageRef;
      if (!msgRef) {
        msgRef = `Message_${(0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_3__.generateUuid)()}`;
        if (s.bpmn.model.definitions.rootElement) {
          s.bpmn.model.definitions.rootElement.push({
            __$$element: "message",
            "@_id": msgRef,
            "@_name": newMessage
          });
        }
        (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_4__.updateFlowElement)({
          definitions: s.bpmn.model.definitions,
          id: element["@_id"],
          newFlowElement: {
            messageRef: msgRef
          }
        });
      } else {
        const messageElement = (_a = s.bpmn.model.definitions.rootElement) === null || _a === void 0 ? void 0 : _a.find(e => e.__$$element === "message" && e["@_id"] === msgRef);
        if (messageElement) {
          messageElement["@_name"] = newMessage;
        }
      }
    });
  }, [element, messageRef, bpmnEditorStoreApi]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormSection, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {
      label: "Message",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_6__.TextInput, {
        isDisabled: settings.isReadOnly,
        id: `message-${element["@_id"]}`,
        value: (message === null || message === void 0 ? void 0 : message["@_name"]) || "",
        placeholder: "Enter a message...",
        onChange: onMessageChanged
      })
    })
  });
}
try {
    // @ts-ignore
    MessageSelector.displayName = "MessageSelector";
    // @ts-ignore
    MessageSelector.__docgenInfo = { "description": "", "displayName": "MessageSelector", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithMessage" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/messageSelector/MessageSelector.tsx#MessageSelector"] = { docgenInfo: MessageSelector.__docgenInfo, name: "MessageSelector", path: "src/propertiesPanel/messageSelector/MessageSelector.tsx#MessageSelector" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,