"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/messageSelector/MessageSelector.tsx":
/*!*****************************************************************!*\
  !*** ./src/propertiesPanel/messageSelector/MessageSelector.tsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NameDocumentationAndId: () => (/* binding */ NameDocumentationAndId)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _MessageSelector_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MessageSelector.css */ "./src/propertiesPanel/messageSelector/MessageSelector.css");





function NameDocumentationAndId(_ref) {
  let {
    element
  } = _ref;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.settings);
  const onNameChanged = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(newName => {
    bpmnEditorStoreApi.setState(s => {
      updateFlowElement({
        definitions: s.bpmn.model.definitions,
        id: element["@_id"],
        newFlowElement: {
          "@_name": newName
        }
      });
    });
  }, [element, bpmnEditorStoreApi]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FormSection, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormGroup, {
      label: "Name",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TextInput, {
        isDisabled: settings.isReadOnly,
        id: element["@_id"],
        name: element["@_name"],
        value: element["@_name"],
        placeholder: "Enter a name...",
        onChange: onNameChanged
      })
    })
  });
}
try {
    // @ts-ignore
    NameDocumentationAndId.displayName = "NameDocumentationAndId";
    // @ts-ignore
    NameDocumentationAndId.__docgenInfo = { "description": "", "displayName": "NameDocumentationAndId", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "any" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/messageSelector/MessageSelector.tsx#NameDocumentationAndId"] = { docgenInfo: NameDocumentationAndId.__docgenInfo, name: "NameDocumentationAndId", path: "src/propertiesPanel/messageSelector/MessageSelector.tsx#NameDocumentationAndId" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlzYy1lbXB0eS1FbXB0eS1zdG9yaWVzLjAxOGY3OWQzOGQzMzhhNDNhYzFjLmhvdC11cGRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQitCO0FBQ3NEO0FBQ1Y7QUFNNUM7QUFlckIsU0FBVUksc0JBQXNCQSxDQUFBQyxJQUFBLEVBT3JDO0VBQUEsSUFQc0M7SUFDckNDO0VBQU8sQ0FNUixHQUFBRCxJQUFBO0VBQ0MsTUFBTUUsa0JBQWtCLEdBQUdMLDBFQUFxQixFQUFFO0VBQ2xELE1BQU1NLFFBQVEsR0FBR1AsdUVBQWtCLENBQUVRLENBQUMsSUFBS0EsQ0FBQyxDQUFDRCxRQUFRLENBQUM7RUFFdEQsTUFBTUUsYUFBYSxHQUFHViw4Q0FBaUIsQ0FDcENZLE9BQWUsSUFBSTtJQUNsQkwsa0JBQWtCLENBQUNNLFFBQVEsQ0FBRUosQ0FBQyxJQUFJO01BQ2hDSyxpQkFBaUIsQ0FBQztRQUNoQkMsV0FBVyxFQUFFTixDQUFDLENBQUNPLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixXQUFXO1FBQ3JDRyxFQUFFLEVBQUVaLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDbkJhLGNBQWMsRUFBRTtVQUFFLFFBQVEsRUFBRVA7UUFBTztPQUNwQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0VBQ0osQ0FBQyxFQUNELENBQUNOLE9BQU8sRUFBRUMsa0JBQWtCLENBQUMsQ0FDOUI7RUFFRCxPQUNFYSxzREFBQSxDQUFDQyxXQUFXO0lBQUFDLFFBQUEsRUFDVkYsc0RBQUEsQ0FBQ2pCLHFGQUFTO01BQUNvQixLQUFLLEVBQUMsTUFBTTtNQUFBRCxRQUFBLEVBQ3JCRixzREFBQSxDQUFDSSxTQUFTO1FBQ1JDLFVBQVUsRUFBRWpCLFFBQVEsQ0FBQ2tCLFVBQVU7UUFDL0JSLEVBQUUsRUFBRVosT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNuQnFCLElBQUksRUFBRXJCLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdkJzQixLQUFLLEVBQUV0QixPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3hCdUIsV0FBVyxFQUFFLGlCQUFpQjtRQUM5QkMsUUFBUSxFQUFFcEI7TUFBYTtJQUN2QjtFQUNRLEVBQ0U7QUFPeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Aa2llLXRvb2xzL2JwbW4tZWRpdG9yLy4vc3JjL3Byb3BlcnRpZXNQYW5lbC9tZXNzYWdlU2VsZWN0b3IvTWVzc2FnZVNlbGVjdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZUJwbW5FZGl0b3JTdG9yZSwgdXNlQnBtbkVkaXRvclN0b3JlQXBpIH0gZnJvbSBcIi4uLy4uL3N0b3JlL1N0b3JlQ29udGV4dFwiO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWNvcmUvZGlzdC9qcy9jb21wb25lbnRzL0Zvcm1cIjtcbmltcG9ydCB7IEZvcm1TZWxlY3QsIEZvcm1TZWxlY3RPcHRpb24gfSBmcm9tIFwiQHBhdHRlcm5mbHkvcmVhY3QtY29yZS9kaXN0L2pzL2NvbXBvbmVudHMvRm9ybVNlbGVjdFwiO1xuaW1wb3J0IHsgTm9ybWFsaXplZCB9IGZyb20gXCIuLi8uLi9ub3JtYWxpemF0aW9uL25vcm1hbGl6ZVwiO1xuaW1wb3J0IHsgQlBNTjIwX190RGVmaW5pdGlvbnMsIEJQTU4yMF9fdFByb2Nlc3MgfSBmcm9tIFwiQGtpZS10b29scy9icG1uLW1hcnNoYWxsZXIvZGlzdC9zY2hlbWFzL2JwbW4tMl8wL3RzLWdlbi90eXBlc1wiO1xuaW1wb3J0IHsgRWxlbWVudEZpbHRlciB9IGZyb20gXCJAa2llLXRvb2xzL3htbC1wYXJzZXItdHMvZGlzdC9lbGVtZW50RmlsdGVyXCI7XG5pbXBvcnQgeyBVbnBhY2tlZCB9IGZyb20gXCJAa2llLXRvb2xzL3h5Zmxvdy1yZWFjdC1raWUtZGlhZ3JhbS9kaXN0L3RzRXh0L3RzRXh0XCI7XG5pbXBvcnQgXCIuL01lc3NhZ2VTZWxlY3Rvci5jc3NcIjtcbmltcG9ydCB7IFRleHRBcmVhIH0gZnJvbSBcIkBwYXR0ZXJuZmx5L3JlYWN0LWNvcmUvZGlzdC9qcy9jb21wb25lbnRzL1RleHRBcmVhL1RleHRBcmVhXCI7XG5pbXBvcnQgeyBhZGRPckdldFByb2Nlc3NBbmREaWFncmFtRWxlbWVudHMgfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL2FkZE9yR2V0UHJvY2Vzc0FuZERpYWdyYW1FbGVtZW50c1wiO1xuaW1wb3J0IHsgdmlzaXRGbG93RWxlbWVudHNBbmRBcnRpZmFjdHMgfSBmcm9tIFwiLi4vLi4vbXV0YXRpb25zL19lbGVtZW50VmlzaXRvclwiO1xuaW1wb3J0IHsgZ2VuZXJhdGVVdWlkIH0gZnJvbSBcIkBraWUtdG9vbHMveHlmbG93LXJlYWN0LWtpZS1kaWFncmFtL2Rpc3QvdXVpZC91dWlkXCI7XG5cbmV4cG9ydCB0eXBlIFdpdGhNZXNzYWdlID1cbiAgfCB1bmRlZmluZWRcbiAgfCBOb3JtYWxpemVkPFxuICAgICAgRWxlbWVudEZpbHRlcjxcbiAgICAgICAgVW5wYWNrZWQ8Tm9uTnVsbGFibGU8QlBNTjIwX190UHJvY2Vzc1tcImZsb3dFbGVtZW50XCJdPj4sXG4gICAgICAgIFwic3RhcnRFdmVudFwiIHwgXCJpbnRlcm1lZGlhdGVDYXRjaEV2ZW50XCIgfCBcImludGVybWVkaWF0ZVRocm93RXZlbnRcIiB8IFwiZW5kRXZlbnRcIiB8IFwiYm91bmRhcnlFdmVudFwiXG4gICAgICA+XG4gICAgPjtcblxuICAgIGV4cG9ydCBmdW5jdGlvbiBOYW1lRG9jdW1lbnRhdGlvbkFuZElkKHtcbiAgICAgIGVsZW1lbnQsXG4gICAgfToge1xuICAgICAgZWxlbWVudDogTm9ybWFsaXplZDxcbiAgICAgICAgfCBFbGVtZW50RXhjbHVzaW9uPFVucGFja2VkPE5vbk51bGxhYmxlPEJQTU4yMF9fdFByb2Nlc3NbXCJmbG93RWxlbWVudFwiXT4+LCBcInNlcXVlbmNlRmxvd1wiPlxuICAgICAgICB8IChCUE1OMjBfX3RMYW5lICYgeyBfXyQkZWxlbWVudDogXCJsYW5lXCIgfSlcbiAgICAgID47XG4gICAgfSkge1xuICAgICAgY29uc3QgYnBtbkVkaXRvclN0b3JlQXBpID0gdXNlQnBtbkVkaXRvclN0b3JlQXBpKCk7XG4gICAgICBjb25zdCBzZXR0aW5ncyA9IHVzZUJwbW5FZGl0b3JTdG9yZSgocykgPT4gcy5zZXR0aW5ncyk7XG4gICAgXG4gICAgICBjb25zdCBvbk5hbWVDaGFuZ2VkID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgICAgIChuZXdOYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICBicG1uRWRpdG9yU3RvcmVBcGkuc2V0U3RhdGUoKHMpID0+IHtcbiAgICAgICAgICAgIHVwZGF0ZUZsb3dFbGVtZW50KHtcbiAgICAgICAgICAgICAgZGVmaW5pdGlvbnM6IHMuYnBtbi5tb2RlbC5kZWZpbml0aW9ucyxcbiAgICAgICAgICAgICAgaWQ6IGVsZW1lbnRbXCJAX2lkXCJdLFxuICAgICAgICAgICAgICBuZXdGbG93RWxlbWVudDogeyBcIkBfbmFtZVwiOiBuZXdOYW1lIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW2VsZW1lbnQsIGJwbW5FZGl0b3JTdG9yZUFwaV1cbiAgICAgICk7XG4gICAgXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Rm9ybVNlY3Rpb24+XG4gICAgICAgICAgPEZvcm1Hcm91cCBsYWJlbD1cIk5hbWVcIj5cbiAgICAgICAgICAgIDxUZXh0SW5wdXRcbiAgICAgICAgICAgICAgaXNEaXNhYmxlZD17c2V0dGluZ3MuaXNSZWFkT25seX1cbiAgICAgICAgICAgICAgaWQ9e2VsZW1lbnRbXCJAX2lkXCJdfVxuICAgICAgICAgICAgICBuYW1lPXtlbGVtZW50W1wiQF9uYW1lXCJdfVxuICAgICAgICAgICAgICB2YWx1ZT17ZWxlbWVudFtcIkBfbmFtZVwiXX1cbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1wiRW50ZXIgYSBuYW1lLi4uXCJ9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbk5hbWVDaGFuZ2VkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0Zvcm1Hcm91cD5cbiAgICAgICAgICA8L0Zvcm1TZWN0aW9uPlxuICAgICAgICAgIClcblxuXG4vLyA8Rm9ybVNlbGVjdCBpZD17XCJzZWxlY3RcIn0gdmFsdWU9e3VuZGVmaW5lZH0gaXNEaXNhYmxlZD17aXNSZWFkT25seX0+XG4vLyAgIHsvKiA8Rm9ybVNlbGVjdE9wdGlvbiBpZD17XCJub25lXCJ9IGlzUGxhY2Vob2xkZXI9e3RydWV9IGxhYmVsPXtcIi0tIE5vbmUgLS1cIn0gLz4gKi99XG4vLyA8L0Zvcm1TZWxlY3Q+XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VCcG1uRWRpdG9yU3RvcmUiLCJ1c2VCcG1uRWRpdG9yU3RvcmVBcGkiLCJGb3JtR3JvdXAiLCJOYW1lRG9jdW1lbnRhdGlvbkFuZElkIiwiX3JlZiIsImVsZW1lbnQiLCJicG1uRWRpdG9yU3RvcmVBcGkiLCJzZXR0aW5ncyIsInMiLCJvbk5hbWVDaGFuZ2VkIiwidXNlQ2FsbGJhY2siLCJuZXdOYW1lIiwic2V0U3RhdGUiLCJ1cGRhdGVGbG93RWxlbWVudCIsImRlZmluaXRpb25zIiwiYnBtbiIsIm1vZGVsIiwiaWQiLCJuZXdGbG93RWxlbWVudCIsIl9qc3giLCJGb3JtU2VjdGlvbiIsImNoaWxkcmVuIiwibGFiZWwiLCJUZXh0SW5wdXQiLCJpc0Rpc2FibGVkIiwiaXNSZWFkT25seSIsIm5hbWUiLCJ2YWx1ZSIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiXSwic291cmNlUm9vdCI6IiJ9