"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/diagram/BpmnDiagramDomain.tsx":
/*!*******************************************!*\
  !*** ./src/diagram/BpmnDiagramDomain.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeMarker: () => (/* binding */ ActivityNodeMarker),
/* harmony export */   BPMN_CONTAINMENT_MAP: () => (/* binding */ BPMN_CONTAINMENT_MAP),
/* harmony export */   BPMN_GRAPH_STRUCTURE: () => (/* binding */ BPMN_GRAPH_STRUCTURE),
/* harmony export */   BPMN_OUTGOING_STRUCTURE: () => (/* binding */ BPMN_OUTGOING_STRUCTURE),
/* harmony export */   CONNECTION_LINE_EDGE_COMPONENTS_MAPPING: () => (/* binding */ CONNECTION_LINE_EDGE_COMPONENTS_MAPPING),
/* harmony export */   CONNECTION_LINE_NODE_COMPONENT_MAPPING: () => (/* binding */ CONNECTION_LINE_NODE_COMPONENT_MAPPING),
/* harmony export */   DEFAULT_NODE_SIZES: () => (/* binding */ DEFAULT_NODE_SIZES),
/* harmony export */   EDGE_TYPES: () => (/* binding */ EDGE_TYPES),
/* harmony export */   MIN_NODE_SIZES: () => (/* binding */ MIN_NODE_SIZES),
/* harmony export */   MIN_SIZE_FOR_NODES: () => (/* binding */ MIN_SIZE_FOR_NODES),
/* harmony export */   NODE_MIN_HEIGHT: () => (/* binding */ NODE_MIN_HEIGHT),
/* harmony export */   NODE_MIN_WIDTH: () => (/* binding */ NODE_MIN_WIDTH),
/* harmony export */   NODE_TYPES: () => (/* binding */ NODE_TYPES),
/* harmony export */   XY_FLOW_EDGE_TYPES: () => (/* binding */ XY_FLOW_EDGE_TYPES),
/* harmony export */   XY_FLOW_NODE_TYPES: () => (/* binding */ XY_FLOW_NODE_TYPES),
/* harmony export */   bpmnEdgesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnEdgesOutgoingStuffNodePanelMapping),
/* harmony export */   bpmnNodesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnNodesOutgoingStuffNodePanelMapping),
/* harmony export */   elementToEdgeType: () => (/* binding */ elementToEdgeType),
/* harmony export */   elementToNodeType: () => (/* binding */ elementToNodeType),
/* harmony export */   getNodeTypeFromBpmnElement: () => (/* binding */ getNodeTypeFromBpmnElement)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/graph/graphStructure */ "../xyflow-react-kie-diagram/dist/graph/graphStructure.js");
/* harmony import */ var _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodes/Nodes */ "./src/diagram/nodes/Nodes.tsx");
/* harmony import */ var _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./edges/EdgeSvgs */ "./src/diagram/edges/EdgeSvgs.tsx");
/* harmony import */ var _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _edges_Edges__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edges/Edges */ "./src/diagram/edges/Edges.tsx");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools-core/switch-expression-ts */ "../switch-expression-ts/dist/switchExpression.js");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/snapgrid/SnapGrid */ "../xyflow-react-kie-diagram/dist/snapgrid/SnapGrid.js");









const NODE_TYPES = {
  startEvent: "node_startEvent",
  intermediateCatchEvent: "node_intermediateCatchEvent",
  intermediateThrowEvent: "node_intermediateThrowEvent",
  endEvent: "node_endEvent",
  task: "node_task",
  subProcess: "node_subProcess",
  gateway: "node_gateway",
  dataObject: "node_dataObject",
  textAnnotation: "node_textAnnotation",
  unknown: "node_unknown",
  group: "node_group",
  lane: "node_lane"
};
const EDGE_TYPES = {
  sequenceFlow: "edge_sequenceFlow",
  association: "edge_association"
};
var ActivityNodeMarker;
(function (ActivityNodeMarker) {
  ActivityNodeMarker["Compensation"] = "Compensation";
  ActivityNodeMarker["MultiInstanceParallel"] = "MultiInstanceParallel";
  ActivityNodeMarker["MultiInstanceSequential"] = "MultiInstanceSequential";
  ActivityNodeMarker["Collapsed"] = "Collapsed";
  ActivityNodeMarker["Loop"] = "Loop";
  ActivityNodeMarker["AdHocSubProcess"] = "AdHocSubProcess";
  ActivityNodeMarker["BusinessRule"] = "BusinessRule";
  ActivityNodeMarker["ServiceTask"] = "ServiceTask";
})(ActivityNodeMarker || (ActivityNodeMarker = {}));
const BPMN_GRAPH_STRUCTURE = new Map([[NODE_TYPES.startEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.task, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.subProcess, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateCatchEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateThrowEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.gateway, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.endEvent, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.dataObject, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.group, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.lane, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.textAnnotation, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.lane])]])]]);
const BPMN_CONTAINMENT_MAP = new Map([[NODE_TYPES.lane, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.subProcess, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.textAnnotation, NODE_TYPES.group])]])], [NODE_TYPES.subProcess, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation, NODE_TYPES.group])], [_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])], [NODE_TYPES.task, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])]]);
const CONNECTION_LINE_EDGE_COMPONENTS_MAPPING = {
  [EDGE_TYPES.sequenceFlow]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath,
  [EDGE_TYPES.association]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath
};
const CONNECTION_LINE_NODE_COMPONENT_MAPPING = {
  [NODE_TYPES.startEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg,
  [NODE_TYPES.endEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg,
  [NODE_TYPES.task]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg,
  [NODE_TYPES.subProcess]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.SubProcessNodeSvg,
  [NODE_TYPES.gateway]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg,
  [NODE_TYPES.textAnnotation]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg,
  [NODE_TYPES.lane]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.LaneNodeSvg,
  node_dataObject: undefined,
  node_unknown: undefined,
  node_group: undefined
};
const XY_FLOW_NODE_TYPES = {
  [NODE_TYPES.startEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.StartEventNode,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateCatchEventNode,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateThrowEventNode,
  [NODE_TYPES.endEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.EndEventNode,
  [NODE_TYPES.task]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TaskNode,
  [NODE_TYPES.subProcess]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.SubProcessNode,
  [NODE_TYPES.gateway]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GatewayNode,
  [NODE_TYPES.group]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GroupNode,
  [NODE_TYPES.textAnnotation]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TextAnnotationNode,
  [NODE_TYPES.dataObject]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.DataObjectNode,
  [NODE_TYPES.lane]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.LaneNode,
  [NODE_TYPES.unknown]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.UnknownNode
};
const XY_FLOW_EDGE_TYPES = {
  [EDGE_TYPES.sequenceFlow]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.SequenceFlowEdge,
  [EDGE_TYPES.association]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.AssociationEdge
};
const BPMN_OUTGOING_STRUCTURE = {
  [NODE_TYPES.startEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.endEvent]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.task]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.subProcess]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.gateway]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.dataObject]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.group]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.lane]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.textAnnotation]: {
    nodes: [],
    edges: [EDGE_TYPES.association]
  }
};
const bpmnEdgesOutgoingStuffNodePanelMapping = {
  [EDGE_TYPES.sequenceFlow]: {
    actionTitle: "Add Sequence Flow",
    icon: _ref => {
      let {
        viewboxSize
      } = _ref;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize - 2},0`
      });
    }
  },
  [EDGE_TYPES.association]: {
    actionTitle: "Add Association",
    icon: _ref2 => {
      let {
        viewboxSize
      } = _ref2;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize},0`,
        strokeWidth: 2
      });
    }
  }
};
const bpmnNodesOutgoingStuffNodePanelMapping = {
  [NODE_TYPES.startEvent]: {
    actionTitle: "Add Start Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    actionTitle: "Add Intermediate Catch Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    actionTitle: "Add Intermediate Throw Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.endEvent]: {
    actionTitle: "Add End Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.task]: {
    actionTitle: "Add Task",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps
    })
  },
  [NODE_TYPES.subProcess]: {
    actionTitle: "Add Sub-process",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps,
      markers: ["CallActivityPaletteIcon"]
    })
  },
  [NODE_TYPES.gateway]: {
    actionTitle: "Add Gateway",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg, {
      ...nodeSvgProps,
      height: nodeSvgProps.width,
      variant: "none",
      x: nodeSvgProps.x,
      y: nodeSvgProps.y - 8
    })
  },
  [NODE_TYPES.textAnnotation]: {
    actionTitle: "Add Text Annotation",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg, {
      ...nodeSvgProps
    })
  }
};
const MIN_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref3 => {
    let {
      snapGrid
    } = _ref3;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref4 => {
    let {
      snapGrid
    } = _ref4;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref5 => {
    let {
      snapGrid
    } = _ref5;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref6 => {
    let {
      snapGrid
    } = _ref6;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref7 => {
    let {
      snapGrid
    } = _ref7;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref8 => {
    let {
      snapGrid
    } = _ref8;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref9 => {
    let {
      snapGrid
    } = _ref9;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref10 => {
    let {
      snapGrid
    } = _ref10;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref11 => {
    let {
      snapGrid
    } = _ref11;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2, NODE_MIN_HEIGHT + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref12 => {
    let {
      snapGrid
    } = _ref12;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 200, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref13 => {
    let {
      snapGrid
    } = _ref13;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref14 => {
    let {
      snapGrid
    } = _ref14;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const DEFAULT_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref15 => {
    let {
      snapGrid
    } = _ref15;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref16 => {
    let {
      snapGrid
    } = _ref16;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref17 => {
    let {
      snapGrid
    } = _ref17;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref18 => {
    let {
      snapGrid
    } = _ref18;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref19 => {
    let {
      snapGrid
    } = _ref19;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 90);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref20 => {
    let {
      snapGrid
    } = _ref20;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 360, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref21 => {
    let {
      snapGrid
    } = _ref21;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref22 => {
    let {
      snapGrid
    } = _ref22;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref23 => {
    let {
      snapGrid
    } = _ref23;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH * 2, NODE_MIN_WIDTH * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref24 => {
    let {
      snapGrid
    } = _ref24;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref25 => {
    let {
      snapGrid
    } = _ref25;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 540, 240);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref26 => {
    let {
      snapGrid
    } = _ref26;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const NODE_MIN_WIDTH = 120;
const NODE_MIN_HEIGHT = 60;
const MIN_SIZE_FOR_NODES = function (grid) {
  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NODE_MIN_WIDTH;
  let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NODE_MIN_HEIGHT;
  const snapped = (0,_kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__.snapPoint)(grid, {
    "@_x": width,
    "@_y": height
  }, "ceil");
  return {
    width: snapped["@_x"],
    height: snapped["@_y"]
  };
};
function getNodeTypeFromBpmnElement(bpmnElement) {
  if (!bpmnElement) {
    return NODE_TYPES.unknown;
  }
  const type = (0,_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__.switchExpression)(bpmnElement.__$$element, {
    dataObject: NODE_TYPES.dataObject,
    task: NODE_TYPES.task,
    lane: NODE_TYPES.lane,
    textAnnotation: NODE_TYPES.textAnnotation,
    default: undefined
  });
  return type;
}
const elementToNodeType = {
  lane: NODE_TYPES.lane,
  startEvent: NODE_TYPES.startEvent,
  boundaryEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateCatchEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateThrowEvent: NODE_TYPES.intermediateThrowEvent,
  endEvent: NODE_TYPES.endEvent,
  callActivity: NODE_TYPES.task,
  task: NODE_TYPES.task,
  businessRuleTask: NODE_TYPES.task,
  userTask: NODE_TYPES.task,
  scriptTask: NODE_TYPES.task,
  serviceTask: NODE_TYPES.task,
  subProcess: NODE_TYPES.subProcess,
  adHocSubProcess: NODE_TYPES.subProcess,
  transaction: NODE_TYPES.subProcess,
  complexGateway: NODE_TYPES.gateway,
  eventBasedGateway: NODE_TYPES.gateway,
  exclusiveGateway: NODE_TYPES.gateway,
  inclusiveGateway: NODE_TYPES.gateway,
  parallelGateway: NODE_TYPES.gateway,
  dataObject: NODE_TYPES.dataObject,
  group: NODE_TYPES.group,
  textAnnotation: NODE_TYPES.textAnnotation,
  event: NODE_TYPES.unknown
};
const elementToEdgeType = {
  association: EDGE_TYPES.association,
  sequenceFlow: EDGE_TYPES.sequenceFlow
};
try {
    // @ts-ignore
    getNodeTypeFromBpmnElement.displayName = "getNodeTypeFromBpmnElement";
    // @ts-ignore
    getNodeTypeFromBpmnElement.__docgenInfo = { "description": "", "displayName": "getNodeTypeFromBpmnElement", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"startEvent\"" }, { "value": "\"intermediateCatchEvent\"" }, { "value": "\"intermediateThrowEvent\"" }, { "value": "\"endEvent\"" }, { "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"dataObject\"" }, { "value": "\"textAnnotation\"" }, { "value": "\"group\"" }, { "value": "\"lane\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"boundaryEvent\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"complexGateway\"" }, { "value": "\"event\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 16 more ..." } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "@_cancelRemainingInstances": { "defaultValue": null, "description": "", "name": "@_cancelRemainingInstances", "required": false, "type": { "name": "boolean" } }, "@_ordering": { "defaultValue": null, "description": "", "name": "@_ordering", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Sequential\"" }] } }, "completionCondition": { "defaultValue": null, "description": "", "name": "completionCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_parallelMultiple": { "defaultValue": null, "description": "", "name": "@_parallelMultiple", "required": false, "type": { "name": "boolean" } }, "dataOutput": { "defaultValue": null, "description": "", "name": "dataOutput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "outputSet": { "defaultValue": null, "description": "", "name": "outputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; inputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "eventDefinition": { "defaultValue": null, "description": "", "name": "eventDefinition", "required": false, "type": { "name": "(({ __$$element: \"cancelEventDefinition\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tCancelEventDefinition__exten..." } }, "eventDefinitionRef": { "defaultValue": null, "description": "", "name": "eventDefinitionRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "@_cancelActivity": { "defaultValue": null, "description": "", "name": "@_cancelActivity", "required": false, "type": { "name": "boolean" } }, "@_attachedToRef": { "defaultValue": null, "description": "", "name": "@_attachedToRef", "required": true, "type": { "name": "string" } }, "@_implementation": { "defaultValue": null, "description": "", "name": "@_implementation", "required": false, "type": { "name": "string" } }, "@_drools:ruleFlowGroup": { "defaultValue": null, "description": "", "name": "@_drools:ruleFlowGroup", "required": false, "type": { "name": "string" } }, "@_calledElement": { "defaultValue": null, "description": "", "name": "@_calledElement", "required": false, "type": { "name": "string" } }, "@_drools:independent": { "defaultValue": null, "description": "", "name": "@_drools:independent", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_drools:waitForCompletion": { "defaultValue": null, "description": "", "name": "@_drools:waitForCompletion", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_gatewayDirection": { "defaultValue": null, "description": "", "name": "@_gatewayDirection", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Unspecified\"" }, { "value": "\"Converging\"" }, { "value": "\"Diverging\"" }, { "value": "\"Mixed\"" }] } }, "activationCondition": { "defaultValue": null, "description": "", "name": "activationCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_itemSubjectRef": { "defaultValue": null, "description": "", "name": "@_itemSubjectRef", "required": false, "type": { "name": "string" } }, "@_isCollection": { "defaultValue": null, "description": "", "name": "@_isCollection", "required": false, "type": { "name": "boolean" } }, "dataState": { "defaultValue": null, "description": "", "name": "dataState", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tDataState__extensionElements) | undefined; \"@_name\"?: st..." } }, "dataInput": { "defaultValue": null, "description": "", "name": "dataInput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "inputSet": { "defaultValue": null, "description": "", "name": "inputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; outputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "@_instantiate": { "defaultValue": null, "description": "", "name": "@_instantiate", "required": false, "type": { "name": "boolean" } }, "@_eventGatewayType": { "defaultValue": null, "description": "", "name": "@_eventGatewayType", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Exclusive\"" }] } }, "@_scriptFormat": { "defaultValue": null, "description": "", "name": "@_scriptFormat", "required": false, "type": { "name": "string" } }, "script": { "defaultValue": null, "description": "", "name": "script", "required": false, "type": { "name": "({ __?: undefined; __$$text?: string; } & BPMN20__tScript)" } }, "@_operationRef": { "defaultValue": null, "description": "", "name": "@_operationRef", "required": false, "type": { "name": "string" } }, "@_drools:serviceimplementation": { "defaultValue": null, "description": "", "name": "@_drools:serviceimplementation", "required": false, "type": { "name": "string" } }, "@_drools:serviceinterface": { "defaultValue": null, "description": "", "name": "@_drools:serviceinterface", "required": false, "type": { "name": "string" } }, "@_drools:serviceoperation": { "defaultValue": null, "description": "", "name": "@_drools:serviceoperation", "required": false, "type": { "name": "string" } }, "@_isInterrupting": { "defaultValue": null, "description": "", "name": "@_isInterrupting", "required": false, "type": { "name": "boolean" } }, "@_method": { "defaultValue": null, "description": "", "name": "@_method", "required": false, "type": { "name": "string" } }, "rendering": { "defaultValue": null, "description": "", "name": "rendering", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tRendering__extensionElements) | undefined; } & { ...; })..." } }, "@_categoryValueRef": { "defaultValue": null, "description": "", "name": "@_categoryValueRef", "required": false, "type": { "name": "string" } }, "@_textFormat": { "defaultValue": null, "description": "", "name": "@_textFormat", "required": false, "type": { "name": "string" } }, "text": { "defaultValue": null, "description": "", "name": "text", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "@_partitionElementRef": { "defaultValue": null, "description": "", "name": "@_partitionElementRef", "required": false, "type": { "name": "string" } }, "partitionElement": { "defaultValue": null, "description": "", "name": "partitionElement", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tBaseElement__extensionElements) | undefined; } & { ...; ..." } }, "flowNodeRef": { "defaultValue": null, "description": "", "name": "flowNodeRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[]" } }, "childLaneSet": { "defaultValue": null, "description": "", "name": "childLaneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement"] = { docgenInfo: getNodeTypeFromBpmnElement.__docgenInfo, name: "getNodeTypeFromBpmnElement", path: "src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,