"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/diagram/nodes/NodeSvgs.tsx":
/*!****************************************!*\
  !*** ./src/diagram/nodes/NodeSvgs.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeIcons: () => (/* binding */ ActivityNodeIcons),
/* harmony export */   BusinessRuleTaskSvg: () => (/* binding */ BusinessRuleTaskSvg),
/* harmony export */   CancelEventSymbolSvg: () => (/* binding */ CancelEventSymbolSvg),
/* harmony export */   CompensationEventSymbolSvg: () => (/* binding */ CompensationEventSymbolSvg),
/* harmony export */   ComplexGatewaySvg: () => (/* binding */ ComplexGatewaySvg),
/* harmony export */   ConditionalEventSymbolSvg: () => (/* binding */ ConditionalEventSymbolSvg),
/* harmony export */   DataObjectNodeSvg: () => (/* binding */ DataObjectNodeSvg),
/* harmony export */   EndEventNodeSvg: () => (/* binding */ EndEventNodeSvg),
/* harmony export */   ErrorEventSymbolSvg: () => (/* binding */ ErrorEventSymbolSvg),
/* harmony export */   EscalationEventSymbolSvg: () => (/* binding */ EscalationEventSymbolSvg),
/* harmony export */   EventBasedGatewaySvg: () => (/* binding */ EventBasedGatewaySvg),
/* harmony export */   EventVariantSymbolSvg: () => (/* binding */ EventVariantSymbolSvg),
/* harmony export */   ExclusiveGatewaySvg: () => (/* binding */ ExclusiveGatewaySvg),
/* harmony export */   GatewayNodeSvg: () => (/* binding */ GatewayNodeSvg),
/* harmony export */   GroupNodeSvg: () => (/* binding */ GroupNodeSvg),
/* harmony export */   InclusiveGatewaySvg: () => (/* binding */ InclusiveGatewaySvg),
/* harmony export */   IntermediateCatchEventNodeSvg: () => (/* binding */ IntermediateCatchEventNodeSvg),
/* harmony export */   IntermediateThrowEventNodeSvg: () => (/* binding */ IntermediateThrowEventNodeSvg),
/* harmony export */   LaneNodeSvg: () => (/* binding */ LaneNodeSvg),
/* harmony export */   LinkEventSymbolSvg: () => (/* binding */ LinkEventSymbolSvg),
/* harmony export */   MessageEventSymbolSvg: () => (/* binding */ MessageEventSymbolSvg),
/* harmony export */   NODE_COLORS: () => (/* binding */ NODE_COLORS),
/* harmony export */   ParallelGatewaySvg: () => (/* binding */ ParallelGatewaySvg),
/* harmony export */   ScriptTaskSvg: () => (/* binding */ ScriptTaskSvg),
/* harmony export */   ServiceTaskIcon: () => (/* binding */ ServiceTaskIcon),
/* harmony export */   SignalEventSymbolSvg: () => (/* binding */ SignalEventSymbolSvg),
/* harmony export */   StartEventNodeSvg: () => (/* binding */ StartEventNodeSvg),
/* harmony export */   SubProcessNodeSvg: () => (/* binding */ SubProcessNodeSvg),
/* harmony export */   TaskNodeSvg: () => (/* binding */ TaskNodeSvg),
/* harmony export */   TextAnnotationNodeSvg: () => (/* binding */ TextAnnotationNodeSvg),
/* harmony export */   TimerEventSymbolSvg: () => (/* binding */ TimerEventSymbolSvg),
/* harmony export */   UnknownNodeSvg: () => (/* binding */ UnknownNodeSvg),
/* harmony export */   UserTaskSvg: () => (/* binding */ UserTaskSvg)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/NodeSvgs */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module './assets/service-task.svg'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());









function DataObjectNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      isIcon: _isIcon,
      showFoldedPage: _showFoldedPage,
      showArrow: _showArrow,
      ...props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const bevel = 25;
  const arrowStartingX = 6;
  const arrowStartingY = 10;
  const showFoldedPage = _showFoldedPage !== null && _showFoldedPage !== void 0 ? _showFoldedPage : false;
  const showArrow = _showArrow !== null && _showArrow !== void 0 ? _showArrow : false;
  const isIcon = _isIcon !== null && _isIcon !== void 0 ? _isIcon : false;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `0,0 0,${height} ${width},${height} ${width},${bevel} ${width - bevel},0 ${width - bevel},0`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: isIcon ? __props.transform : `translate(${x},${y})`
    }), showFoldedPage === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${width - bevel},0 ${width - bevel},${bevel} ${width},${bevel}`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    }), showArrow === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${arrowStartingX},${arrowStartingY} ${arrowStartingX},20 20,20 20,26 30,15 20,4 20,${arrowStartingY} `,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    })]
  });
}
const deg30 = Math.PI / 6;
const cos30 = Math.cos(deg30);
const sin30 = Math.sin(deg30);
const NODE_COLORS = {
  startEvent: {
    foreground: "#4aa241",
    background: "#e8fae6"
  },
  intermediateCatchEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  boundaryEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  intermediateThrowEvent: {
    foreground: "#007a87",
    background: "#bddee1"
  },
  endEvent: {
    foreground: "#a30000",
    background: "#fce7e7"
  },
  gateway: {
    background: "#fef5ea",
    foreground: "#ec7b08"
  },
  task: {
    foreground: "black",
    background: "#efefef"
  },
  subProcess: {
    foreground: "black",
    background: "#efefef"
  }
};
function StartEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.startEvent.background,
      stroke: NODE_COLORS.startEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.startEvent.background,
      filled: false,
      stroke: NODE_COLORS.startEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function IntermediateCatchEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateCatchEvent.background,
      filled: false,
      stroke: NODE_COLORS.intermediateCatchEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function IntermediateThrowEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      filled: true,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function EndEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.endEvent.background,
      stroke: NODE_COLORS.endEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.endEvent.background,
      filled: true,
      stroke: NODE_COLORS.endEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function TaskNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    isMorphingPanel
  } = {
    ..._props
  };
  const morphingPanelOffset = isMorphingPanel ? 25 : 0;
  const {
    markers: _markers,
    variant: _variant,
    ...props
  } = {
    ..._props
  };
  const markers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_markers), [_markers]);
  const iconPosition = {
    cx: x + 15,
    cy: y + 15
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      ...props
    }), variant === 'scriptTask' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ScriptTaskSvg, {
      stroke: NODE_COLORS.task.foreground,
      strokeWidth: 1.5,
      ...iconPosition,
      size: 30
    }), variant === 'businessRuleTask' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BusinessRuleTaskSvg, {
      stroke: NODE_COLORS.task.foreground,
      strokeWidth: 1.5,
      ...iconPosition,
      size: 30
    }), variant === 'serviceTask' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Object(function webpackMissingModule() { var e = new Error("Cannot find module './assets/service-task.svg'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), {
      stroke: NODE_COLORS.task.foreground,
      strokeWidth: 1.5,
      ...iconPosition,
      size: 40
    }), variant === 'userTask' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UserTaskSvg, {
      stroke: NODE_COLORS.task.foreground,
      strokeWidth: 1.5,
      ...iconPosition,
      size: 50
    }), markers.has("CallActivityPaletteIcon") && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x + (width / 2 - width / 3 / 2),
      y: y + (height - height / 3),
      strokeWidth: strokeWidth,
      width: width / 3,
      height: height / 3,
      fill: "black",
      stroke: "black",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: markers
    })]
  });
}
function ScriptTaskSvg(_ref) {
  let {
    stroke,
    strokeWidth = 2,
    size = 100
  } = _ref;
  const sShapePath = `
    M${size * 0.2},${size * 0.25} 
    C${size * 0.1},${size * 0.1}, ${size * 0.3},${size * 0.1}, ${size * 0.2},${size * 0.25} 
    S${size * 0.3},${size * 0.4} ${size * 0.2},${size * 0.25} 
    M${size * 0.8},${size * 0.25} 
    C${size * 0.9},${size * 0.1}, ${size * 0.7},${size * 0.1}, ${size * 0.8},${size * 0.25} 
    S${size * 0.7},${size * 0.4} ${size * 0.8},${size * 0.25}
  `;
  const horizontalLineY = size * 0.25 + size * 0.1;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: `0 0 ${size} ${size}`,
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      d: sShapePath,
      fill: "none",
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.2,
      y1: size * 0.25,
      x2: size * 0.8,
      y2: size * 0.25,
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.2,
      y1: horizontalLineY,
      x2: size * 0.8,
      y2: horizontalLineY,
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.25,
      y1: size * 0.2,
      x2: size * 0.25,
      y2: size * 0.25,
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.35,
      y1: size * 0.2,
      x2: size * 0.35,
      y2: size * 0.25,
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.75,
      y1: horizontalLineY + 10,
      x2: size * 0.75,
      y2: horizontalLineY + 5,
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: size * 0.65,
      y1: horizontalLineY + 10,
      x2: size * 0.65,
      y2: horizontalLineY + 5,
      stroke: stroke,
      strokeWidth: strokeWidth
    })]
  });
}
function BusinessRuleTaskSvg(_ref2) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size,
    padding = 5
  } = _ref2;
  const headerHeight = size / 5;
  const rowHeight = size / 4;
  const columnWidth1 = size / 3;
  const columnWidth2 = size / 3 * 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - size / 2 + padding,
      y: cy - size / 2 + padding,
      width: size,
      height: headerHeight,
      fill: "lightgrey",
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - size / 2 + padding,
      y: cy - size / 2 + headerHeight + padding,
      width: columnWidth1,
      height: rowHeight,
      fill: "none",
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - size / 2 + columnWidth1 + padding,
      y: cy - size / 2 + headerHeight + padding,
      width: columnWidth2,
      height: rowHeight,
      fill: "none",
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - size / 2 + padding,
      y: cy - size / 2 + headerHeight + rowHeight + padding,
      width: columnWidth1,
      height: rowHeight,
      fill: "none",
      stroke: stroke,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - size / 2 + columnWidth1 + padding,
      y: cy - size / 2 + headerHeight + rowHeight + padding,
      width: columnWidth2,
      height: rowHeight,
      fill: "none",
      stroke: stroke,
      strokeWidth: strokeWidth
    })]
  });
}
function ServiceTaskIcon(_ref3) {
  let {
    width = 100,
    height = 100,
    alt = 'BPMN Service Task Icon'
  } = _ref3;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      width,
      height
    },
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("img", {
      src: Object(function webpackMissingModule() { var e = new Error("Cannot find module './assets/service-task.svg'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
      alt: alt,
      style: {
        width: '100%',
        height: '100%'
      }
    })
  });
}
function UserTaskSvg(_ref4) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref4;
  const headRadius = size / 4;
  const neckHeight = size / 6;
  const shoulderWidth = size / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy - neckHeight,
      r: headRadius,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      d: `M${cx - headRadius} ${cy - neckHeight} Q${cx} ${cy - headRadius - neckHeight / 2}, ${cx + headRadius} ${cy - neckHeight}`,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy - neckHeight + headRadius,
      x2: cx,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - shoulderWidth / 2,
      y1: cy,
      x2: cx + shoulderWidth / 2,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    })]
  });
}
function GatewayNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    isMorphingPanel,
    ...props
  } = {
    ..._props
  };
  const morphingPanelOffset = isMorphingPanel ? 25 : 0;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [!isMorphingPanel && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: 8 + x,
      y: 8 + y,
      transform: `rotate(45,${x + width / 2},${y + height / 2})`,
      strokeWidth: strokeWidth,
      width: width / 1.4,
      height: height / 1.4,
      fill: NODE_COLORS.gateway.background,
      stroke: NODE_COLORS.gateway.foreground,
      strokeLinejoin: "round",
      rx: "5",
      ry: "5",
      ...props
    }), variant === "parallelGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ParallelGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: isMorphingPanel ? 30 : 4.5,
      cx: x + width / 2,
      cy: y + height / 2 - morphingPanelOffset,
      size: isMorphingPanel ? 210 : 30
    }), variant === "exclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ExclusiveGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: isMorphingPanel ? 30 : 4.5,
      cx: x + width / 2,
      cy: y + height / 2 - morphingPanelOffset,
      size: isMorphingPanel ? 210 : 30
    }), variant === "inclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InclusiveGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: isMorphingPanel ? 30 : 4.5,
      cx: x + width / 2,
      cy: y + height / 2 - morphingPanelOffset,
      size: isMorphingPanel ? 275 : 40
    }), variant === "eventBasedGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventBasedGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      circleStrokeWidth: isMorphingPanel ? 10 : 1.5,
      strokeWidth: isMorphingPanel ? 30 : 2,
      cx: x + width / 2,
      cy: y + height / 2 - morphingPanelOffset,
      size: isMorphingPanel ? 275 : 40
    }), variant === "complexGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ComplexGatewaySvg, {
      stroke: NODE_COLORS.gateway.foreground,
      strokeWidth: isMorphingPanel ? 30 : 4.5,
      cx: x + width / 2,
      cy: y + height / 2 - morphingPanelOffset,
      size: isMorphingPanel ? 300 : 50
    })]
  });
}
function ParallelGatewaySvg(_ref5) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref5;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy - size / 2,
      x2: cx,
      y2: cy + size / 2,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - size / 2,
      y1: cy,
      x2: cx + size / 2,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    })]
  });
}
function ExclusiveGatewaySvg(_ref6) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref6;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - size / 3,
      y1: cy - size / 3,
      x2: cx + size / 3,
      y2: cy + size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx + size / 3,
      y1: cy - size / 3,
      x2: cx - size / 3,
      y2: cy + size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    })]
  });
}
function InclusiveGatewaySvg(_ref7) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref7;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 3,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: "none"
    })
  });
}
function EventBasedGatewaySvg(_ref8) {
  let {
    stroke,
    strokeWidth,
    circleStrokeWidth,
    cx,
    cy,
    size
  } = _ref8;
  const pentagonPoints = Array.from({
    length: 5
  }, (_, i) => {
    const angle = i * 2 * Math.PI / 5 - Math.PI / 2;
    return {
      x: cx + size / 4 * Math.cos(angle),
      y: cy + size / 4 * Math.sin(angle)
    };
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 3,
      stroke: stroke,
      strokeWidth: circleStrokeWidth,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: size / 2.5,
      stroke: stroke,
      strokeWidth: circleStrokeWidth,
      fill: "none"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: pentagonPoints.map(point => `${point.x},${point.y}`).join(" "),
      stroke: stroke,
      strokeWidth: strokeWidth,
      fill: "none"
    })]
  });
}
function ComplexGatewaySvg(_ref9) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    size
  } = _ref9;
  const lineLength = size / 3;
  const diagonalLength = lineLength / Math.sqrt(2);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy - lineLength,
      x2: cx,
      y2: cy + lineLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - lineLength,
      y1: cy,
      x2: cx + lineLength,
      y2: cy,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - diagonalLength,
      y1: cy - diagonalLength,
      x2: cx + diagonalLength,
      y2: cy + diagonalLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx + diagonalLength,
      y1: cy - diagonalLength,
      x2: cx - diagonalLength,
      y2: cy + diagonalLength,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
    })]
  });
}
const LaneNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    gutterWidth: _gutterWidth,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const gutterWidth = _gutterWidth !== null && _gutterWidth !== void 0 ? _gutterWidth : 40;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: x + gutterWidth,
      y1: y,
      x2: x + gutterWidth,
      y2: y + height,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
const SubProcessNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    rimWidth: _rimWidth,
    borderRadius: _borderRadius,
    icons: _icons,
    variant: _variant,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const icons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_icons), [_icons]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "other";
  const rimWidth = variant === "transaction" ? _rimWidth !== null && _rimWidth !== void 0 ? _rimWidth : 5 : 0;
  const borderRadius = variant === "transaction" ? _borderRadius !== null && _borderRadius !== void 0 ? _borderRadius : 10 : 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "transaction" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x + rimWidth,
      y: y + rimWidth,
      width: width - rimWidth * 2,
      height: height - rimWidth * 2,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: borderRadius - rimWidth,
      ry: borderRadius - rimWidth,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeDasharray: variant === "event" ? "10,5" : undefined,
      strokeLinejoin: "round",
      rx: borderRadius,
      ry: borderRadius,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: icons
    })]
  });
});
function TextAnnotationNodeSvg(__props) {
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props: _props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    showPlaceholder,
    ...props
  } = _props;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      ...props,
      x: x,
      y: y,
      fill: "transparent",
      d: `M20,0 L0,0 M0,0 L0,${height} M0,${height} L20,${height}`,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth,
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), showPlaceholder && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      x: "20%",
      y: "62.5%",
      style: {
        fontSize: "5em",
        fontWeight: "bold"
      },
      children: "Text"
    })]
  });
}
const GroupNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ...__props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    strokeDasharray: interactionRectStrokeDasharray,
    ...interactionRectProps
  } = _interactionRectProps;
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "14,10,3,10";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray,
      rx: 40,
      ry: 40
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      rx: "30",
      ry: "30",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
function UnknownNodeSvg(_props) {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "2,4";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "red",
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray
    })
  });
}
function EventVariantSymbolSvg(_ref10) {
  let {
    variant,
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref10;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "messageEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MessageEventSymbolSvg, {
      fill: fill !== null && fill !== void 0 ? fill : "none",
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "timerEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TimerEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "errorEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "escalationEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EscalationEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "cancelEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "compensateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CompensationEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "conditionalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConditionalEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      outerCircleRadius: outerCircleRadius
    }), variant === "linkEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LinkEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius
    }), variant === "signalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SignalEventSymbolSvg, {
      filled: filled,
      stroke: stroke,
      strokeWidth: strokeWidth,
      isMorphingPanel: isMorphingPanel,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "terminateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: cx,
        cy: cy,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2.5,
        fill: NODE_COLORS.endEvent.foreground,
        stroke: NODE_COLORS.endEvent.foreground,
        strokeLinejoin: "round",
        r: outerCircleRadius / 2
      })
    })]
  });
}
function MessageEventSymbolSvg(_ref11) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    fill,
    filled
  } = _ref11;
  const scaleFactor = isMorphingPanel ? 1.9 : 1;
  const scaledBodyWidth = innerCircleRadius * 1.2 * scaleFactor;
  const scaledBodyHeight = innerCircleRadius * 0.8 * scaleFactor;
  const envelopeBody = {
    topLeft: {
      x: cx - scaledBodyWidth / 2,
      y: cy - scaledBodyHeight / 2
    },
    bottomRight: {
      x: cx + scaledBodyWidth / 2,
      y: cy + scaledBodyHeight / 2
    }
  };
  const scaledFlapHeight = scaledBodyHeight * 0.5;
  const envelopeFlap = [{
    x: envelopeBody.topLeft.x,
    y: envelopeBody.topLeft.y
  }, {
    x: envelopeBody.bottomRight.x,
    y: envelopeBody.topLeft.y
  }, {
    x: cx,
    y: envelopeBody.topLeft.y + scaledFlapHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: envelopeBody.topLeft.x,
      y: envelopeBody.topLeft.y,
      width: scaledBodyWidth,
      height: scaledBodyHeight,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: envelopeFlap.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), filled && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[0].x,
        y1: envelopeFlap[0].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[1].x,
        y1: envelopeFlap[1].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
      })]
    })]
  });
}
function TimerEventSymbolSvg(_ref12) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref12;
  const scaleFactor = isMorphingPanel ? 1.4 : 1;
  const scaledPadding = 1.2 * (outerCircleRadius - innerCircleRadius) * scaleFactor;
  const scaledClockRadius = (innerCircleRadius - scaledPadding) * scaleFactor;
  const scaledShortHandLength = scaledClockRadius * 0.5;
  const scaledLongHandLength = scaledClockRadius * 0.9;
  const hourHandAngle = Math.PI / 12;
  const minuteHandAngle = -5 * Math.PI / 12;
  const hourHand = {
    x: cx + scaledShortHandLength * Math.cos(hourHandAngle),
    y: cy + scaledShortHandLength * Math.sin(hourHandAngle)
  };
  const minuteHand = {
    x: cx + scaledLongHandLength * Math.cos(minuteHandAngle),
    y: cy + scaledLongHandLength * Math.sin(minuteHandAngle)
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: scaledClockRadius,
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      fill: filled ? stroke : "transparent"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: hourHand.x,
      y2: hourHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: minuteHand.x,
      y2: minuteHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), Array.from({
      length: 12
    }, (_, index) => {
      const angle = index / 12 * 2 * Math.PI;
      const x1 = cx + scaledClockRadius * Math.cos(angle);
      const y1 = cy + scaledClockRadius * Math.sin(angle);
      const x2 = cx + (scaledClockRadius - scaledPadding * 0.5) * Math.cos(angle);
      const y2 = cy + (scaledClockRadius - scaledPadding * 0.5) * Math.sin(angle);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2,
        stroke: stroke,
        strokeWidth: 1.5
      }, index);
    })]
  });
}
function ErrorEventSymbolSvg(_ref13) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref13;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = innerCircleRadius - padding;
  const hy = innerCircleRadius - padding;
  const scaleFactor = 20;
  const shiftLeft = 3.5;
  const shiftUp = 1;
  const points = [{
    x: cx - shiftLeft,
    y: cy
  }, {
    x: cx - hx * 0.037 * scaleFactor - shiftLeft,
    y: cy + hy * 0.052 * scaleFactor - shiftUp
  }, {
    x: cx - hx * 0.003 * scaleFactor - shiftLeft,
    y: cy - hy * 0.05 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.027 * scaleFactor - shiftLeft,
    y: cy + hy * 0.016 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.058 * scaleFactor - shiftLeft,
    y: cy - hy * 0.046 * scaleFactor - shiftUp
  }, {
    x: cx + hx * 0.029 * scaleFactor - shiftLeft,
    y: cy + hy * 0.066 * scaleFactor - shiftUp
  }, {
    x: cx - shiftLeft,
    y: cy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: points.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function EscalationEventSymbolSvg(_ref14) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref14;
  const scaleFactor = isMorphingPanel ? 1.8 : 1;
  const scaledArrowHeight = innerCircleRadius * 1.2 * scaleFactor;
  const scaledArrowBaseWidth = innerCircleRadius * scaleFactor;
  const midCenterYOffset = innerCircleRadius * 1.2 / 20 * scaleFactor;
  const arrow = [{
    x: cx - scaledArrowBaseWidth / 2,
    y: cy + scaledArrowHeight / 2
  }, {
    x: cx,
    y: cy - scaledArrowHeight / 2
  }, {
    x: cx + scaledArrowBaseWidth / 2,
    y: cy + scaledArrowHeight / 2
  }, {
    x: cx,
    y: cy + midCenterYOffset
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: arrow.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CancelEventSymbolSvg(_ref15) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref15;
  const farXPoint = 1.3;
  const closeXPoint = 1.7;
  const lowYPoint = 9;
  const highYPoint = 5;
  const cross = [{
    x: cx - innerCircleRadius / farXPoint,
    y: cy - innerCircleRadius + lowYPoint
  }, {
    x: cx - innerCircleRadius / closeXPoint,
    y: cy - innerCircleRadius + highYPoint
  }, {
    x: cx,
    y: cy - innerCircleRadius / highYPoint
  }, {
    x: cx + innerCircleRadius / closeXPoint,
    y: cy - innerCircleRadius + highYPoint
  }, {
    x: cx + innerCircleRadius / farXPoint,
    y: cy - innerCircleRadius + lowYPoint
  }, {
    x: cx + innerCircleRadius / highYPoint,
    y: cy
  }, {
    x: cx + innerCircleRadius / farXPoint,
    y: cy + innerCircleRadius - lowYPoint
  }, {
    x: cx + innerCircleRadius / closeXPoint,
    y: cy + innerCircleRadius - highYPoint
  }, {
    x: cx,
    y: cy + innerCircleRadius / highYPoint
  }, {
    x: cx - innerCircleRadius / closeXPoint,
    y: cy + innerCircleRadius - highYPoint
  }, {
    x: cx - innerCircleRadius / farXPoint,
    y: cy + innerCircleRadius - lowYPoint
  }, {
    x: cx - innerCircleRadius / highYPoint,
    y: cy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: cross.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CompensationEventSymbolSvg(_ref16) {
  let {
    stroke,
    strokeWidth,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref16;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding * 0.6;
  const hy = y + innerCircleRadius - padding * 0.2;
  const rightOffset = 0.15 * innerCircleRadius;
  const firstTriangle = [{
    x: cx + hx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - rightOffset,
    y: cy
  }, {
    x: cx + hx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  const secondTriangle = [{
    x: cx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - hx - rightOffset,
    y: cy
  }, {
    x: cx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: firstTriangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: secondTriangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function ConditionalEventSymbolSvg(_ref17) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    outerCircleRadius,
    filled
  } = _ref17;
  const scaleFactor = isMorphingPanel ? 1.8 : 1;
  const squareSize = outerCircleRadius * 1.1 * scaleFactor;
  const halfSquareSize = squareSize / 2;
  const lineSpacing = squareSize / 5;
  const lineBuffer = isMorphingPanel ? 50 : 5;
  const x1 = cx - halfSquareSize + lineBuffer;
  const x2 = cx + halfSquareSize - lineBuffer;
  const squareX = cx - halfSquareSize;
  const squareY = cy - halfSquareSize;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: squareX,
      y: squareY,
      width: squareSize,
      height: squareSize,
      fill: filled ? stroke : "transparent",
      stroke: stroke,
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5
    }), [...Array(4)].map((_, index) => {
      const lineY = squareY + lineSpacing * (index + 1);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: lineY,
        x2: x2,
        y2: lineY,
        stroke: stroke,
        strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 2
      }, index);
    })]
  });
}
function LinkEventSymbolSvg(_ref18) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    innerCircleRadius,
    filled
  } = _ref18;
  const scaleFactor = isMorphingPanel ? 50 : 1;
  const arrowHeight = innerCircleRadius * 1.2;
  const arrowBaseWidth = innerCircleRadius * 1;
  const shiftLeft = 6;
  const rectangleHeight = 5;
  const arrowPadding = 1;
  const arrow = [{
    x: cx - arrowBaseWidth / 2 - shiftLeft - scaleFactor,
    y: cy + arrowHeight / 2 - rectangleHeight
  }, {
    x: cx - arrowBaseWidth / 2 - shiftLeft - scaleFactor,
    y: cy - arrowHeight / 2 + rectangleHeight
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 + rectangleHeight
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy - arrowHeight / 2 - arrowPadding - scaleFactor
  }, {
    x: cx + arrowBaseWidth / 2 + 7 + scaleFactor,
    y: cy
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 + arrowPadding + scaleFactor
  }, {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2 - rectangleHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: arrow.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function SignalEventSymbolSvg(_ref19) {
  let {
    stroke,
    strokeWidth,
    isMorphingPanel,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    filled
  } = _ref19;
  const scaleFactor = isMorphingPanel ? 1.2 : 1;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = (x + innerCircleRadius - padding) * scaleFactor;
  const hy = (y + innerCircleRadius - padding) * scaleFactor;
  const triangle = [{
    x: cx + cos30 * hx,
    y: padding / 4 * scaleFactor + cy + sin30 * hy
  }, {
    x: cx - cos30 * hx,
    y: padding / 4 * scaleFactor + cy + sin30 * hy
  }, {
    x: cx,
    y: padding / 4 * scaleFactor + cy - hy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: triangle.map(point => `${point.x},${point.y}`).join(" "),
      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function ActivityNodeIcons(_ref20) {
  let {
    x,
    y,
    width,
    height,
    icons
  } = _ref20;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Loop) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u21BB"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.AdHocSubProcess) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "~"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Compensation) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u23EA"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Collapsed) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
        x: x + width / 2 - 15,
        y: y + height - 20 - _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH,
        width: 30,
        height: 20,
        fill: "transparent",
        stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
        strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
        fontSize: "2em",
        textAnchor: "middle",
        dominantBaseline: "auto",
        fontWeight: "bold",
        x: x + width / 2,
        y: 1 + y + height,
        children: "+"
      })]
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceParallel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2 - 7}, ${y + height - 15}) rotate(90)`,
      children: "\u2630"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceSequential) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u2630"
    })]
  });
}
try {
    // @ts-ignore
    DataObjectNodeSvg.displayName = "DataObjectNodeSvg";
    // @ts-ignore
    DataObjectNodeSvg.__docgenInfo = { "description": "", "displayName": "DataObjectNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isIcon": { "defaultValue": null, "description": "", "name": "isIcon", "required": false, "type": { "name": "boolean" } }, "showFoldedPage": { "defaultValue": null, "description": "", "name": "showFoldedPage", "required": false, "type": { "name": "boolean" } }, "showArrow": { "defaultValue": null, "description": "", "name": "showArrow", "required": false, "type": { "name": "boolean" } }, "transform": { "defaultValue": null, "description": "", "name": "transform", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg"] = { docgenInfo: DataObjectNodeSvg.__docgenInfo, name: "DataObjectNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNodeSvg.displayName = "StartEventNodeSvg";
    // @ts-ignore
    StartEventNodeSvg.__docgenInfo = { "description": "", "displayName": "StartEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg"] = { docgenInfo: StartEventNodeSvg.__docgenInfo, name: "StartEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNodeSvg.displayName = "IntermediateCatchEventNodeSvg";
    // @ts-ignore
    IntermediateCatchEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg"] = { docgenInfo: IntermediateCatchEventNodeSvg.__docgenInfo, name: "IntermediateCatchEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNodeSvg.displayName = "IntermediateThrowEventNodeSvg";
    // @ts-ignore
    IntermediateThrowEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg"] = { docgenInfo: IntermediateThrowEventNodeSvg.__docgenInfo, name: "IntermediateThrowEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNodeSvg.displayName = "EndEventNodeSvg";
    // @ts-ignore
    EndEventNodeSvg.__docgenInfo = { "description": "", "displayName": "EndEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg"] = { docgenInfo: EndEventNodeSvg.__docgenInfo, name: "EndEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNodeSvg.displayName = "TaskNodeSvg";
    // @ts-ignore
    TaskNodeSvg.__docgenInfo = { "description": "", "displayName": "TaskNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "markers": { "defaultValue": null, "description": "", "name": "markers", "required": false, "type": { "name": "(ActivityNodeMarker | \"CallActivityPaletteIcon\")[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"task\"" }, { "value": "\"userTask\"" }, { "value": "\"none\"" }] } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg"] = { docgenInfo: TaskNodeSvg.__docgenInfo, name: "TaskNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ScriptTaskSvg.displayName = "ScriptTaskSvg";
    // @ts-ignore
    ScriptTaskSvg.__docgenInfo = { "description": "", "displayName": "ScriptTaskSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": { value: "2" }, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "size": { "defaultValue": { value: "100" }, "description": "", "name": "size", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ScriptTaskSvg"] = { docgenInfo: ScriptTaskSvg.__docgenInfo, name: "ScriptTaskSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ScriptTaskSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    BusinessRuleTaskSvg.displayName = "BusinessRuleTaskSvg";
    // @ts-ignore
    BusinessRuleTaskSvg.__docgenInfo = { "description": "", "displayName": "BusinessRuleTaskSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } }, "padding": { "defaultValue": { value: "5" }, "description": "", "name": "padding", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#BusinessRuleTaskSvg"] = { docgenInfo: BusinessRuleTaskSvg.__docgenInfo, name: "BusinessRuleTaskSvg", path: "src/diagram/nodes/NodeSvgs.tsx#BusinessRuleTaskSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ServiceTaskIcon.displayName = "ServiceTaskIcon";
    // @ts-ignore
    ServiceTaskIcon.__docgenInfo = { "description": "", "displayName": "ServiceTaskIcon", "props": { "width": { "defaultValue": { value: "100" }, "description": "", "name": "width", "required": false, "type": { "name": "number" } }, "height": { "defaultValue": { value: "100" }, "description": "", "name": "height", "required": false, "type": { "name": "number" } }, "alt": { "defaultValue": { value: "BPMN Service Task Icon" }, "description": "", "name": "alt", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ServiceTaskIcon"] = { docgenInfo: ServiceTaskIcon.__docgenInfo, name: "ServiceTaskIcon", path: "src/diagram/nodes/NodeSvgs.tsx#ServiceTaskIcon" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UserTaskSvg.displayName = "UserTaskSvg";
    // @ts-ignore
    UserTaskSvg.__docgenInfo = { "description": "", "displayName": "UserTaskSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#UserTaskSvg"] = { docgenInfo: UserTaskSvg.__docgenInfo, name: "UserTaskSvg", path: "src/diagram/nodes/NodeSvgs.tsx#UserTaskSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNodeSvg.displayName = "GatewayNodeSvg";
    // @ts-ignore
    GatewayNodeSvg.__docgenInfo = { "description": "", "displayName": "GatewayNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"none\"" }] } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg"] = { docgenInfo: GatewayNodeSvg.__docgenInfo, name: "GatewayNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ParallelGatewaySvg.displayName = "ParallelGatewaySvg";
    // @ts-ignore
    ParallelGatewaySvg.__docgenInfo = { "description": "", "displayName": "ParallelGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ParallelGatewaySvg"] = { docgenInfo: ParallelGatewaySvg.__docgenInfo, name: "ParallelGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ParallelGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ExclusiveGatewaySvg.displayName = "ExclusiveGatewaySvg";
    // @ts-ignore
    ExclusiveGatewaySvg.__docgenInfo = { "description": "", "displayName": "ExclusiveGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ExclusiveGatewaySvg"] = { docgenInfo: ExclusiveGatewaySvg.__docgenInfo, name: "ExclusiveGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ExclusiveGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    InclusiveGatewaySvg.displayName = "InclusiveGatewaySvg";
    // @ts-ignore
    InclusiveGatewaySvg.__docgenInfo = { "description": "", "displayName": "InclusiveGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#InclusiveGatewaySvg"] = { docgenInfo: InclusiveGatewaySvg.__docgenInfo, name: "InclusiveGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#InclusiveGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventBasedGatewaySvg.displayName = "EventBasedGatewaySvg";
    // @ts-ignore
    EventBasedGatewaySvg.__docgenInfo = { "description": "", "displayName": "EventBasedGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "circleStrokeWidth": { "defaultValue": null, "description": "", "name": "circleStrokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventBasedGatewaySvg"] = { docgenInfo: EventBasedGatewaySvg.__docgenInfo, name: "EventBasedGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventBasedGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ComplexGatewaySvg.displayName = "ComplexGatewaySvg";
    // @ts-ignore
    ComplexGatewaySvg.__docgenInfo = { "description": "", "displayName": "ComplexGatewaySvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "size": { "defaultValue": null, "description": "", "name": "size", "required": true, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ComplexGatewaySvg"] = { docgenInfo: ComplexGatewaySvg.__docgenInfo, name: "ComplexGatewaySvg", path: "src/diagram/nodes/NodeSvgs.tsx#ComplexGatewaySvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNodeSvg.displayName = "TextAnnotationNodeSvg";
    // @ts-ignore
    TextAnnotationNodeSvg.__docgenInfo = { "description": "", "displayName": "TextAnnotationNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "showPlaceholder": { "defaultValue": null, "description": "", "name": "showPlaceholder", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg"] = { docgenInfo: TextAnnotationNodeSvg.__docgenInfo, name: "TextAnnotationNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNodeSvg.displayName = "UnknownNodeSvg";
    // @ts-ignore
    UnknownNodeSvg.__docgenInfo = { "description": "", "displayName": "UnknownNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg"] = { docgenInfo: UnknownNodeSvg.__docgenInfo, name: "UnknownNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventVariantSymbolSvg.displayName = "EventVariantSymbolSvg";
    // @ts-ignore
    EventVariantSymbolSvg.__docgenInfo = { "description": "", "displayName": "EventVariantSymbolSvg", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } }, "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": false, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg"] = { docgenInfo: EventVariantSymbolSvg.__docgenInfo, name: "EventVariantSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    MessageEventSymbolSvg.displayName = "MessageEventSymbolSvg";
    // @ts-ignore
    MessageEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "MessageEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg"] = { docgenInfo: MessageEventSymbolSvg.__docgenInfo, name: "MessageEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TimerEventSymbolSvg.displayName = "TimerEventSymbolSvg";
    // @ts-ignore
    TimerEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "TimerEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg"] = { docgenInfo: TimerEventSymbolSvg.__docgenInfo, name: "TimerEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ErrorEventSymbolSvg.displayName = "ErrorEventSymbolSvg";
    // @ts-ignore
    ErrorEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ErrorEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg"] = { docgenInfo: ErrorEventSymbolSvg.__docgenInfo, name: "ErrorEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EscalationEventSymbolSvg.displayName = "EscalationEventSymbolSvg";
    // @ts-ignore
    EscalationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "EscalationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg"] = { docgenInfo: EscalationEventSymbolSvg.__docgenInfo, name: "EscalationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CancelEventSymbolSvg.displayName = "CancelEventSymbolSvg";
    // @ts-ignore
    CancelEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CancelEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg"] = { docgenInfo: CancelEventSymbolSvg.__docgenInfo, name: "CancelEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CompensationEventSymbolSvg.displayName = "CompensationEventSymbolSvg";
    // @ts-ignore
    CompensationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CompensationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg"] = { docgenInfo: CompensationEventSymbolSvg.__docgenInfo, name: "CompensationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ConditionalEventSymbolSvg.displayName = "ConditionalEventSymbolSvg";
    // @ts-ignore
    ConditionalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ConditionalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg"] = { docgenInfo: ConditionalEventSymbolSvg.__docgenInfo, name: "ConditionalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LinkEventSymbolSvg.displayName = "LinkEventSymbolSvg";
    // @ts-ignore
    LinkEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "LinkEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg"] = { docgenInfo: LinkEventSymbolSvg.__docgenInfo, name: "LinkEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SignalEventSymbolSvg.displayName = "SignalEventSymbolSvg";
    // @ts-ignore
    SignalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "SignalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isMorphingPanel": { "defaultValue": null, "description": "", "name": "isMorphingPanel", "required": false, "type": { "name": "boolean" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg"] = { docgenInfo: SignalEventSymbolSvg.__docgenInfo, name: "SignalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ActivityNodeIcons.displayName = "ActivityNodeIcons";
    // @ts-ignore
    ActivityNodeIcons.__docgenInfo = { "description": "", "displayName": "ActivityNodeIcons", "props": { "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": true, "type": { "name": "number" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": true, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": true, "type": { "name": "Set<ActivityNodeMarker>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons"] = { docgenInfo: ActivityNodeIcons.__docgenInfo, name: "ActivityNodeIcons", path: "src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNodeSvg.displayName = "LaneNodeSvg";
    // @ts-ignore
    LaneNodeSvg.__docgenInfo = { "description": "", "displayName": "LaneNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "gutterWidth": { "defaultValue": null, "description": "", "name": "gutterWidth", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg"] = { docgenInfo: LaneNodeSvg.__docgenInfo, name: "LaneNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNodeSvg.displayName = "SubProcessNodeSvg";
    // @ts-ignore
    SubProcessNodeSvg.__docgenInfo = { "description": "", "displayName": "SubProcessNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "borderRadius": { "defaultValue": null, "description": "", "name": "borderRadius", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": false, "type": { "name": "ActivityNodeMarker[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"event\"" }, { "value": "\"transaction\"" }, { "value": "\"multi-instance\"" }, { "value": "\"other\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg"] = { docgenInfo: SubProcessNodeSvg.__docgenInfo, name: "SubProcessNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNodeSvg.displayName = "GroupNodeSvg";
    // @ts-ignore
    GroupNodeSvg.__docgenInfo = { "description": "", "displayName": "GroupNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg"] = { docgenInfo: GroupNodeSvg.__docgenInfo, name: "GroupNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,