"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./stories/misc/empty/Empty.stories.tsx":
/*!**********************************************!*\
  !*** ./stories/misc/empty/Empty.stories.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Empty: () => (/* binding */ Empty),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   generateEmptyBpmn20: () => (/* binding */ generateEmptyBpmn20)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/boxed-expression-component/dist/api */ "../boxed-expression-component/dist/api/index.js");
/* harmony import */ var _bpmnEditorStoriesWrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../bpmnEditorStoriesWrapper */ "./stories/bpmnEditorStoriesWrapper.tsx");
/* harmony import */ var _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/BpmnEditor */ "./src/BpmnEditor.tsx");
var _a, _b, _c;





const generateEmptyBpmn20 = () => `<?xml version="1.0" encoding="UTF-8"?>
<definitions
  xmlns="${Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()).get("")}"
  targetNamespace="https://kie.apache.org/bpmn/${(0,_kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_1__.generateUuid)()}"
  expressionLanguage=""
  id="${(0,_kie_tools_boxed_expression_component_dist_api__WEBPACK_IMPORTED_MODULE_1__.generateUuid)()}">
</definitions>`;
const meta = {
  title: "Misc/Empty",
  component: _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__.BpmnEditor,
  includeStories: /^[A-Z]/
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const marshaller = Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(generateEmptyBpmn20(), {
  upgradeTo: "latest"
});
const model = marshaller.parser.parse();
const Empty = {
  render: args => (0,_bpmnEditorStoriesWrapper__WEBPACK_IMPORTED_MODULE_2__.BpmnEditorWrapper)(),
  args: {
    model: model,
    originalVersion: "2.0",
    externalContextDescription: "",
    externalContextName: "Storybook - BPMN Editor",
    issueTrackerHref: "",
    xml: marshaller.builder.build(model)
  }
};
Empty.parameters = {
  ...Empty.parameters,
  docs: {
    ...((_a = Empty.parameters) === null || _a === void 0 ? void 0 : _a.docs),
    source: {
      originalSource: "{\n  render: args => BpmnEditorWrapper(),\n  args: {\n    model: model,\n    originalVersion: \"2.0\",\n    externalContextDescription: \"\",\n    externalContextName: \"Storybook - BPMN Editor\",\n    issueTrackerHref: \"\",\n    xml: marshaller.builder.build(model)\n  }\n}",
      ...((_c = (_b = Empty.parameters) === null || _b === void 0 ? void 0 : _b.docs) === null || _c === void 0 ? void 0 : _c.source)
    }
  }
};;const __namedExportsOrder = ["generateEmptyBpmn20","Empty"];

/***/ }),

/***/ "./dist/idRandomizer/bpmnIdRandomizer.js":
/*!***********************************************!*\
  !*** ./dist/idRandomizer/bpmnIdRandomizer.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNewBpmnIdRandomizer: () => (/* binding */ getNewBpmnIdRandomizer)
/* harmony export */ });
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xml-parser-ts/dist/idRandomizer */ "../xml-parser-ts/dist/idRandomizer.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__);



function getNewBpmnIdRandomizer() {
  return new _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__.XmlParserTsIdRandomizer({
    meta: Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
    elements: Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
    newIdGenerator: _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__.generateUuid
  });
}

/***/ }),

/***/ "../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js":
/*!***************************************************************!*\
  !*** ../bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   elements: () => (/* binding */ elements),
/* harmony export */   meta: () => (/* binding */ meta),
/* harmony export */   ns: () => (/* binding */ ns),
/* harmony export */   root: () => (/* binding */ root),
/* harmony export */   subs: () => (/* binding */ subs)
/* harmony export */ });
const root = {
  element: "definitions",
  type: "BPMN20__tDefinitions"
};
const ns = new Map([["http://www.omg.org/spec/BPMN/20100524/MODEL", ""], ["", "http://www.omg.org/spec/BPMN/20100524/MODEL"], ["http://www.omg.org/spec/BPMN/20100524/DI", "bpmndi:"], ["bpmndi:", "http://www.omg.org/spec/BPMN/20100524/DI"], ["http://www.omg.org/spec/DD/20100524/DC", "dc:"], ["dc:", "http://www.omg.org/spec/DD/20100524/DC"], ["http://www.omg.org/spec/DD/20100524/DI", "di:"], ["di:", "http://www.omg.org/spec/DD/20100524/DI"]]);
const subs = {
  "": {
    "adHocSubProcess": "flowElement",
    "boundaryEvent": "flowElement",
    "businessRuleTask": "flowElement",
    "callActivity": "flowElement",
    "callChoreography": "flowElement",
    "choreographyTask": "flowElement",
    "complexGateway": "flowElement",
    "dataObject": "flowElement",
    "dataObjectReference": "flowElement",
    "dataStoreReference": "flowElement",
    "endEvent": "flowElement",
    "event": "flowElement",
    "eventBasedGateway": "flowElement",
    "exclusiveGateway": "flowElement",
    "implicitThrowEvent": "flowElement",
    "inclusiveGateway": "flowElement",
    "intermediateCatchEvent": "flowElement",
    "intermediateThrowEvent": "flowElement",
    "manualTask": "flowElement",
    "parallelGateway": "flowElement",
    "receiveTask": "flowElement",
    "scriptTask": "flowElement",
    "sendTask": "flowElement",
    "sequenceFlow": "flowElement",
    "serviceTask": "flowElement",
    "startEvent": "flowElement",
    "subChoreography": "flowElement",
    "subProcess": "flowElement",
    "task": "flowElement",
    "transaction": "flowElement",
    "userTask": "flowElement",
    "association": "artifact",
    "group": "artifact",
    "textAnnotation": "artifact",
    "callConversation": "conversationNode",
    "conversation": "conversationNode",
    "subConversation": "conversationNode",
    "cancelEventDefinition": "eventDefinition",
    "compensateEventDefinition": "eventDefinition",
    "conditionalEventDefinition": "eventDefinition",
    "errorEventDefinition": "eventDefinition",
    "escalationEventDefinition": "eventDefinition",
    "linkEventDefinition": "eventDefinition",
    "messageEventDefinition": "eventDefinition",
    "signalEventDefinition": "eventDefinition",
    "terminateEventDefinition": "eventDefinition",
    "timerEventDefinition": "eventDefinition",
    "category": "rootElement",
    "collaboration": "rootElement",
    "correlationProperty": "rootElement",
    "dataStore": "rootElement",
    "endPoint": "rootElement",
    "error": "rootElement",
    "escalation": "rootElement",
    "eventDefinition": "rootElement",
    "globalBusinessRuleTask": "rootElement",
    "globalManualTask": "rootElement",
    "globalScriptTask": "rootElement",
    "globalTask": "rootElement",
    "globalUserTask": "rootElement",
    "interface": "rootElement",
    "itemDefinition": "rootElement",
    "message": "rootElement",
    "partnerEntity": "rootElement",
    "partnerRole": "rootElement",
    "process": "rootElement",
    "resource": "rootElement",
    "signal": "rootElement",
    "choreography": "collaboration",
    "globalConversation": "collaboration",
    "formalExpression": "expression",
    "globalChoreographyTask": "choreography",
    "humanPerformer": "performer",
    "potentialOwner": "performer",
    "multiInstanceLoopCharacteristics": "loopCharacteristics",
    "standardLoopCharacteristics": "loopCharacteristics",
    "performer": "resourceRole"
  },
  "bpmndi:": {
    "bpmndi:BPMNShape": "di:DiagramElement",
    "bpmndi:BPMNEdge": "di:DiagramElement"
  },
  "dc:": {},
  "di:": {}
};
const elements = {
  "definitions": "BPMN20__tDefinitions",
  "import": "BPMN20__tImport",
  "activity": "BPMN20__tActivity",
  "adHocSubProcess": "BPMN20__tAdHocSubProcess",
  "artifact": "BPMN20__tArtifact",
  "assignment": "BPMN20__tAssignment",
  "association": "BPMN20__tAssociation",
  "auditing": "BPMN20__tAuditing",
  "baseElement": "BPMN20__tBaseElement",
  "baseElementWithMixedContent": "BPMN20__tBaseElementWithMixedContent",
  "boundaryEvent": "BPMN20__tBoundaryEvent",
  "businessRuleTask": "BPMN20__tBusinessRuleTask",
  "callableElement": "BPMN20__tCallableElement",
  "callActivity": "BPMN20__tCallActivity",
  "callChoreography": "BPMN20__tCallChoreography",
  "callConversation": "BPMN20__tCallConversation",
  "cancelEventDefinition": "BPMN20__tCancelEventDefinition",
  "catchEvent": "BPMN20__tCatchEvent",
  "category": "BPMN20__tCategory",
  "categoryValue": "BPMN20__tCategoryValue",
  "choreography": "BPMN20__tChoreography",
  "choreographyActivity": "BPMN20__tChoreographyActivity",
  "choreographyTask": "BPMN20__tChoreographyTask",
  "collaboration": "BPMN20__tCollaboration",
  "compensateEventDefinition": "BPMN20__tCompensateEventDefinition",
  "complexBehaviorDefinition": "BPMN20__tComplexBehaviorDefinition",
  "complexGateway": "BPMN20__tComplexGateway",
  "conditionalEventDefinition": "BPMN20__tConditionalEventDefinition",
  "conversation": "BPMN20__tConversation",
  "conversationAssociation": "BPMN20__tConversationAssociation",
  "conversationLink": "BPMN20__tConversationLink",
  "conversationNode": "BPMN20__tConversationNode",
  "correlationKey": "BPMN20__tCorrelationKey",
  "correlationProperty": "BPMN20__tCorrelationProperty",
  "correlationPropertyBinding": "BPMN20__tCorrelationPropertyBinding",
  "correlationPropertyRetrievalExpression": "BPMN20__tCorrelationPropertyRetrievalExpression",
  "correlationSubscription": "BPMN20__tCorrelationSubscription",
  "dataAssociation": "BPMN20__tDataAssociation",
  "dataInput": "BPMN20__tDataInput",
  "dataInputAssociation": "BPMN20__tDataInputAssociation",
  "dataObject": "BPMN20__tDataObject",
  "dataObjectReference": "BPMN20__tDataObjectReference",
  "dataOutput": "BPMN20__tDataOutput",
  "dataOutputAssociation": "BPMN20__tDataOutputAssociation",
  "dataState": "BPMN20__tDataState",
  "dataStore": "BPMN20__tDataStore",
  "dataStoreReference": "BPMN20__tDataStoreReference",
  "documentation": "BPMN20__tDocumentation",
  "endEvent": "BPMN20__tEndEvent",
  "endPoint": "BPMN20__tEndPoint",
  "error": "BPMN20__tError",
  "errorEventDefinition": "BPMN20__tErrorEventDefinition",
  "escalation": "BPMN20__tEscalation",
  "escalationEventDefinition": "BPMN20__tEscalationEventDefinition",
  "event": "BPMN20__tEvent",
  "eventBasedGateway": "BPMN20__tEventBasedGateway",
  "eventDefinition": "BPMN20__tEventDefinition",
  "exclusiveGateway": "BPMN20__tExclusiveGateway",
  "expression": "BPMN20__tExpression",
  "extension": "BPMN20__tExtension",
  "flowElement": "BPMN20__tFlowElement",
  "flowNode": "BPMN20__tFlowNode",
  "formalExpression": "BPMN20__tFormalExpression",
  "gateway": "BPMN20__tGateway",
  "globalBusinessRuleTask": "BPMN20__tGlobalBusinessRuleTask",
  "globalChoreographyTask": "BPMN20__tGlobalChoreographyTask",
  "globalConversation": "BPMN20__tGlobalConversation",
  "globalManualTask": "BPMN20__tGlobalManualTask",
  "globalScriptTask": "BPMN20__tGlobalScriptTask",
  "globalTask": "BPMN20__tGlobalTask",
  "globalUserTask": "BPMN20__tGlobalUserTask",
  "group": "BPMN20__tGroup",
  "humanPerformer": "BPMN20__tHumanPerformer",
  "implicitThrowEvent": "BPMN20__tImplicitThrowEvent",
  "inclusiveGateway": "BPMN20__tInclusiveGateway",
  "inputSet": "BPMN20__tInputSet",
  "interface": "BPMN20__tInterface",
  "intermediateCatchEvent": "BPMN20__tIntermediateCatchEvent",
  "intermediateThrowEvent": "BPMN20__tIntermediateThrowEvent",
  "ioBinding": "BPMN20__tInputOutputBinding",
  "ioSpecification": "BPMN20__tInputOutputSpecification",
  "itemDefinition": "BPMN20__tItemDefinition",
  "lane": "BPMN20__tLane",
  "laneSet": "BPMN20__tLaneSet",
  "linkEventDefinition": "BPMN20__tLinkEventDefinition",
  "loopCharacteristics": "BPMN20__tLoopCharacteristics",
  "manualTask": "BPMN20__tManualTask",
  "message": "BPMN20__tMessage",
  "messageEventDefinition": "BPMN20__tMessageEventDefinition",
  "messageFlow": "BPMN20__tMessageFlow",
  "messageFlowAssociation": "BPMN20__tMessageFlowAssociation",
  "monitoring": "BPMN20__tMonitoring",
  "multiInstanceLoopCharacteristics": "BPMN20__tMultiInstanceLoopCharacteristics",
  "operation": "BPMN20__tOperation",
  "outputSet": "BPMN20__tOutputSet",
  "parallelGateway": "BPMN20__tParallelGateway",
  "participant": "BPMN20__tParticipant",
  "participantAssociation": "BPMN20__tParticipantAssociation",
  "participantMultiplicity": "BPMN20__tParticipantMultiplicity",
  "partnerEntity": "BPMN20__tPartnerEntity",
  "partnerRole": "BPMN20__tPartnerRole",
  "performer": "BPMN20__tPerformer",
  "potentialOwner": "BPMN20__tPotentialOwner",
  "process": "BPMN20__tProcess",
  "property": "BPMN20__tProperty",
  "receiveTask": "BPMN20__tReceiveTask",
  "relationship": "BPMN20__tRelationship",
  "rendering": "BPMN20__tRendering",
  "resource": "BPMN20__tResource",
  "resourceAssignmentExpression": "BPMN20__tResourceAssignmentExpression",
  "resourceParameter": "BPMN20__tResourceParameter",
  "resourceParameterBinding": "BPMN20__tResourceParameterBinding",
  "resourceRole": "BPMN20__tResourceRole",
  "rootElement": "BPMN20__tRootElement",
  "scriptTask": "BPMN20__tScriptTask",
  "script": "BPMN20__tScript",
  "sendTask": "BPMN20__tSendTask",
  "sequenceFlow": "BPMN20__tSequenceFlow",
  "serviceTask": "BPMN20__tServiceTask",
  "signal": "BPMN20__tSignal",
  "signalEventDefinition": "BPMN20__tSignalEventDefinition",
  "standardLoopCharacteristics": "BPMN20__tStandardLoopCharacteristics",
  "startEvent": "BPMN20__tStartEvent",
  "subChoreography": "BPMN20__tSubChoreography",
  "subConversation": "BPMN20__tSubConversation",
  "subProcess": "BPMN20__tSubProcess",
  "task": "BPMN20__tTask",
  "terminateEventDefinition": "BPMN20__tTerminateEventDefinition",
  "textAnnotation": "BPMN20__tTextAnnotation",
  "throwEvent": "BPMN20__tThrowEvent",
  "timerEventDefinition": "BPMN20__tTimerEventDefinition",
  "transaction": "BPMN20__tTransaction",
  "userTask": "BPMN20__tUserTask",
  "bpmndi:BPMNDiagram": "BPMNDI__BPMNDiagram",
  "bpmndi:BPMNPlane": "BPMNDI__BPMNPlane",
  "bpmndi:BPMNLabelStyle": "BPMNDI__BPMNLabelStyle",
  "bpmndi:BPMNShape": "BPMNDI__BPMNShape",
  "bpmndi:BPMNLabel": "BPMNDI__BPMNLabel",
  "bpmndi:BPMNEdge": "BPMNDI__BPMNEdge",
  "dc:Font": "DC__Font",
  "dc:Point": "DC__Point",
  "dc:Bounds": "DC__Bounds",
  "di:DiagramElement": "DI__DiagramElement",
  "di:Diagram": "DI__Diagram",
  "di:Style": "DI__Style",
  "di:Node": "DI__Node",
  "di:Edge": "DI__Edge",
  "di:Shape": "DI__Shape",
  "di:Plane": "DI__Plane",
  "di:LabeledEdge": "DI__LabeledEdge",
  "di:Label": "DI__Label",
  "di:LabeledShape": "DI__LabeledShape"
};
const meta = {
  "BPMN20__tDefinitions": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:ID"
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "@_targetNamespace": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_expressionLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_typeLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:anyURI"
    },
    "@_exporter": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "@_exporterVersion": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDefinitions",
      xsdType: "xsd:string"
    },
    "import": {
      type: "BPMN20__tImport",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "extension": {
      type: "BPMN20__tExtension",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "rootElement": {
      type: "BPMN20__tRootElement",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    },
    "bpmndi:BPMNDiagram": {
      type: "BPMNDI__BPMNDiagram",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "relationship": {
      type: "BPMN20__tRelationship",
      isArray: true,
      fromType: "BPMN20__tDefinitions",
      xsdType: "// local type"
    }
  },
  "BPMN20__tImport": {
    "@_namespace": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:anyURI"
    },
    "@_location": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:string"
    },
    "@_importType": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tImport",
      xsdType: "xsd:anyURI"
    }
  },
  "BPMN20__tActivity__extensionElements": {},
  "BPMN20__tAdHocSubProcess__extensionElements": {},
  "BPMN20__tAdHocSubProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAdHocSubProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "@_cancelRemainingInstances": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "xsd:boolean"
    },
    "@_ordering": {
      type: "BPMN20__tAdHocOrdering",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "// local type"
    },
    "completionCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAdHocSubProcess",
      xsdType: "// local type"
    }
  },
  "BPMN20__tArtifact__extensionElements": {},
  "BPMN20__tAssignment__extensionElements": {},
  "BPMN20__tAssignment": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAssignment__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "from": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAssignment",
      xsdType: "// local type"
    },
    "to": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tAssignment",
      xsdType: "// local type"
    }
  },
  "BPMN20__tAssociation__extensionElements": {},
  "BPMN20__tAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "xsd:QName"
    },
    "@_associationDirection": {
      type: "BPMN20__tAssociationDirection",
      isArray: false,
      fromType: "BPMN20__tAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tAuditing__extensionElements": {},
  "BPMN20__tAuditing": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tAuditing__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tBaseElement__extensionElements": {},
  "BPMN20__tBaseElementWithMixedContent__extensionElements": {},
  "BPMN20__tBoundaryEvent__extensionElements": {},
  "BPMN20__tBoundaryEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tBoundaryEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    },
    "@_cancelActivity": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tBoundaryEvent",
      xsdType: "xsd:boolean"
    },
    "@_attachedToRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBoundaryEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tBusinessRuleTask__extensionElements": {},
  "BPMN20__tBusinessRuleTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tBusinessRuleTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tBusinessRuleTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallableElement__extensionElements": {},
  "BPMN20__tCallableElement": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallableElement__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallActivity__extensionElements": {},
  "BPMN20__tCallActivity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallActivity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_calledElement": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallActivity",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCallChoreography__extensionElements": {},
  "BPMN20__tCallChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "@_calledChoreographyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallChoreography",
      xsdType: "xsd:QName"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCallChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCallConversation__extensionElements": {},
  "BPMN20__tCallConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCallConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    },
    "@_calledCollaborationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallConversation",
      xsdType: "xsd:QName"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCallConversation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCancelEventDefinition__extensionElements": {},
  "BPMN20__tCancelEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCancelEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tCatchEvent__extensionElements": {},
  "BPMN20__tCategory__extensionElements": {},
  "BPMN20__tCategory": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCategory__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCategory",
      xsdType: "xsd:string"
    },
    "categoryValue": {
      type: "BPMN20__tCategoryValue",
      isArray: true,
      fromType: "BPMN20__tCategory",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCategoryValue__extensionElements": {},
  "BPMN20__tCategoryValue": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCategoryValue__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_value": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCategoryValue",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tChoreography__extensionElements": {},
  "BPMN20__tChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tChoreographyActivity__extensionElements": {},
  "BPMN20__tChoreographyTask__extensionElements": {},
  "BPMN20__tChoreographyTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tChoreographyTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCollaboration__extensionElements": {},
  "BPMN20__tCollaboration": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCollaboration__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCompensateEventDefinition__extensionElements": {},
  "BPMN20__tCompensateEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCompensateEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_waitForCompletion": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCompensateEventDefinition",
      xsdType: "xsd:boolean"
    },
    "@_activityRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCompensateEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tComplexBehaviorDefinition__extensionElements": {},
  "BPMN20__tComplexBehaviorDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tComplexBehaviorDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "condition": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tComplexBehaviorDefinition",
      xsdType: "// local type"
    },
    "event": {
      type: "BPMN20__tImplicitThrowEvent",
      isArray: false,
      fromType: "BPMN20__tComplexBehaviorDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tComplexGateway__extensionElements": {},
  "BPMN20__tComplexGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tComplexGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tComplexGateway",
      xsdType: "xsd:IDREF"
    },
    "activationCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tComplexGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConditionalEventDefinition__extensionElements": {},
  "BPMN20__tConditionalEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConditionalEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "condition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tConditionalEventDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConversation__extensionElements": {},
  "BPMN20__tConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    }
  },
  "BPMN20__tConversationAssociation__extensionElements": {},
  "BPMN20__tConversationAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversationAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_innerConversationNodeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationAssociation",
      xsdType: "xsd:QName"
    },
    "@_outerConversationNodeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tConversationLink__extensionElements": {},
  "BPMN20__tConversationLink": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tConversationLink__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:string"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationLink",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tConversationNode__extensionElements": {},
  "BPMN20__tCorrelationKey__extensionElements": {},
  "BPMN20__tCorrelationKey": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationKey__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationKey",
      xsdType: "xsd:string"
    },
    "correlationPropertyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCorrelationKey",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tCorrelationProperty__extensionElements": {},
  "BPMN20__tCorrelationProperty": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationProperty__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "xsd:string"
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "xsd:QName"
    },
    "correlationPropertyRetrievalExpression": {
      type: "BPMN20__tCorrelationPropertyRetrievalExpression",
      isArray: true,
      fromType: "BPMN20__tCorrelationProperty",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationPropertyBinding__extensionElements": {},
  "BPMN20__tCorrelationPropertyBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationPropertyBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_correlationPropertyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyBinding",
      xsdType: "xsd:QName"
    },
    "dataPath": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyBinding",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationPropertyRetrievalExpression__extensionElements": {},
  "BPMN20__tCorrelationPropertyRetrievalExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationPropertyRetrievalExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyRetrievalExpression",
      xsdType: "xsd:QName"
    },
    "messagePath": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tCorrelationPropertyRetrievalExpression",
      xsdType: "// local type"
    }
  },
  "BPMN20__tCorrelationSubscription__extensionElements": {},
  "BPMN20__tCorrelationSubscription": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tCorrelationSubscription__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_correlationKeyRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCorrelationSubscription",
      xsdType: "xsd:QName"
    },
    "correlationPropertyBinding": {
      type: "BPMN20__tCorrelationPropertyBinding",
      isArray: true,
      fromType: "BPMN20__tCorrelationSubscription",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataAssociation__extensionElements": {},
  "BPMN20__tDataAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataInput__extensionElements": {},
  "BPMN20__tDataInput": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataInput__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataInput",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataInputAssociation__extensionElements": {},
  "BPMN20__tDataInputAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataInputAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataObject__extensionElements": {},
  "BPMN20__tDataObject": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataObject__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataObject",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataObjectReference__extensionElements": {},
  "BPMN20__tDataObjectReference": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataObjectReference__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "xsd:QName"
    },
    "@_dataObjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "xsd:IDREF"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataObjectReference",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataOutput__extensionElements": {},
  "BPMN20__tDataOutput": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataOutput__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "xsd:boolean"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataOutput",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataOutputAssociation__extensionElements": {},
  "BPMN20__tDataOutputAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataOutputAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "sourceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "xsd:IDREF"
    },
    "transformation": {
      type: "BPMN20__tFormalExpression",
      isArray: false,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    },
    "assignment": {
      type: "BPMN20__tAssignment",
      isArray: true,
      fromType: "BPMN20__tDataAssociation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataState__extensionElements": {},
  "BPMN20__tDataState": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataState__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataState",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tDataStore__extensionElements": {},
  "BPMN20__tDataStore": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataStore__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:string"
    },
    "@_capacity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:integer"
    },
    "@_isUnlimited": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:boolean"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataStore",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDataStoreReference__extensionElements": {},
  "BPMN20__tDataStoreReference": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tDataStoreReference__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "xsd:QName"
    },
    "@_dataStoreRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tDataStoreReference",
      xsdType: "// local type"
    }
  },
  "BPMN20__tDocumentation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:ID"
    },
    "@_textFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:string"
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tDocumentation",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tEndEvent__extensionElements": {},
  "BPMN20__tEndEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEndEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEndPoint__extensionElements": {},
  "BPMN20__tEndPoint": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEndPoint__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tError__extensionElements": {},
  "BPMN20__tError": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tError__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:string"
    },
    "@_errorCode": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tError",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tErrorEventDefinition__extensionElements": {},
  "BPMN20__tErrorEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tErrorEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_errorRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tErrorEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEscalation__extensionElements": {},
  "BPMN20__tEscalation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEscalation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:string"
    },
    "@_escalationCode": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEscalationEventDefinition__extensionElements": {},
  "BPMN20__tEscalationEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEscalationEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_escalationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tEscalationEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tEvent__extensionElements": {},
  "BPMN20__tEventBasedGateway__extensionElements": {},
  "BPMN20__tEventBasedGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tEventBasedGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_instantiate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tEventBasedGateway",
      xsdType: "xsd:boolean"
    },
    "@_eventGatewayType": {
      type: "BPMN20__tEventBasedGatewayType",
      isArray: false,
      fromType: "BPMN20__tEventBasedGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tEventDefinition__extensionElements": {},
  "BPMN20__tExclusiveGateway__extensionElements": {},
  "BPMN20__tExclusiveGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tExclusiveGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExclusiveGateway",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tExpression__extensionElements": {},
  "BPMN20__tExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "Anonumous type..."
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExpression",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tExtension": {
    "@_definition": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tExtension",
      xsdType: "xsd:QName"
    },
    "@_mustUnderstand": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tExtension",
      xsdType: "xsd:boolean"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tExtension",
      xsdType: "// local type"
    }
  },
  "BPMN20__tFlowElement__extensionElements": {},
  "BPMN20__tFlowNode__extensionElements": {},
  "BPMN20__tFormalExpression__extensionElements": {},
  "BPMN20__tFormalExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tFormalExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElementWithMixedContent",
      xsdType: "Anonumous type..."
    },
    "@_language": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:anyURI"
    },
    "@_evaluatesToTypeRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:QName"
    },
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFormalExpression",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tGateway__extensionElements": {},
  "BPMN20__tGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalBusinessRuleTask__extensionElements": {},
  "BPMN20__tGlobalBusinessRuleTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalBusinessRuleTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tGlobalBusinessRuleTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalChoreographyTask__extensionElements": {},
  "BPMN20__tGlobalChoreographyTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalChoreographyTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tChoreography",
      xsdType: "// local type"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalChoreographyTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tGlobalConversation__extensionElements": {},
  "BPMN20__tGlobalConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:string"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:boolean"
    },
    "participant": {
      type: "BPMN20__tParticipant",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlow": {
      type: "BPMN20__tMessageFlow",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "conversationAssociation": {
      type: "BPMN20__tConversationAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "participantAssociation": {
      type: "BPMN20__tParticipantAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "messageFlowAssociation": {
      type: "BPMN20__tMessageFlowAssociation",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    },
    "choreographyRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "xsd:QName"
    },
    "conversationLink": {
      type: "BPMN20__tConversationLink",
      isArray: true,
      fromType: "BPMN20__tCollaboration",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalManualTask__extensionElements": {},
  "BPMN20__tGlobalManualTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalManualTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalScriptTask__extensionElements": {},
  "BPMN20__tGlobalScriptTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalScriptTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_scriptLanguage": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalScriptTask",
      xsdType: "xsd:anyURI"
    },
    "script": {
      type: "BPMN20__tScript",
      isArray: false,
      fromType: "BPMN20__tGlobalScriptTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalTask__extensionElements": {},
  "BPMN20__tGlobalTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGlobalUserTask__extensionElements": {},
  "BPMN20__tGlobalUserTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGlobalUserTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tGlobalTask",
      xsdType: "// local type"
    },
    "@_description": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "@_skippable": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:boolean"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "// local type"
    },
    "taskName": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "subject": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "content": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "priority": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "xsd:string"
    },
    "rendering": {
      type: "BPMN20__tRendering",
      isArray: true,
      fromType: "BPMN20__tGlobalUserTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tGroup__extensionElements": {},
  "BPMN20__tGroup": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tGroup__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_categoryValueRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tGroup",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tHumanPerformer__extensionElements": {},
  "BPMN20__tHumanPerformer": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tHumanPerformer__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tImplicitThrowEvent__extensionElements": {},
  "BPMN20__tImplicitThrowEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tImplicitThrowEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tInclusiveGateway__extensionElements": {},
  "BPMN20__tInclusiveGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInclusiveGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInclusiveGateway",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInputSet__extensionElements": {},
  "BPMN20__tInputSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:string"
    },
    "dataInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "optionalInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "whileExecutingInputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    },
    "outputSetRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tInputSet",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInterface__extensionElements": {},
  "BPMN20__tInterface": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInterface__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInterface",
      xsdType: "xsd:string"
    },
    "@_implementationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInterface",
      xsdType: "xsd:QName"
    },
    "operation": {
      type: "BPMN20__tOperation",
      isArray: true,
      fromType: "BPMN20__tInterface",
      xsdType: "// local type"
    }
  },
  "BPMN20__tIntermediateCatchEvent__extensionElements": {},
  "BPMN20__tIntermediateCatchEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tIntermediateCatchEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tIntermediateThrowEvent__extensionElements": {},
  "BPMN20__tIntermediateThrowEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tIntermediateThrowEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: false,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tThrowEvent",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tInputOutputBinding__extensionElements": {},
  "BPMN20__tInputOutputBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputOutputBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:QName"
    },
    "@_inputDataRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:IDREF"
    },
    "@_outputDataRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tInputOutputBinding",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tInputOutputSpecification__extensionElements": {},
  "BPMN20__tInputOutputSpecification": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tInputOutputSpecification__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "dataInput": {
      type: "BPMN20__tDataInput",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "inputSet": {
      type: "BPMN20__tInputSet",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: true,
      fromType: "BPMN20__tInputOutputSpecification",
      xsdType: "// local type"
    }
  },
  "BPMN20__tItemDefinition__extensionElements": {},
  "BPMN20__tItemDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tItemDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "xsd:QName"
    },
    "@_isCollection": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "xsd:boolean"
    },
    "@_itemKind": {
      type: "BPMN20__tItemKind",
      isArray: false,
      fromType: "BPMN20__tItemDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLane__extensionElements": {},
  "BPMN20__tLane": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLane__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:string"
    },
    "@_partitionElementRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:QName"
    },
    "partitionElement": {
      type: "BPMN20__tBaseElement",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "// local type"
    },
    "flowNodeRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tLane",
      xsdType: "xsd:IDREF"
    },
    "childLaneSet": {
      type: "BPMN20__tLaneSet",
      isArray: false,
      fromType: "BPMN20__tLane",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLaneSet__extensionElements": {},
  "BPMN20__tLaneSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLaneSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLaneSet",
      xsdType: "xsd:string"
    },
    "lane": {
      type: "BPMN20__tLane",
      isArray: true,
      fromType: "BPMN20__tLaneSet",
      xsdType: "// local type"
    }
  },
  "BPMN20__tLinkEventDefinition__extensionElements": {},
  "BPMN20__tLinkEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tLinkEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:string"
    },
    "source": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:QName"
    },
    "target": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tLinkEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tLoopCharacteristics__extensionElements": {},
  "BPMN20__tManualTask__extensionElements": {},
  "BPMN20__tManualTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tManualTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    }
  },
  "BPMN20__tMessage__extensionElements": {},
  "BPMN20__tMessage": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessage__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessage",
      xsdType: "xsd:string"
    },
    "@_itemRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessage",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageEventDefinition__extensionElements": {},
  "BPMN20__tMessageEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageEventDefinition",
      xsdType: "xsd:QName"
    },
    "operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageFlow__extensionElements": {},
  "BPMN20__tMessageFlow": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageFlow__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:string"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlow",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMessageFlowAssociation__extensionElements": {},
  "BPMN20__tMessageFlowAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMessageFlowAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_innerMessageFlowRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlowAssociation",
      xsdType: "xsd:QName"
    },
    "@_outerMessageFlowRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMessageFlowAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tMonitoring__extensionElements": {},
  "BPMN20__tMonitoring": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMonitoring__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tMultiInstanceLoopCharacteristics__extensionElements": {},
  "BPMN20__tMultiInstanceLoopCharacteristics": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tMultiInstanceLoopCharacteristics__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_isSequential": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:boolean"
    },
    "@_behavior": {
      type: "BPMN20__tMultiInstanceFlowCondition",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "@_oneBehaviorEventRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "@_noneBehaviorEventRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "loopCardinality": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "loopDataInputRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "loopDataOutputRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "xsd:QName"
    },
    "inputDataItem": {
      type: "BPMN20__tDataInput",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "outputDataItem": {
      type: "BPMN20__tDataOutput",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "complexBehaviorDefinition": {
      type: "BPMN20__tComplexBehaviorDefinition",
      isArray: true,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    },
    "completionCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tMultiInstanceLoopCharacteristics",
      xsdType: "// local type"
    }
  },
  "BPMN20__tOperation__extensionElements": {},
  "BPMN20__tOperation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tOperation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:string"
    },
    "@_implementationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "inMessageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "outMessageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    },
    "errorRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOperation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tOutputSet__extensionElements": {},
  "BPMN20__tOutputSet": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tOutputSet__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:string"
    },
    "dataOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "optionalOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "whileExecutingOutputRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    },
    "inputSetRefs": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tOutputSet",
      xsdType: "xsd:IDREF"
    }
  },
  "BPMN20__tParallelGateway__extensionElements": {},
  "BPMN20__tParallelGateway": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParallelGateway__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_gatewayDirection": {
      type: "BPMN20__tGatewayDirection",
      isArray: false,
      fromType: "BPMN20__tGateway",
      xsdType: "// local type"
    }
  },
  "BPMN20__tParticipant__extensionElements": {},
  "BPMN20__tParticipant": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipant__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:string"
    },
    "@_processRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "interfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "endPointRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tParticipant",
      xsdType: "xsd:QName"
    },
    "participantMultiplicity": {
      type: "BPMN20__tParticipantMultiplicity",
      isArray: false,
      fromType: "BPMN20__tParticipant",
      xsdType: "// local type"
    }
  },
  "BPMN20__tParticipantAssociation__extensionElements": {},
  "BPMN20__tParticipantAssociation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipantAssociation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "innerParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipantAssociation",
      xsdType: "xsd:QName"
    },
    "outerParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tParticipantAssociation",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tParticipantMultiplicity__extensionElements": {},
  "BPMN20__tParticipantMultiplicity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tParticipantMultiplicity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_minimum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tParticipantMultiplicity",
      xsdType: "xsd:int"
    },
    "@_maximum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tParticipantMultiplicity",
      xsdType: "xsd:int"
    }
  },
  "BPMN20__tPartnerEntity__extensionElements": {},
  "BPMN20__tPartnerEntity": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPartnerEntity__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tPartnerEntity",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tPartnerEntity",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tPartnerRole__extensionElements": {},
  "BPMN20__tPartnerRole": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPartnerRole__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tPartnerRole",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tPartnerRole",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tPerformer__extensionElements": {},
  "BPMN20__tPerformer": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPerformer__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tPotentialOwner__extensionElements": {},
  "BPMN20__tPotentialOwner": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tPotentialOwner__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tProcess__extensionElements": {},
  "BPMN20__tProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:string"
    },
    "supportedInterfaceRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "xsd:QName"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "ioBinding": {
      type: "BPMN20__tInputOutputBinding",
      isArray: true,
      fromType: "BPMN20__tCallableElement",
      xsdType: "// local type"
    },
    "@_processType": {
      type: "BPMN20__tProcessType",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "@_isClosed": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:boolean"
    },
    "@_isExecutable": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:boolean"
    },
    "@_definitionalCollaborationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:QName"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "correlationSubscription": {
      type: "BPMN20__tCorrelationSubscription",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "// local type"
    },
    "supports": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tProcess",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tProperty__extensionElements": {},
  "BPMN20__tProperty": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tProperty__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "xsd:string"
    },
    "@_itemSubjectRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "xsd:QName"
    },
    "dataState": {
      type: "BPMN20__tDataState",
      isArray: false,
      fromType: "BPMN20__tProperty",
      xsdType: "// local type"
    }
  },
  "BPMN20__tReceiveTask__extensionElements": {},
  "BPMN20__tReceiveTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tReceiveTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "// local type"
    },
    "@_instantiate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:boolean"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:QName"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tReceiveTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tRelationship__extensionElements": {},
  "BPMN20__tRelationship": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tRelationship__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:string"
    },
    "@_direction": {
      type: "BPMN20__tRelationshipDirection",
      isArray: false,
      fromType: "BPMN20__tRelationship",
      xsdType: "// local type"
    },
    "source": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:QName"
    },
    "target": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tRelationship",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tRendering__extensionElements": {},
  "BPMN20__tRendering": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tRendering__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tResource__extensionElements": {},
  "BPMN20__tResource": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResource__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResource",
      xsdType: "xsd:string"
    },
    "resourceParameter": {
      type: "BPMN20__tResourceParameter",
      isArray: true,
      fromType: "BPMN20__tResource",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceAssignmentExpression__extensionElements": {},
  "BPMN20__tResourceAssignmentExpression": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceAssignmentExpression__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "expression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tResourceAssignmentExpression",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceParameter__extensionElements": {},
  "BPMN20__tResourceParameter": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceParameter__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:string"
    },
    "@_type": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:QName"
    },
    "@_isRequired": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tResourceParameter",
      xsdType: "xsd:boolean"
    }
  },
  "BPMN20__tResourceParameterBinding__extensionElements": {},
  "BPMN20__tResourceParameterBinding": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceParameterBinding__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_parameterRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceParameterBinding",
      xsdType: "xsd:QName"
    },
    "expression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tResourceParameterBinding",
      xsdType: "// local type"
    }
  },
  "BPMN20__tResourceRole__extensionElements": {},
  "BPMN20__tResourceRole": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tResourceRole__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:string"
    },
    "resourceAssignmentExpression": {
      type: "BPMN20__tResourceAssignmentExpression",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    },
    "resourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tResourceRole",
      xsdType: "xsd:QName"
    },
    "resourceParameterBinding": {
      type: "BPMN20__tResourceParameterBinding",
      isArray: true,
      fromType: "BPMN20__tResourceRole",
      xsdType: "// local type"
    }
  },
  "BPMN20__tRootElement__extensionElements": {},
  "BPMN20__tScriptTask__extensionElements": {},
  "BPMN20__tScriptTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tScriptTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_scriptFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tScriptTask",
      xsdType: "xsd:string"
    },
    "script": {
      type: "BPMN20__tScript",
      isArray: false,
      fromType: "BPMN20__tScriptTask",
      xsdType: "// local type"
    }
  },
  "BPMN20__tScript": {
    "__$$text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tScript",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tSendTask__extensionElements": {},
  "BPMN20__tSendTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSendTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "// local type"
    },
    "@_messageRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "xsd:QName"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSendTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSequenceFlow__extensionElements": {},
  "BPMN20__tSequenceFlow": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSequenceFlow__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "@_sourceRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:IDREF"
    },
    "@_targetRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:IDREF"
    },
    "@_isImmediate": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "xsd:boolean"
    },
    "conditionExpression": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tSequenceFlow",
      xsdType: "// local type"
    }
  },
  "BPMN20__tServiceTask__extensionElements": {},
  "BPMN20__tServiceTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tServiceTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tServiceTask",
      xsdType: "// local type"
    },
    "@_operationRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tServiceTask",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSignal__extensionElements": {},
  "BPMN20__tSignal": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSignal__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignal",
      xsdType: "xsd:string"
    },
    "@_structureRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignal",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tSignalEventDefinition__extensionElements": {},
  "BPMN20__tSignalEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSignalEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_signalRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tSignalEventDefinition",
      xsdType: "xsd:QName"
    }
  },
  "BPMN20__tStandardLoopCharacteristics__extensionElements": {},
  "BPMN20__tStandardLoopCharacteristics": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tStandardLoopCharacteristics__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_testBefore": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "xsd:boolean"
    },
    "@_loopMaximum": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "xsd:integer"
    },
    "loopCondition": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tStandardLoopCharacteristics",
      xsdType: "// local type"
    }
  },
  "BPMN20__tStartEvent__extensionElements": {},
  "BPMN20__tStartEvent": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tStartEvent__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tEvent",
      xsdType: "// local type"
    },
    "@_parallelMultiple": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:boolean"
    },
    "dataOutput": {
      type: "BPMN20__tDataOutput",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "outputSet": {
      type: "BPMN20__tOutputSet",
      isArray: false,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinition": {
      type: "BPMN20__tEventDefinition",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "// local type"
    },
    "eventDefinitionRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tCatchEvent",
      xsdType: "xsd:QName"
    },
    "@_isInterrupting": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tStartEvent",
      xsdType: "xsd:boolean"
    }
  },
  "BPMN20__tSubChoreography__extensionElements": {},
  "BPMN20__tSubChoreography": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubChoreography__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_initiatingParticipantRef": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "@_loopType": {
      type: "BPMN20__tChoreographyLoopType",
      isArray: false,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tChoreographyActivity",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubChoreography",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubChoreography",
      xsdType: "// local type"
    }
  },
  "BPMN20__tSubConversation__extensionElements": {},
  "BPMN20__tSubConversation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubConversation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:string"
    },
    "participantRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "messageFlowRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "xsd:QName"
    },
    "correlationKey": {
      type: "BPMN20__tCorrelationKey",
      isArray: true,
      fromType: "BPMN20__tConversationNode",
      xsdType: "// local type"
    },
    "conversationNode": {
      type: "BPMN20__tConversationNode",
      isArray: true,
      fromType: "BPMN20__tSubConversation",
      xsdType: "// local type"
    }
  },
  "BPMN20__tSubProcess__extensionElements": {},
  "BPMN20__tSubProcess": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tSubProcess__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTask__extensionElements": {},
  "BPMN20__tTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTerminateEventDefinition__extensionElements": {},
  "BPMN20__tTerminateEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTerminateEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    }
  },
  "BPMN20__tTextAnnotation__extensionElements": {},
  "BPMN20__tTextAnnotation": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTextAnnotation__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_textFormat": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tTextAnnotation",
      xsdType: "xsd:string"
    },
    "text": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tTextAnnotation",
      xsdType: "xsd:string"
    }
  },
  "BPMN20__tThrowEvent__extensionElements": {},
  "BPMN20__tTimerEventDefinition__extensionElements": {},
  "BPMN20__tTimerEventDefinition": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTimerEventDefinition__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "timeDate": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    },
    "timeDuration": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    },
    "timeCycle": {
      type: "BPMN20__tExpression",
      isArray: false,
      fromType: "BPMN20__tTimerEventDefinition",
      xsdType: "// local type"
    }
  },
  "BPMN20__tTransaction__extensionElements": {},
  "BPMN20__tTransaction": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tTransaction__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_triggeredByEvent": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tSubProcess",
      xsdType: "xsd:boolean"
    },
    "laneSet": {
      type: "BPMN20__tLaneSet",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "flowElement": {
      type: "BPMN20__tFlowElement",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "artifact": {
      type: "BPMN20__tArtifact",
      isArray: true,
      fromType: "BPMN20__tSubProcess",
      xsdType: "// local type"
    },
    "@_method": {
      type: "BPMN20__tTransactionMethod",
      isArray: false,
      fromType: "BPMN20__tTransaction",
      xsdType: "// local type"
    }
  },
  "BPMN20__tUserTask__extensionElements": {},
  "BPMN20__tUserTask": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "xsd:ID"
    },
    "documentation": {
      type: "BPMN20__tDocumentation",
      isArray: true,
      fromType: "BPMN20__tBaseElement",
      xsdType: "// local type"
    },
    "extensionElements": {
      type: "BPMN20__tUserTask__extensionElements",
      isArray: false,
      fromType: "BPMN20__tBaseElement",
      xsdType: "Anonumous type..."
    },
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:string"
    },
    "auditing": {
      type: "BPMN20__tAuditing",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "monitoring": {
      type: "BPMN20__tMonitoring",
      isArray: false,
      fromType: "BPMN20__tFlowElement",
      xsdType: "// local type"
    },
    "categoryValueRef": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowElement",
      xsdType: "xsd:QName"
    },
    "incoming": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "outgoing": {
      type: "string",
      isArray: true,
      fromType: "BPMN20__tFlowNode",
      xsdType: "xsd:QName"
    },
    "@_isForCompensation": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:boolean"
    },
    "@_startQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_completionQuantity": {
      type: "integer",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:integer"
    },
    "@_default": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "xsd:IDREF"
    },
    "ioSpecification": {
      type: "BPMN20__tInputOutputSpecification",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "property": {
      type: "BPMN20__tProperty",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataInputAssociation": {
      type: "BPMN20__tDataInputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "dataOutputAssociation": {
      type: "BPMN20__tDataOutputAssociation",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "resourceRole": {
      type: "BPMN20__tResourceRole",
      isArray: true,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "loopCharacteristics": {
      type: "BPMN20__tLoopCharacteristics",
      isArray: false,
      fromType: "BPMN20__tActivity",
      xsdType: "// local type"
    },
    "@_implementation": {
      type: "BPMN20__tImplementation",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "// local type"
    },
    "@_description": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "@_skippable": {
      type: "boolean",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:boolean"
    },
    "taskName": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "subject": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "content": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "priority": {
      type: "string",
      isArray: false,
      fromType: "BPMN20__tUserTask",
      xsdType: "xsd:string"
    },
    "rendering": {
      type: "BPMN20__tRendering",
      isArray: true,
      fromType: "BPMN20__tUserTask",
      xsdType: "// local type"
    }
  },
  "BPMNDI__BPMNDiagram": {
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:string"
    },
    "@_documentation": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:string"
    },
    "@_resolution": {
      type: "float",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:double"
    },
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__Diagram",
      xsdType: "xsd:ID"
    },
    "bpmndi:BPMNPlane": {
      type: "BPMNDI__BPMNPlane",
      isArray: false,
      fromType: "BPMNDI__BPMNDiagram",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "bpmndi:BPMNLabelStyle": {
      type: "BPMNDI__BPMNLabelStyle",
      isArray: true,
      fromType: "BPMNDI__BPMNDiagram",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNPlane__extension": {},
  "BPMNDI__BPMNPlane": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNPlane__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "di:DiagramElement": {
      type: "DI__DiagramElement",
      isArray: true,
      fromType: "DI__Plane",
      xsdType: "type found from namespace with declaration name 'di'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNPlane",
      xsdType: "xsd:QName"
    }
  },
  "BPMNDI__BPMNEdge__extension": {},
  "BPMNDI__BPMNEdge": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNEdge__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "di:waypoint": {
      type: "DC__Point",
      isArray: true,
      fromType: "DI__Edge",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_sourceElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_targetElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "xsd:QName"
    },
    "@_messageVisibleKind": {
      type: "BPMNDI__MessageVisibleKind",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "bpmndi:BPMNLabel": {
      type: "BPMNDI__BPMNLabel",
      isArray: false,
      fromType: "BPMNDI__BPMNEdge",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNShape__extension": {},
  "BPMNDI__BPMNShape": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNShape__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "dc:Bounds": {
      type: "DC__Bounds",
      isArray: false,
      fromType: "DI__Shape",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_bpmnElement": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:QName"
    },
    "@_isHorizontal": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isExpanded": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isMarkerVisible": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_isMessageVisible": {
      type: "boolean",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:boolean"
    },
    "@_participantBandKind": {
      type: "BPMNDI__ParticipantBandKind",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    },
    "@_choreographyActivityShape": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "xsd:QName"
    },
    "bpmndi:BPMNLabel": {
      type: "BPMNDI__BPMNLabel",
      isArray: false,
      fromType: "BPMNDI__BPMNShape",
      xsdType: "type found from namespace with declaration name 'bpmndi'."
    }
  },
  "BPMNDI__BPMNLabel__extension": {},
  "BPMNDI__BPMNLabel": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "xsd:ID"
    },
    "di:extension": {
      type: "BPMNDI__BPMNLabel__extension",
      isArray: false,
      fromType: "DI__DiagramElement",
      xsdType: "Anonumous type..."
    },
    "dc:Bounds": {
      type: "DC__Bounds",
      isArray: false,
      fromType: "DI__Label",
      xsdType: "type found from namespace with declaration name 'dc'."
    },
    "@_labelStyle": {
      type: "string",
      isArray: false,
      fromType: "BPMNDI__BPMNLabel",
      xsdType: "xsd:QName"
    }
  },
  "BPMNDI__BPMNLabelStyle": {
    "@_id": {
      type: "string",
      isArray: false,
      fromType: "DI__Style",
      xsdType: "xsd:ID"
    },
    "dc:Font": {
      type: "DC__Font",
      isArray: false,
      fromType: "BPMNDI__BPMNLabelStyle",
      xsdType: "type found from namespace with declaration name 'dc'."
    }
  },
  "DC__Font": {
    "@_name": {
      type: "string",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:string"
    },
    "@_size": {
      type: "float",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:double"
    },
    "@_isBold": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isItalic": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isUnderline": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    },
    "@_isStrikeThrough": {
      type: "boolean",
      isArray: false,
      fromType: "DC__Font",
      xsdType: "xsd:boolean"
    }
  },
  "DC__Point": {
    "@_x": {
      type: "float",
      isArray: false,
      fromType: "DC__Point",
      xsdType: "xsd:double"
    },
    "@_y": {
      type: "float",
      isArray: false,
      fromType: "DC__Point",
      xsdType: "xsd:double"
    }
  },
  "DC__Bounds": {
    "@_x": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_y": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_width": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    },
    "@_height": {
      type: "float",
      isArray: false,
      fromType: "DC__Bounds",
      xsdType: "xsd:double"
    }
  },
  "DI__DiagramElement__extension": {},
  "DI__Node__extension": {},
  "DI__Edge__extension": {},
  "DI__LabeledEdge__extension": {},
  "DI__Shape__extension": {},
  "DI__LabeledShape__extension": {},
  "DI__Label__extension": {},
  "DI__Plane__extension": {}
};

/***/ }),

/***/ "./src/diagram/BpmnDiagramDomain.tsx":
/*!*******************************************!*\
  !*** ./src/diagram/BpmnDiagramDomain.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeMarker: () => (/* binding */ ActivityNodeMarker),
/* harmony export */   BPMN_CONTAINMENT_MAP: () => (/* binding */ BPMN_CONTAINMENT_MAP),
/* harmony export */   BPMN_GRAPH_STRUCTURE: () => (/* binding */ BPMN_GRAPH_STRUCTURE),
/* harmony export */   BPMN_OUTGOING_STRUCTURE: () => (/* binding */ BPMN_OUTGOING_STRUCTURE),
/* harmony export */   CONNECTION_LINE_EDGE_COMPONENTS_MAPPING: () => (/* binding */ CONNECTION_LINE_EDGE_COMPONENTS_MAPPING),
/* harmony export */   CONNECTION_LINE_NODE_COMPONENT_MAPPING: () => (/* binding */ CONNECTION_LINE_NODE_COMPONENT_MAPPING),
/* harmony export */   DEFAULT_NODE_SIZES: () => (/* binding */ DEFAULT_NODE_SIZES),
/* harmony export */   EDGE_TYPES: () => (/* binding */ EDGE_TYPES),
/* harmony export */   MIN_NODE_SIZES: () => (/* binding */ MIN_NODE_SIZES),
/* harmony export */   MIN_SIZE_FOR_NODES: () => (/* binding */ MIN_SIZE_FOR_NODES),
/* harmony export */   NODE_MIN_HEIGHT: () => (/* binding */ NODE_MIN_HEIGHT),
/* harmony export */   NODE_MIN_WIDTH: () => (/* binding */ NODE_MIN_WIDTH),
/* harmony export */   NODE_TYPES: () => (/* binding */ NODE_TYPES),
/* harmony export */   XY_FLOW_EDGE_TYPES: () => (/* binding */ XY_FLOW_EDGE_TYPES),
/* harmony export */   XY_FLOW_NODE_TYPES: () => (/* binding */ XY_FLOW_NODE_TYPES),
/* harmony export */   bpmnEdgesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnEdgesOutgoingStuffNodePanelMapping),
/* harmony export */   bpmnNodesOutgoingStuffNodePanelMapping: () => (/* binding */ bpmnNodesOutgoingStuffNodePanelMapping),
/* harmony export */   elementToEdgeType: () => (/* binding */ elementToEdgeType),
/* harmony export */   elementToNodeType: () => (/* binding */ elementToNodeType),
/* harmony export */   getNodeTypeFromBpmnElement: () => (/* binding */ getNodeTypeFromBpmnElement)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/graph/graphStructure */ "../xyflow-react-kie-diagram/dist/graph/graphStructure.js");
/* harmony import */ var _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodes/Nodes */ "./src/diagram/nodes/Nodes.tsx");
/* harmony import */ var _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./edges/EdgeSvgs */ "./src/diagram/edges/EdgeSvgs.tsx");
/* harmony import */ var _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nodes/NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _edges_Edges__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./edges/Edges */ "./src/diagram/edges/Edges.tsx");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools-core/switch-expression-ts */ "../switch-expression-ts/dist/switchExpression.js");
/* harmony import */ var _kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/snapgrid/SnapGrid */ "../xyflow-react-kie-diagram/dist/snapgrid/SnapGrid.js");









const NODE_TYPES = {
  startEvent: "node_startEvent",
  intermediateCatchEvent: "node_intermediateCatchEvent",
  intermediateThrowEvent: "node_intermediateThrowEvent",
  endEvent: "node_endEvent",
  task: "node_task",
  subProcess: "node_subProcess",
  gateway: "node_gateway",
  dataObject: "node_dataObject",
  textAnnotation: "node_textAnnotation",
  unknown: "node_unknown",
  group: "node_group",
  lane: "node_lane"
};
const EDGE_TYPES = {
  sequenceFlow: "edge_sequenceFlow",
  association: "edge_association"
};
var ActivityNodeMarker;
(function (ActivityNodeMarker) {
  ActivityNodeMarker["Collapsed"] = "Collapsed";
  ActivityNodeMarker["MultiInstanceParallel"] = "MultiInstanceParallel";
  ActivityNodeMarker["MultiInstanceSequential"] = "MultiInstanceSequential";
  ActivityNodeMarker["Loop"] = "Loop";
  ActivityNodeMarker["Compensation"] = "Compensation";
  ActivityNodeMarker["AdHocSubProcess"] = "AdHocSubProcess";
})(ActivityNodeMarker || (ActivityNodeMarker = {}));
const BPMN_GRAPH_STRUCTURE = new Map([[NODE_TYPES.startEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.task, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.subProcess, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateCatchEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.intermediateThrowEvent, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.gateway, new Map([[EDGE_TYPES.sequenceFlow, new Set([NODE_TYPES.task, NODE_TYPES.subProcess, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent])], [EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.endEvent, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.dataObject, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.group, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.lane, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.textAnnotation])]])], [NODE_TYPES.textAnnotation, new Map([[EDGE_TYPES.association, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.lane])]])]]);
const BPMN_CONTAINMENT_MAP = new Map([[NODE_TYPES.lane, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.subProcess, NODE_TYPES.endEvent, NODE_TYPES.dataObject, NODE_TYPES.textAnnotation, NODE_TYPES.group])]])], [NODE_TYPES.subProcess, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.INSIDE, new Set([NODE_TYPES.startEvent, NODE_TYPES.task, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.gateway, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation, NODE_TYPES.group])], [_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])], [NODE_TYPES.task, new Map([[_kie_tools_xyflow_react_kie_diagram_dist_graph_graphStructure__WEBPACK_IMPORTED_MODULE_1__.ContainmentMode.BORDER, new Set([NODE_TYPES.intermediateCatchEvent])]])]]);
const CONNECTION_LINE_EDGE_COMPONENTS_MAPPING = {
  [EDGE_TYPES.sequenceFlow]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath,
  [EDGE_TYPES.association]: _edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath
};
const CONNECTION_LINE_NODE_COMPONENT_MAPPING = {
  [NODE_TYPES.startEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg,
  [NODE_TYPES.endEvent]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg,
  [NODE_TYPES.task]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg,
  [NODE_TYPES.subProcess]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.SubProcessNodeSvg,
  [NODE_TYPES.gateway]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg,
  [NODE_TYPES.textAnnotation]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg,
  [NODE_TYPES.lane]: _nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.LaneNodeSvg,
  node_dataObject: undefined,
  node_unknown: undefined,
  node_group: undefined
};
const XY_FLOW_NODE_TYPES = {
  [NODE_TYPES.startEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.StartEventNode,
  [NODE_TYPES.intermediateCatchEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateCatchEventNode,
  [NODE_TYPES.intermediateThrowEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.IntermediateThrowEventNode,
  [NODE_TYPES.endEvent]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.EndEventNode,
  [NODE_TYPES.task]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TaskNode,
  [NODE_TYPES.subProcess]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.SubProcessNode,
  [NODE_TYPES.gateway]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GatewayNode,
  [NODE_TYPES.group]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.GroupNode,
  [NODE_TYPES.textAnnotation]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.TextAnnotationNode,
  [NODE_TYPES.dataObject]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.DataObjectNode,
  [NODE_TYPES.lane]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.LaneNode,
  [NODE_TYPES.unknown]: _nodes_Nodes__WEBPACK_IMPORTED_MODULE_2__.UnknownNode
};
const XY_FLOW_EDGE_TYPES = {
  [EDGE_TYPES.sequenceFlow]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.SequenceFlowEdge,
  [EDGE_TYPES.association]: _edges_Edges__WEBPACK_IMPORTED_MODULE_5__.AssociationEdge
};
const BPMN_OUTGOING_STRUCTURE = {
  [NODE_TYPES.startEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.endEvent]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.task]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.subProcess]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.gateway]: {
    nodes: [NODE_TYPES.task, NODE_TYPES.gateway, NODE_TYPES.intermediateCatchEvent, NODE_TYPES.intermediateThrowEvent, NODE_TYPES.endEvent, NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.sequenceFlow, EDGE_TYPES.association]
  },
  [NODE_TYPES.dataObject]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.group]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.lane]: {
    nodes: [NODE_TYPES.textAnnotation],
    edges: [EDGE_TYPES.association]
  },
  [NODE_TYPES.textAnnotation]: {
    nodes: [],
    edges: [EDGE_TYPES.association]
  }
};
const bpmnEdgesOutgoingStuffNodePanelMapping = {
  [EDGE_TYPES.sequenceFlow]: {
    actionTitle: "Add Sequence Flow",
    icon: _ref => {
      let {
        viewboxSize
      } = _ref;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.SequenceFlowPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize - 2},0`
      });
    }
  },
  [EDGE_TYPES.association]: {
    actionTitle: "Add Association",
    icon: _ref2 => {
      let {
        viewboxSize
      } = _ref2;
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_edges_EdgeSvgs__WEBPACK_IMPORTED_MODULE_3__.AssociationPath, {
        d: `M2,${viewboxSize - 2} L${viewboxSize},0`,
        strokeWidth: 2
      });
    }
  }
};
const bpmnNodesOutgoingStuffNodePanelMapping = {
  [NODE_TYPES.startEvent]: {
    actionTitle: "Add Start Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.StartEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateCatchEvent]: {
    actionTitle: "Add Intermediate Catch Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateCatchEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.intermediateThrowEvent]: {
    actionTitle: "Add Intermediate Throw Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.IntermediateThrowEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.endEvent]: {
    actionTitle: "Add End Event",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.EndEventNodeSvg, {
      ...nodeSvgProps,
      variant: "none"
    })
  },
  [NODE_TYPES.task]: {
    actionTitle: "Add Task",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps
    })
  },
  [NODE_TYPES.subProcess]: {
    actionTitle: "Add Sub-process",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TaskNodeSvg, {
      ...nodeSvgProps,
      markers: ["CallActivityPaletteIcon"]
    })
  },
  [NODE_TYPES.gateway]: {
    actionTitle: "Add Gateway",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.GatewayNodeSvg, {
      ...nodeSvgProps,
      height: nodeSvgProps.width,
      variant: "none",
      x: nodeSvgProps.x,
      y: nodeSvgProps.y - 8
    })
  },
  [NODE_TYPES.textAnnotation]: {
    actionTitle: "Add Text Annotation",
    icon: nodeSvgProps => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.TextAnnotationNodeSvg, {
      ...nodeSvgProps
    })
  }
};
const MIN_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref3 => {
    let {
      snapGrid
    } = _ref3;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref4 => {
    let {
      snapGrid
    } = _ref4;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref5 => {
    let {
      snapGrid
    } = _ref5;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref6 => {
    let {
      snapGrid
    } = _ref6;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref7 => {
    let {
      snapGrid
    } = _ref7;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref8 => {
    let {
      snapGrid
    } = _ref8;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref9 => {
    let {
      snapGrid
    } = _ref9;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 10, 10);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref10 => {
    let {
      snapGrid
    } = _ref10;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref11 => {
    let {
      snapGrid
    } = _ref11;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2, NODE_MIN_HEIGHT + _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_7__.CONTAINER_NODES_DESIRABLE_PADDING * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref12 => {
    let {
      snapGrid
    } = _ref12;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 200, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref13 => {
    let {
      snapGrid
    } = _ref13;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref14 => {
    let {
      snapGrid
    } = _ref14;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const DEFAULT_NODE_SIZES = {
  [NODE_TYPES.startEvent]: _ref15 => {
    let {
      snapGrid
    } = _ref15;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateCatchEvent]: _ref16 => {
    let {
      snapGrid
    } = _ref16;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.intermediateThrowEvent]: _ref17 => {
    let {
      snapGrid
    } = _ref17;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.endEvent]: _ref18 => {
    let {
      snapGrid
    } = _ref18;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.task]: _ref19 => {
    let {
      snapGrid
    } = _ref19;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 90);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.subProcess]: _ref20 => {
    let {
      snapGrid
    } = _ref20;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 360, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.gateway]: _ref21 => {
    let {
      snapGrid
    } = _ref21;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 60, 60);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.dataObject]: _ref22 => {
    let {
      snapGrid
    } = _ref22;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH / 2, NODE_MIN_HEIGHT + 20);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.group]: _ref23 => {
    let {
      snapGrid
    } = _ref23;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, NODE_MIN_WIDTH * 2, NODE_MIN_WIDTH * 2);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.textAnnotation]: _ref24 => {
    let {
      snapGrid
    } = _ref24;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 180, 180);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.lane]: _ref25 => {
    let {
      snapGrid
    } = _ref25;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid, 540, 240);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  },
  [NODE_TYPES.unknown]: _ref26 => {
    let {
      snapGrid
    } = _ref26;
    const snappedMinSize = MIN_SIZE_FOR_NODES(snapGrid);
    return {
      "@_width": snappedMinSize.width,
      "@_height": snappedMinSize.height
    };
  }
};
const NODE_MIN_WIDTH = 120;
const NODE_MIN_HEIGHT = 60;
const MIN_SIZE_FOR_NODES = function (grid) {
  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NODE_MIN_WIDTH;
  let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NODE_MIN_HEIGHT;
  const snapped = (0,_kie_tools_xyflow_react_kie_diagram_dist_snapgrid_SnapGrid__WEBPACK_IMPORTED_MODULE_8__.snapPoint)(grid, {
    "@_x": width,
    "@_y": height
  }, "ceil");
  return {
    width: snapped["@_x"],
    height: snapped["@_y"]
  };
};
function getNodeTypeFromBpmnElement(bpmnElement) {
  if (!bpmnElement) {
    return NODE_TYPES.unknown;
  }
  const type = (0,_kie_tools_core_switch_expression_ts__WEBPACK_IMPORTED_MODULE_6__.switchExpression)(bpmnElement.__$$element, {
    dataObject: NODE_TYPES.dataObject,
    task: NODE_TYPES.task,
    lane: NODE_TYPES.lane,
    textAnnotation: NODE_TYPES.textAnnotation,
    default: undefined
  });
  return type;
}
const elementToNodeType = {
  lane: NODE_TYPES.lane,
  startEvent: NODE_TYPES.startEvent,
  boundaryEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateCatchEvent: NODE_TYPES.intermediateCatchEvent,
  intermediateThrowEvent: NODE_TYPES.intermediateThrowEvent,
  endEvent: NODE_TYPES.endEvent,
  callActivity: NODE_TYPES.task,
  task: NODE_TYPES.task,
  businessRuleTask: NODE_TYPES.task,
  userTask: NODE_TYPES.task,
  scriptTask: NODE_TYPES.task,
  serviceTask: NODE_TYPES.task,
  subProcess: NODE_TYPES.subProcess,
  adHocSubProcess: NODE_TYPES.subProcess,
  transaction: NODE_TYPES.subProcess,
  complexGateway: NODE_TYPES.gateway,
  eventBasedGateway: NODE_TYPES.gateway,
  exclusiveGateway: NODE_TYPES.gateway,
  inclusiveGateway: NODE_TYPES.gateway,
  parallelGateway: NODE_TYPES.gateway,
  dataObject: NODE_TYPES.dataObject,
  group: NODE_TYPES.group,
  textAnnotation: NODE_TYPES.textAnnotation,
  event: NODE_TYPES.unknown
};
const elementToEdgeType = {
  association: EDGE_TYPES.association,
  sequenceFlow: EDGE_TYPES.sequenceFlow
};
try {
    // @ts-ignore
    getNodeTypeFromBpmnElement.displayName = "getNodeTypeFromBpmnElement";
    // @ts-ignore
    getNodeTypeFromBpmnElement.__docgenInfo = { "description": "", "displayName": "getNodeTypeFromBpmnElement", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"startEvent\"" }, { "value": "\"intermediateCatchEvent\"" }, { "value": "\"intermediateThrowEvent\"" }, { "value": "\"endEvent\"" }, { "value": "\"task\"" }, { "value": "\"subProcess\"" }, { "value": "\"dataObject\"" }, { "value": "\"textAnnotation\"" }, { "value": "\"group\"" }, { "value": "\"lane\"" }, { "value": "\"adHocSubProcess\"" }, { "value": "\"boundaryEvent\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"complexGateway\"" }, { "value": "\"event\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 16 more ..." } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ... 15 more ..." } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "@_cancelRemainingInstances": { "defaultValue": null, "description": "", "name": "@_cancelRemainingInstances", "required": false, "type": { "name": "boolean" } }, "@_ordering": { "defaultValue": null, "description": "", "name": "@_ordering", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Sequential\"" }] } }, "completionCondition": { "defaultValue": null, "description": "", "name": "completionCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_parallelMultiple": { "defaultValue": null, "description": "", "name": "@_parallelMultiple", "required": false, "type": { "name": "boolean" } }, "dataOutput": { "defaultValue": null, "description": "", "name": "dataOutput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "outputSet": { "defaultValue": null, "description": "", "name": "outputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; inputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "eventDefinition": { "defaultValue": null, "description": "", "name": "eventDefinition", "required": false, "type": { "name": "(({ __$$element: \"cancelEventDefinition\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tCancelEventDefinition__exten..." } }, "eventDefinitionRef": { "defaultValue": null, "description": "", "name": "eventDefinitionRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[]" } }, "@_cancelActivity": { "defaultValue": null, "description": "", "name": "@_cancelActivity", "required": false, "type": { "name": "boolean" } }, "@_attachedToRef": { "defaultValue": null, "description": "", "name": "@_attachedToRef", "required": true, "type": { "name": "string" } }, "@_implementation": { "defaultValue": null, "description": "", "name": "@_implementation", "required": false, "type": { "name": "string" } }, "@_drools:ruleFlowGroup": { "defaultValue": null, "description": "", "name": "@_drools:ruleFlowGroup", "required": false, "type": { "name": "string" } }, "@_calledElement": { "defaultValue": null, "description": "", "name": "@_calledElement", "required": false, "type": { "name": "string" } }, "@_drools:independent": { "defaultValue": null, "description": "", "name": "@_drools:independent", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_drools:waitForCompletion": { "defaultValue": null, "description": "", "name": "@_drools:waitForCompletion", "required": false, "type": { "name": "Namespaced<\"drools\", boolean>" } }, "@_gatewayDirection": { "defaultValue": null, "description": "", "name": "@_gatewayDirection", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Unspecified\"" }, { "value": "\"Converging\"" }, { "value": "\"Diverging\"" }, { "value": "\"Mixed\"" }] } }, "activationCondition": { "defaultValue": null, "description": "", "name": "activationCondition", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tExpression__extensionElements) | undefined; __$$text?: s..." } }, "@_itemSubjectRef": { "defaultValue": null, "description": "", "name": "@_itemSubjectRef", "required": false, "type": { "name": "string" } }, "@_isCollection": { "defaultValue": null, "description": "", "name": "@_isCollection", "required": false, "type": { "name": "boolean" } }, "dataState": { "defaultValue": null, "description": "", "name": "dataState", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tDataState__extensionElements) | undefined; \"@_name\"?: st..." } }, "dataInput": { "defaultValue": null, "description": "", "name": "dataInput", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; \"@_drools:dtype\"?: string | undefined; } & { ...; })[] | undefined" } }, "inputSet": { "defaultValue": null, "description": "", "name": "inputSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; outputSetRefs?: ({ ...; } & { ...; })[] | undefined; } & { ...; }) | undefined" } }, "@_instantiate": { "defaultValue": null, "description": "", "name": "@_instantiate", "required": false, "type": { "name": "boolean" } }, "@_eventGatewayType": { "defaultValue": null, "description": "", "name": "@_eventGatewayType", "required": false, "type": { "name": "enum", "value": [{ "value": "\"Parallel\"" }, { "value": "\"Exclusive\"" }] } }, "@_scriptFormat": { "defaultValue": null, "description": "", "name": "@_scriptFormat", "required": false, "type": { "name": "string" } }, "script": { "defaultValue": null, "description": "", "name": "script", "required": false, "type": { "name": "({ __?: undefined; __$$text?: string; } & BPMN20__tScript)" } }, "@_operationRef": { "defaultValue": null, "description": "", "name": "@_operationRef", "required": false, "type": { "name": "string" } }, "@_drools:serviceimplementation": { "defaultValue": null, "description": "", "name": "@_drools:serviceimplementation", "required": false, "type": { "name": "string" } }, "@_drools:serviceinterface": { "defaultValue": null, "description": "", "name": "@_drools:serviceinterface", "required": false, "type": { "name": "string" } }, "@_drools:serviceoperation": { "defaultValue": null, "description": "", "name": "@_drools:serviceoperation", "required": false, "type": { "name": "string" } }, "@_isInterrupting": { "defaultValue": null, "description": "", "name": "@_isInterrupting", "required": false, "type": { "name": "boolean" } }, "@_method": { "defaultValue": null, "description": "", "name": "@_method", "required": false, "type": { "name": "string" } }, "@_description": { "defaultValue": null, "description": "", "name": "@_description", "required": false, "type": { "name": "string" } }, "@_skippable": { "defaultValue": null, "description": "", "name": "@_skippable", "required": false, "type": { "name": "boolean" } }, "taskName": { "defaultValue": null, "description": "", "name": "taskName", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "subject": { "defaultValue": null, "description": "", "name": "subject", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "priority": { "defaultValue": null, "description": "", "name": "priority", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "rendering": { "defaultValue": null, "description": "", "name": "rendering", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tRendering__extensionElements) | undefined; } & { ...; })..." } }, "@_categoryValueRef": { "defaultValue": null, "description": "", "name": "@_categoryValueRef", "required": false, "type": { "name": "string" } }, "@_textFormat": { "defaultValue": null, "description": "", "name": "@_textFormat", "required": false, "type": { "name": "string" } }, "text": { "defaultValue": null, "description": "", "name": "text", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "@_partitionElementRef": { "defaultValue": null, "description": "", "name": "@_partitionElementRef", "required": false, "type": { "name": "string" } }, "partitionElement": { "defaultValue": null, "description": "", "name": "partitionElement", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tBaseElement__extensionElements) | undefined; } & { ...; ..." } }, "flowNodeRef": { "defaultValue": null, "description": "", "name": "flowNodeRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[]" } }, "childLaneSet": { "defaultValue": null, "description": "", "name": "childLaneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement"] = { docgenInfo: getNodeTypeFromBpmnElement.__docgenInfo, name: "getNodeTypeFromBpmnElement", path: "src/diagram/BpmnDiagramDomain.tsx#getNodeTypeFromBpmnElement" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/BpmnVersionLabel.tsx":
/*!******************************************!*\
  !*** ./src/diagram/BpmnVersionLabel.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BpmnVersionLabel: () => (/* binding */ BpmnVersionLabel)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Label */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Label/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Popover */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Popover/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());





const latestChangelogHref = `https://www.omg.org/spec/BPMN/2.0.2/PDF/changebar`;
function BpmnVersionLabel(props) {
  const label = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Label__WEBPACK_IMPORTED_MODULE_3__.Label, {
    style: {
      cursor: "pointer",
      position: "absolute",
      bottom: "8px",
      left: "calc(50% - 34px)",
      zIndex: 100
    },
    children: `BPMN ${Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`
  }), []);
  if (props.version === Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())) {
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: label
    });
  }
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__.Popover, {
    className: "kie-bpmn-editor--version-popover",
    "aria-label": "BPMN version popover",
    position: _patternfly_react_core_dist_js_components_Popover__WEBPACK_IMPORTED_MODULE_4__.PopoverPosition.top,
    headerContent: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      children: "Version upgraded!"
    }),
    bodyContent: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      children: ["This BPMN was originally imported as BPMN ", props.version, ", but was converted to BPMN ", Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), " to enable new features.", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("a", {
        href: latestChangelogHref,
        target: "_blank",
        children: ["\u00A0", `See what's new on BPMN ${Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())}`, "."]
      })]
    }),
    children: label
  });
}
try {
    // @ts-ignore
    BpmnVersionLabel.displayName = "BpmnVersionLabel";
    // @ts-ignore
    BpmnVersionLabel.__docgenInfo = { "description": "", "displayName": "BpmnVersionLabel", "props": { "version": { "defaultValue": null, "description": "", "name": "version", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/BpmnVersionLabel.tsx#BpmnVersionLabel"] = { docgenInfo: BpmnVersionLabel.__docgenInfo, name: "BpmnVersionLabel", path: "src/diagram/BpmnVersionLabel.tsx#BpmnVersionLabel" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx":
/*!*******************************************************************!*\
  !*** ./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useTaskNodeMorphingActions: () => (/* binding */ useTaskNodeMorphingActions)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _NodeIcons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");






function useTaskNodeMorphingActions(task) {
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const morphTask = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(taskElement => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref => {
        let {
          array,
          index,
          owner,
          element
        } = _ref;
        if (element["@_id"] === task["@_id"] && element.__$$element === task.__$$element) {
          array[index] = {
            "@_id": element["@_id"],
            "@_name": element["@_name"],
            __$$element: taskElement
          };
          return false;
        }
      });
    });
  }, [bpmnEditorStoreApi, task]);
  const morphingActions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    return [{
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {
        variant: "userTask",
        isIcon: true
      }),
      key: "1",
      title: "User task",
      id: "userTask",
      action: () => morphTask("userTask")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {
        variant: "businessRuleTask",
        isIcon: true
      }),
      key: "2",
      title: "Business Rule task",
      id: "businessRuleTask",
      action: () => morphTask("businessRuleTask")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {
        variant: "serviceTask",
        isIcon: true
      }),
      key: "3",
      title: "Service task",
      id: "serviceTask",
      action: () => morphTask("serviceTask")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {
        variant: "scriptTask",
        isIcon: true
      }),
      key: "4",
      title: "Script task",
      id: "scriptTask",
      action: () => morphTask("scriptTask")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.CallActivityIcon, {}),
      key: "5",
      title: "Call activity",
      id: "callActivity",
      action: () => morphTask("callActivity")
    }, {
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeIcons__WEBPACK_IMPORTED_MODULE_3__.TaskIcon, {}),
      key: "5",
      title: "Task",
      id: "task",
      action: () => morphTask("task")
    }];
  }, [morphTask]);
  return morphingActions;
}
try {
    // @ts-ignore
    useTaskNodeMorphingActions.displayName = "useTaskNodeMorphingActions";
    // @ts-ignore
    useTaskNodeMorphingActions.__docgenInfo = { "description": "", "displayName": "useTaskNodeMorphingActions", "props": { "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"task\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"userTask\"" }] } }, "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; } & BPMN20__tBusinessRuleTask__extensionElements) | ({ __?: undefined; } & BPMN20__tCallActivity__extensionElements) | ... 4 more ..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ({ ...; } & { ...; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ({ ...; } & { ...; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[] | ({ ...; } & { ...; })[] | ({ ...; } & { ...; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_implementation": { "defaultValue": null, "description": "", "name": "@_implementation", "required": false, "type": { "name": "string" } }, "@_calledElement": { "defaultValue": null, "description": "", "name": "@_calledElement", "required": false, "type": { "name": "string" } }, "@_scriptFormat": { "defaultValue": null, "description": "", "name": "@_scriptFormat", "required": false, "type": { "name": "string" } }, "script": { "defaultValue": null, "description": "", "name": "script", "required": false, "type": { "name": "({ __?: undefined; __$$text?: string; } & BPMN20__tScript)" } }, "@_operationRef": { "defaultValue": null, "description": "", "name": "@_operationRef", "required": false, "type": { "name": "string" } }, "@_description": { "defaultValue": null, "description": "", "name": "@_description", "required": false, "type": { "name": "string" } }, "@_skippable": { "defaultValue": null, "description": "", "name": "@_skippable", "required": false, "type": { "name": "boolean" } }, "taskName": { "defaultValue": null, "description": "", "name": "taskName", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "subject": { "defaultValue": null, "description": "", "name": "subject", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "content": { "defaultValue": null, "description": "", "name": "content", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "priority": { "defaultValue": null, "description": "", "name": "priority", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })" } }, "rendering": { "defaultValue": null, "description": "", "name": "rendering", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tRendering__extensionElements) | undefined; } & { ...; })..." } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx#useTaskNodeMorphingActions"] = { docgenInfo: useTaskNodeMorphingActions.__docgenInfo, name: "useTaskNodeMorphingActions", path: "src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx#useTaskNodeMorphingActions" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/idRandomizer/bpmnIdRandomizer.tsx":
/*!***********************************************!*\
  !*** ./src/idRandomizer/bpmnIdRandomizer.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getNewBpmnIdRandomizer: () => (/* binding */ getNewBpmnIdRandomizer)
/* harmony export */ });
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/xml-parser-ts/dist/idRandomizer */ "../xml-parser-ts/dist/idRandomizer.js");
/* harmony import */ var _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__);



function getNewBpmnIdRandomizer() {
  return new _kie_tools_xml_parser_ts_dist_idRandomizer__WEBPACK_IMPORTED_MODULE_1__.XmlParserTsIdRandomizer({
    meta: Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
    elements: Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller/dist/schemas/bpmn-2_0/ts-gen/meta'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
    newIdGenerator: _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_2__.generateUuid
  });
}

/***/ }),

/***/ "./src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx":
/*!*************************************************************************!*\
  !*** ./src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserTaskProperties: () => (/* binding */ UserTaskProperties)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nameDocumentationAndId/NameDocumentationAndId */ "./src/propertiesPanel/nameDocumentationAndId/NameDocumentationAndId.tsx");
/* harmony import */ var _assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assignments/AssignmentsFormSection */ "./src/propertiesPanel/assignments/AssignmentsFormSection.tsx");
/* harmony import */ var _onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../onEntryAndExitScripts/OnEntryAndExitScriptsFormSection */ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx");
/* harmony import */ var _diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../diagram/nodes/NodeIcons */ "./src/diagram/nodes/NodeIcons.tsx");
/* harmony import */ var _PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_PropertiesPanelHeaderFormSection */ "./src/propertiesPanel/singleNodeProperties/_PropertiesPanelHeaderFormSection.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../asyncCheckbox/AsyncCheckbox */ "./src/propertiesPanel/asyncCheckbox/AsyncCheckbox.tsx");
/* harmony import */ var _slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../slaDueDate/SlaDueDateInput */ "./src/propertiesPanel/slaDueDate/SlaDueDateInput.tsx");
/* harmony import */ var _multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../multiInstanceCheckbox/MultiInstanceCheckbox */ "./src/propertiesPanel/multiInstanceCheckbox/MultiInstanceCheckbox.tsx");
/* harmony import */ var _multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../multiInstance/MultiInstanceProperties */ "./src/propertiesPanel/multiInstance/MultiInstanceProperties.tsx");
/* harmony import */ var _adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../adhocAutostartCheckbox/AdhocAutostartCheckbox */ "./src/propertiesPanel/adhocAutostartCheckbox/AdhocAutostartCheckbox.tsx");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextArea/TextArea */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextArea/TextArea.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _reassignments_Reassignments__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../reassignments/Reassignments */ "./src/propertiesPanel/reassignments/Reassignments.tsx");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader */ "../xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_external_link_alt_icon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/external-link-alt-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/edit-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/edit-icon.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
























function UserTaskProperties(_ref) {
  let {
    userTask
  } = _ref;
  var _a, _b, _c, _d, _e;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_12__.useBpmnEditorStoreApi)();
  const settings = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_12__.useBpmnEditorStore)(s => s.settings);
  const [showReassignmentsModal, setShowReassignmentsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const closeReassignmentsModal = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {
    setShowReassignmentsModal(false);
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_PropertiesPanelHeaderFormSection__WEBPACK_IMPORTED_MODULE_6__.PropertiesPanelHeaderFormSection, {
      title: userTask["@_name"] || "User task",
      icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_diagram_nodes_NodeIcons__WEBPACK_IMPORTED_MODULE_5__.TaskIcon, {
        variant: userTask.__$$element,
        isIcon: true
      }),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_nameDocumentationAndId_NameDocumentationAndId__WEBPACK_IMPORTED_MODULE_2__.NameDocumentationAndId, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Task",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_a = userTask.taskName) === null || _a === void 0 ? void 0 : _a.__$$text) || "",
          onChange: newTaskName => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref2 => {
              let {
                element: e
              } = _ref2;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.taskName = {
                  __$$text: newTaskName
                };
              }
            });
          }),
          placeholder: "Enter task name...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Subject",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Subject",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_b = userTask.subject) === null || _b === void 0 ? void 0 : _b.__$$text) || "",
          onChange: newsubject => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref3 => {
              let {
                element: e
              } = _ref3;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.subject = {
                  __$$text: newsubject
                };
              }
            });
          }),
          placeholder: "Enter subject...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Content",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Content",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_c = userTask.content) === null || _c === void 0 ? void 0 : _c.__$$text) || "",
          onChange: newcontent => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref4 => {
              let {
                element: e
              } = _ref4;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.content = {
                  __$$text: newcontent
                };
              }
            });
          }),
          placeholder: "Enter task name...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 3
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Priority",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: ((_d = userTask.priority) === null || _d === void 0 ? void 0 : _d.__$$text) || "",
          onChange: newpriority => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref5 => {
              let {
                element: e
              } = _ref5;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e.priority = {
                  __$$text: newpriority
                };
              }
            });
          }),
          placeholder: "Enter priority...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 1
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Description",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_17__.TextArea, {
          "aria-label": "Task Name",
          type: "text",
          isDisabled: settings.isReadOnly,
          value: userTask["@_description"],
          onChange: newDescription => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_18__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_19__.visitFlowElementsAndArtifacts)(process, _ref6 => {
              let {
                element: e
              } = _ref6;
              if (e["@_id"] === userTask["@_id"] && e.__$$element === userTask.__$$element) {
                e["@_description"] = newDescription;
              }
            });
          }),
          placeholder: "Enter description...",
          style: {
            resize: "vertical",
            minHeight: "40px"
          },
          rows: 3
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Actors"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Groups"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Created by"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_reassignments_Reassignments__WEBPACK_IMPORTED_MODULE_13__.Reassignments, {
        isOpen: showReassignmentsModal,
        onClose: closeReassignmentsModal
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormSection, {
        title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_14__.SectionHeader, {
          expands: "modal",
          icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_external_link_alt_icon__WEBPACK_IMPORTED_MODULE_20__["default"], {
            width: 16,
            height: 36,
            style: {
              marginLeft: "12px"
            }
          }),
          title: "Reassignments",
          toogleSectionExpanded: () => setShowReassignmentsModal(true),
          action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_21__.Button, {
            title: "Manage",
            variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_21__.ButtonVariant.plain,
            isDisabled: settings.isReadOnly,
            onClick: () => setShowReassignmentsModal(true),
            style: {
              paddingBottom: 0,
              paddingTop: 0
            },
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_22__["default"], {})
          })
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_16__.FormGroup, {
        label: "Notifications"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_slaDueDate_SlaDueDateInput__WEBPACK_IMPORTED_MODULE_8__.SlaDueDateInput, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_asyncCheckbox_AsyncCheckbox__WEBPACK_IMPORTED_MODULE_7__.AsyncCheckbox, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_adhocAutostartCheckbox_AdhocAutostartCheckbox__WEBPACK_IMPORTED_MODULE_11__.AdhocAutostartCheckbox, {
        element: userTask
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
        inset: {
          default: "insetXs"
        }
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstanceCheckbox_MultiInstanceCheckbox__WEBPACK_IMPORTED_MODULE_9__.MultiInstanceCheckbox, {
        element: userTask
      }), ((_e = userTask.loopCharacteristics) === null || _e === void 0 ? void 0 : _e.__$$element) === "multiInstanceLoopCharacteristics" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_multiInstance_MultiInstanceProperties__WEBPACK_IMPORTED_MODULE_10__.MultiInstanceProperties, {
        element: userTask
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_assignments_AssignmentsFormSection__WEBPACK_IMPORTED_MODULE_3__.BidirectionalAssignmentsFormSection, {
      element: userTask
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_onEntryAndExitScripts_OnEntryAndExitScriptsFormSection__WEBPACK_IMPORTED_MODULE_4__.OnEntryAndExitScriptsFormSection, {
      element: userTask
    })]
  });
}
try {
    // @ts-ignore
    UserTaskProperties.displayName = "UserTaskProperties";
    // @ts-ignore
    UserTaskProperties.__docgenInfo = { "description": "", "displayName": "UserTaskProperties", "props": { "userTask": { "defaultValue": null, "description": "", "name": "userTask", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 24 more ...; rendering?: ({ ...; } & { ...; })[] | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx#UserTaskProperties"] = { docgenInfo: UserTaskProperties.__docgenInfo, name: "UserTaskProperties", path: "src/propertiesPanel/singleNodeProperties/UserTaskProperties.tsx#UserTaskProperties" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./stories/bpmnEditorStoriesWrapper.tsx":
/*!**********************************************!*\
  !*** ./stories/bpmnEditorStoriesWrapper.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BpmnEditorWrapper: () => (/* binding */ BpmnEditorWrapper)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @storybook/preview-api */ "@storybook/preview-api");
/* harmony import */ var _storybook_preview_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/BpmnEditor */ "./src/BpmnEditor.tsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var _kie_tools_bpmn_editor_dist_normalization_normalize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/bpmn-editor/dist/normalization/normalize */ "./dist/normalization/normalize.js");
/* harmony import */ var deep_object_diff__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! deep-object-diff */ "../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/diff.js");
/* harmony import */ var _misc_empty_Empty_stories__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./misc/empty/Empty.stories */ "./stories/misc/empty/Empty.stories.tsx");








function BpmnEditorWrapper(props) {
  var _a, _b, _c, _d, _e;
  const [args, updateArgs] = (0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_2__.useArgs)();
  const argsCopy = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(args);
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
  const [modelArgs, setModelArgs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(args.model);
  const model = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    var _a;
    return (_a = props === null || props === void 0 ? void 0 : props.model) !== null && _a !== void 0 ? _a : modelArgs;
  }, [modelArgs, props === null || props === void 0 ? void 0 : props.model]);
  const [modelChanged, setModelChange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const onModelChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (props === null || props === void 0 ? void 0 : props.onModelChange) ? props.onModelChange : setModelArgs, [props === null || props === void 0 ? void 0 : props.onModelChange]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(argsCopy.current.model, model)).length !== 0) {
      updateArgs({
        ...argsCopy.current,
        model: model,
        xml: Object(function webpackMissingModule() { var e = new Error("Cannot find module '@kie-tools/bpmn-marshaller'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())((0,_misc_empty_Empty_stories__WEBPACK_IMPORTED_MODULE_6__.generateEmptyBpmn20)(), {
          upgradeTo: "latest"
        }).builder.build(model)
      });
    }
  }, [updateArgs, model]);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(argsCopy.current, args)).length === 0) {
      return;
    }
    argsCopy.current = args;
    if (Object.keys((0,deep_object_diff__WEBPACK_IMPORTED_MODULE_7__["default"])(args.model, model)).length === 0) {
      return;
    }
    onModelChange((0,_kie_tools_bpmn_editor_dist_normalization_normalize__WEBPACK_IMPORTED_MODULE_5__.normalize)(args.model));
  }, [args, model, onModelChange]);
  const onModelDebounceStateChanged = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(changed => {
    setModelChange(changed);
  }, []);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [modelChanged && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      "data-testid": "storybook--bpmn-editor-model",
      style: {
        display: "none"
      },
      children: JSON.stringify(model)
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      style: {
        position: "absolute",
        width: "100%",
        height: "100%",
        top: "0px",
        left: "0px"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src_BpmnEditor__WEBPACK_IMPORTED_MODULE_3__.BpmnEditor, {
        ref: ref,
        model: model,
        originalVersion: (_a = props === null || props === void 0 ? void 0 : props.originalVersion) !== null && _a !== void 0 ? _a : args.originalVersion,
        onModelChange: onModelChange,
        externalContextName: (_b = props === null || props === void 0 ? void 0 : props.externalContextName) !== null && _b !== void 0 ? _b : args.externalContextName,
        externalContextDescription: (_c = props === null || props === void 0 ? void 0 : props.externalContextDescription) !== null && _c !== void 0 ? _c : args.externalContextDescription,
        issueTrackerHref: (_d = props === null || props === void 0 ? void 0 : props.issueTrackerHref) !== null && _d !== void 0 ? _d : args.issueTrackerHref,
        onRequestToJumpToPath: (_e = props === null || props === void 0 ? void 0 : props.onRequestToJumpToPath) !== null && _e !== void 0 ? _e : args.onRequestToJumpToPath,
        onModelDebounceStateChanged: onModelDebounceStateChanged
      })
    })]
  });
}
try {
    // @ts-ignore
    BpmnEditorWrapper.displayName = "BpmnEditorWrapper";
    // @ts-ignore
    BpmnEditorWrapper.__docgenInfo = { "description": "", "displayName": "BpmnEditorWrapper", "props": { "model": { "defaultValue": null, "description": "The BPMN itself.", "name": "model", "required": false, "type": { "name": "BpmnLatestModel" } }, "originalVersion": { "defaultValue": null, "description": "The original version of `model` before upgrading to `latest`.", "name": "originalVersion", "required": false, "type": { "name": "enum", "value": [{ "value": "\"2.0\"" }] } }, "onModelChange": { "defaultValue": null, "description": "Called when a change occurs on `model`, so the controlled flow of the component can be done.", "name": "onModelChange", "required": false, "type": { "name": "OnBpmnModelChange" } }, "externalContextName": { "defaultValue": null, "description": "The name of context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use `externalContextName={\"My project\"}`", "name": "externalContextName", "required": false, "type": { "name": "string" } }, "externalContextDescription": { "defaultValue": null, "description": "Describe the context in which this instance of BPMN Editor is running. For example, if this BPMN Editor instance\nis displaying a model from a project called \"My project\", you could use\n`externalContextDescription={'All models (DMN, etc) of \"My project\" are available.'}`", "name": "externalContextDescription", "required": false, "type": { "name": "string" } }, "issueTrackerHref": { "defaultValue": null, "description": "A link that will take users to an issue tracker so they can report problems they find on the BPMN Editor.\nThis is shown on the ErrorBoundary fallback component, when an uncaught error happens.", "name": "issueTrackerHref", "required": false, "type": { "name": "string" } }, "onRequestToJumpToPath": { "defaultValue": null, "description": "When users want to jump to another file, this method is called, allowing the controller of this component decide what to do.\nLinks are only rendered if this is provided. Otherwise, paths will be rendered as text.", "name": "onRequestToJumpToPath", "required": false, "type": { "name": "OnRequestToJumpToPath" } }, "onRequestToResolvePath": { "defaultValue": null, "description": "All paths inside the BPMN Editor are relative. To be able to resolve them and display them as absolute paths, this function is called.\nIf undefined, the relative paths will be displayed.", "name": "onRequestToResolvePath", "required": false, "type": { "name": "OnRequestToResolvePath" } }, "onModelDebounceStateChanged": { "defaultValue": null, "description": "Notifies the caller when the BPMN Editor performs a new edit after the debounce time.", "name": "onModelDebounceStateChanged", "required": false, "type": { "name": "((changed: boolean) => void)" } }, "xml": { "defaultValue": null, "description": "", "name": "xml", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["stories/bpmnEditorStoriesWrapper.tsx#BpmnEditorWrapper"] = { docgenInfo: BpmnEditorWrapper.__docgenInfo, name: "BpmnEditorWrapper", path: "stories/bpmnEditorStoriesWrapper.tsx#BpmnEditorWrapper" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,