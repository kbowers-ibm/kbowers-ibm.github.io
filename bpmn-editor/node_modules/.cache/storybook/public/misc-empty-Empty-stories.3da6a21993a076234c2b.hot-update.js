"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js":
/*!**********************************************************!*\
  !*** ../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_NODE_STROKE_WIDTH: () => (/* binding */ DEFAULT_NODE_STROKE_WIDTH),
/* harmony export */   ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches: () => (/* binding */ ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches),
/* harmony export */   containerNodeInteractionRectCssClassName: () => (/* binding */ containerNodeInteractionRectCssClassName),
/* harmony export */   containerNodeVisibleRectCssClassName: () => (/* binding */ containerNodeVisibleRectCssClassName),
/* harmony export */   normalize: () => (/* binding */ normalize)
/* harmony export */ });
/* harmony import */ var _NodeSvgs_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NodeSvgs.css */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");

const DEFAULT_NODE_STROKE_WIDTH = 1.5;
const ___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches = {
  flag: false
};
const containerNodeInteractionRectCssClassName = "xyflow-react-kie-diagram--node-containerNode-interactionRect";
const containerNodeVisibleRectCssClassName = "xyflow-react-kie-diagram--node-containerNode-visibleRect";
function normalize(_props) {
  const {
    strokeWidth: _strokeWidth,
    x: _x,
    y: _y,
    width: _width,
    height: _height,
    fillColor: _fillColor,
    strokeColor: _strokeColor,
    ...props
  } = _props;
  const strokeWidth = _strokeWidth !== null && _strokeWidth !== void 0 ? _strokeWidth : DEFAULT_NODE_STROKE_WIDTH;
  const halfStrokeWidth = strokeWidth / 2;
  const x = _x + halfStrokeWidth;
  const y = _y + halfStrokeWidth;
  const width = _width - strokeWidth;
  const height = _height - strokeWidth;
  return {
    strokeWidth,
    x,
    y,
    width: width + (___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches.flag ? 0.1 : 0),
    height: height + (___NASTY_HACK_FOR_SAFARI_to_force_redrawing_svgs_and_avoid_repaint_glitches.flag ? 0 : 0.1),
    props
  };
}

/***/ }),

/***/ "./src/diagram/nodes/NodeSvgs.tsx":
/*!****************************************!*\
  !*** ./src/diagram/nodes/NodeSvgs.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ActivityNodeIcons: () => (/* binding */ ActivityNodeIcons),
/* harmony export */   CancelEventSymbolSvg: () => (/* binding */ CancelEventSymbolSvg),
/* harmony export */   CompensationEventSymbolSvg: () => (/* binding */ CompensationEventSymbolSvg),
/* harmony export */   ConditionalEventSymbolSvg: () => (/* binding */ ConditionalEventSymbolSvg),
/* harmony export */   DataObjectNodeSvg: () => (/* binding */ DataObjectNodeSvg),
/* harmony export */   EndEventNodeSvg: () => (/* binding */ EndEventNodeSvg),
/* harmony export */   ErrorEventSymbolSvg: () => (/* binding */ ErrorEventSymbolSvg),
/* harmony export */   EscalationEventSymbolSvg: () => (/* binding */ EscalationEventSymbolSvg),
/* harmony export */   EventVariantSymbolSvg: () => (/* binding */ EventVariantSymbolSvg),
/* harmony export */   GatewayNodeSvg: () => (/* binding */ GatewayNodeSvg),
/* harmony export */   GroupNodeSvg: () => (/* binding */ GroupNodeSvg),
/* harmony export */   IntermediateCatchEventNodeSvg: () => (/* binding */ IntermediateCatchEventNodeSvg),
/* harmony export */   IntermediateThrowEventNodeSvg: () => (/* binding */ IntermediateThrowEventNodeSvg),
/* harmony export */   LaneNodeSvg: () => (/* binding */ LaneNodeSvg),
/* harmony export */   LinkEventSymbolSvg: () => (/* binding */ LinkEventSymbolSvg),
/* harmony export */   MessageEventSymbolSvg: () => (/* binding */ MessageEventSymbolSvg),
/* harmony export */   NODE_COLORS: () => (/* binding */ NODE_COLORS),
/* harmony export */   SignalEventSymbolSvg: () => (/* binding */ SignalEventSymbolSvg),
/* harmony export */   StartEventNodeSvg: () => (/* binding */ StartEventNodeSvg),
/* harmony export */   SubProcessNodeSvg: () => (/* binding */ SubProcessNodeSvg),
/* harmony export */   TaskNodeSvg: () => (/* binding */ TaskNodeSvg),
/* harmony export */   TextAnnotationNodeSvg: () => (/* binding */ TextAnnotationNodeSvg),
/* harmony export */   TimerEventSymbolSvg: () => (/* binding */ TimerEventSymbolSvg),
/* harmony export */   UnknownNodeSvg: () => (/* binding */ UnknownNodeSvg)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/NodeSvgs */ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.js");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");








function DataObjectNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      isIcon: _isIcon,
      showFoldedPage: _showFoldedPage,
      showArrow: _showArrow,
      ...props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const bevel = 25;
  const arrowStartingX = 6;
  const arrowStartingY = 10;
  const showFoldedPage = _showFoldedPage !== null && _showFoldedPage !== void 0 ? _showFoldedPage : false;
  const showArrow = _showArrow !== null && _showArrow !== void 0 ? _showArrow : false;
  const isIcon = _isIcon !== null && _isIcon !== void 0 ? _isIcon : false;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `0,0 0,${height} ${width},${height} ${width},${bevel} ${width - bevel},0 ${width - bevel},0`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: isIcon ? __props.transform : `translate(${x},${y})`
    }), showFoldedPage === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${width - bevel},0 ${width - bevel},${bevel} ${width},${bevel}`,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    }), showArrow === true && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      ...props,
      points: `${arrowStartingX},${arrowStartingY} ${arrowStartingX},20 20,20 20,26 30,15 20,4 20,${arrowStartingY} `,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      transform: `translate(${x},${y})`
    })]
  });
}
const deg30 = Math.PI / 6;
const cos30 = Math.cos(deg30);
const sin30 = Math.sin(deg30);
const NODE_COLORS = {
  startEvent: {
    foreground: "#4aa241",
    background: "#e8fae6"
  },
  intermediateCatchEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  boundaryEvent: {
    foreground: "#e6a000",
    background: "#fbefcf"
  },
  intermediateThrowEvent: {
    foreground: "#007a87",
    background: "#bddee1"
  },
  endEvent: {
    foreground: "#a30000",
    background: "#fce7e7"
  },
  gateway: {
    background: "#fef5ea",
    foreground: "#ec7b08"
  },
  task: {
    foreground: "black",
    background: "#efefef"
  },
  subProcess: {
    foreground: "black",
    background: "#efefef"
  }
};
function StartEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#e8fae6",
      stroke: "#4aa241",
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: "#e8fae6",
      filled: false,
      stroke: "#4aa241",
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function IntermediateCatchEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#fbefcf",
      stroke: "#e6a000",
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: "#fbefcf",
      stroke: "#e6a000",
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: "#fbefcf",
      filled: false,
      stroke: "#e6a000",
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function IntermediateThrowEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    rimWidth,
    variant,
    ...props
  } = {
    ..._props
  };
  const outerCircleRadius = width / 2;
  const innerCircleRadius = outerCircleRadius - (rimWidth !== null && rimWidth !== void 0 ? rimWidth : 5);
  const cx = x + width / 2;
  const cy = y + height / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: outerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: x + width / 2,
      cy: y + height / 2,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      strokeLinejoin: "round",
      r: innerCircleRadius,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.intermediateThrowEvent.background,
      filled: true,
      stroke: NODE_COLORS.intermediateThrowEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    })]
  });
}
function EndEventNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  const cx = x + width / 2;
  const cy = y + height / 2;
  const r = width / 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: NODE_COLORS.endEvent.background,
      stroke: NODE_COLORS.endEvent.foreground,
      strokeLinejoin: "round",
      r: r,
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EventVariantSymbolSvg, {
      variant: variant,
      fill: NODE_COLORS.endEvent.background,
      filled: true,
      stroke: NODE_COLORS.endEvent.foreground,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: r - 5,
      outerCircleRadius: r
    })]
  });
}
function TaskNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    markers: _markers,
    variant: _variant,
    ...props
  } = {
    ..._props
  };
  const markers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_markers), [_markers]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "none";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      strokeWidth: strokeWidth,
      width: width,
      height: height,
      fill: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_FILL,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      ...props
    }), markers.has("CallActivityPaletteIcon") && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x + (width / 2 - width / 3 / 2),
      y: y + (height - height / 3),
      strokeWidth: strokeWidth,
      width: width / 3,
      height: height / 3,
      fill: "black",
      stroke: "black",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      ...props
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: markers
    })]
  });
}
function GatewayNodeSvg(__props) {
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props: {
      ..._props
    }
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    variant,
    ...props
  } = {
    ..._props
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: 8 + x,
      y: 8 + y,
      transform: `rotate(45,${x + width / 2},${y + height / 2})`,
      strokeWidth: strokeWidth,
      width: width / 1.4,
      height: height / 1.4,
      fill: NODE_COLORS.gateway.background,
      stroke: NODE_COLORS.gateway.foreground,
      strokeLinejoin: "round",
      rx: "5",
      ry: "5",
      ...props
    }), variant === "parallelGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        strokeLinecap: "round",
        x1: "18",
        y1: 1 + height / 2,
        x2: width - 16,
        y2: 1 + height / 2,
        stroke: NODE_COLORS.gateway.foreground,
        strokeWidth: "6"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        strokeLinecap: "round",
        x1: 1 + width / 2,
        y1: "18",
        x2: 1 + width / 2,
        y2: height - 16,
        stroke: NODE_COLORS.gateway.foreground,
        strokeWidth: "6"
      })]
    }), variant === "exclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
        transform: `rotate(45,${x + width / 2},${y + height / 2})`,
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
          strokeLinecap: "round",
          x1: "18",
          y1: 1 + height / 2,
          x2: width - 16,
          y2: 1 + height / 2,
          stroke: NODE_COLORS.gateway.foreground,
          strokeWidth: "6"
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
          strokeLinecap: "round",
          x1: 1 + width / 2,
          y1: "18",
          x2: 1 + width / 2,
          y2: height - 16,
          stroke: NODE_COLORS.gateway.foreground,
          strokeWidth: "6"
        })]
      })
    }), variant === "inclusiveGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: x + width / 2,
        cy: y + height / 2,
        strokeWidth: 6,
        width: width / 2,
        height: height / 2,
        stroke: NODE_COLORS.gateway.foreground,
        strokeLinejoin: "round",
        fill: "transparent",
        r: width / 5,
        ...props
      })
    }), variant === "eventBasedGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}), variant === "complexGateway" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {})]
  });
}
const LaneNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    gutterWidth: _gutterWidth,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const gutterWidth = _gutterWidth !== null && _gutterWidth !== void 0 ? _gutterWidth : 40;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: "3",
      ry: "3",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: x + gutterWidth,
      y1: y,
      x2: x + gutterWidth,
      y2: y + height,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
const SubProcessNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  const {
    rimWidth: _rimWidth,
    borderRadius: _borderRadius,
    icons: _icons,
    variant: _variant,
    ..._props
  } = {
    ...__props
  };
  const {
    x,
    y,
    width,
    height,
    strokeWidth,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ..._props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    ...interactionRectProps
  } = _interactionRectProps;
  const icons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new Set(_icons), [_icons]);
  const variant = _variant !== null && _variant !== void 0 ? _variant : "other";
  const rimWidth = variant === "transaction" ? _rimWidth !== null && _rimWidth !== void 0 ? _rimWidth : 5 : 0;
  const borderRadius = variant === "transaction" ? _borderRadius !== null && _borderRadius !== void 0 ? _borderRadius : 10 : 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "transaction" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x + rimWidth,
      y: y + rimWidth,
      width: width - rimWidth * 2,
      height: height - rimWidth * 2,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      rx: borderRadius - rimWidth,
      ry: borderRadius - rimWidth,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      strokeWidth: strokeWidth,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeDasharray: variant === "event" ? "10,5" : undefined,
      strokeLinejoin: "round",
      rx: borderRadius,
      ry: borderRadius,
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeVisibleRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      rx: "0",
      ry: "0",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ActivityNodeIcons, {
      x: x,
      y: y,
      width: width,
      height: height,
      icons: icons
    })]
  });
});
function TextAnnotationNodeSvg(__props) {
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props: _props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    showPlaceholder,
    ...props
  } = _props;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "transparent",
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      ...props,
      x: x,
      y: y,
      fill: "transparent",
      d: `M20,0 L0,0 M0,0 L0,${height} M0,${height} L20,${height}`,
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeWidth: strokeWidth,
      strokeLinejoin: "round",
      transform: `translate(${x},${y})`
    }), showPlaceholder && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      x: "20%",
      y: "62.5%",
      style: {
        fontSize: "5em",
        fontWeight: "bold"
      },
      children: "Text"
    })]
  });
}
const GroupNodeSvg = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((__props, ref) => {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(__props);
  const {
    strokeWidth: interactionRectStrokeWidth,
    x: interactionRectX,
    y: interactionRectY,
    width: interactionRectWidth,
    height: interactionRectHeight,
    props: _interactionRectProps
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)({
    ...__props,
    strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_INTRACTION_WIDTH / 2
  });
  const {
    strokeDasharray: interactionRectStrokeDasharray,
    ...interactionRectProps
  } = _interactionRectProps;
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "14,10,3,10";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray,
      rx: 40,
      ry: 40
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...interactionRectProps,
      ref: ref,
      x: interactionRectX,
      y: interactionRectY,
      width: interactionRectWidth,
      height: interactionRectHeight,
      strokeWidth: interactionRectStrokeWidth,
      fill: "transparent",
      stroke: "transparent",
      rx: "30",
      ry: "30",
      className: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.containerNodeInteractionRectCssClassName
    })]
  });
});
function UnknownNodeSvg(_props) {
  var _a;
  const {
    strokeWidth,
    x,
    y,
    width,
    height,
    props
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.normalize)(_props);
  const strokeDasharray = (_a = props.strokeDasharray) !== null && _a !== void 0 ? _a : "2,4";
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      ...props,
      x: x,
      y: y,
      width: width,
      height: height,
      fill: "transparent",
      stroke: "red",
      strokeLinejoin: "round",
      strokeWidth: strokeWidth,
      strokeDasharray: strokeDasharray
    })
  });
}
function EventVariantSymbolSvg(_ref) {
  let {
    variant,
    stroke,
    strokeWidth,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [variant === "messageEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MessageEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "timerEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TimerEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "errorEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "escalationEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EscalationEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "cancelEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "compensateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CompensationEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "conditionalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ConditionalEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "linkEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LinkEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "signalEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SignalEventSymbolSvg, {
      fill: fill,
      filled: filled,
      stroke: stroke,
      x: x,
      y: y,
      cx: cx,
      cy: cy,
      innerCircleRadius: innerCircleRadius,
      outerCircleRadius: outerCircleRadius
    }), variant === "terminateEventDefinition" && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
        cx: cx,
        cy: cy,
        strokeWidth: 1.5,
        fill: "#a30000",
        stroke: "#a30000",
        strokeLinejoin: "round",
        r: outerCircleRadius / 2
      })
    })]
  });
}
function MessageEventSymbolSvg(_ref2) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref2;
  const padding = 1.2 * (outerCircleRadius - innerCircleRadius);
  const bodyWidth = innerCircleRadius * 1.2;
  const bodyHeight = innerCircleRadius * 0.8;
  const envelopeBody = {
    topLeft: {
      x: cx - bodyWidth / 2,
      y: cy - bodyHeight / 2
    },
    bottomRight: {
      x: cx + bodyWidth / 2,
      y: cy + bodyHeight / 2
    }
  };
  const flapHeight = bodyHeight * 0.5;
  const envelopeFlap = [{
    x: envelopeBody.topLeft.x,
    y: envelopeBody.topLeft.y
  }, {
    x: envelopeBody.bottomRight.x,
    y: envelopeBody.topLeft.y
  }, {
    x: cx,
    y: envelopeBody.topLeft.y + flapHeight
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: envelopeBody.topLeft.x,
      y: envelopeBody.topLeft.y,
      width: bodyWidth,
      height: bodyHeight,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${envelopeFlap[0].x},${envelopeFlap[0].y} ${envelopeFlap[1].x},${envelopeFlap[1].y} ${envelopeFlap[2].x},${envelopeFlap[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : fill,
      stroke: stroke
    }), filled && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[0].x,
        y1: envelopeFlap[0].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: 1.5
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: envelopeFlap[1].x,
        y1: envelopeFlap[1].y,
        x2: envelopeFlap[2].x,
        y2: envelopeFlap[2].y,
        stroke: fill,
        strokeWidth: 1.5
      })]
    })]
  });
}
function TimerEventSymbolSvg(_ref3) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref3;
  const padding = 1.2 * (outerCircleRadius - innerCircleRadius);
  const clockRadius = innerCircleRadius - padding;
  const shortHandLength = clockRadius * 0.5;
  const longHandLength = clockRadius * 0.90;
  const hourHandAngle = Math.PI / 6 * 3 - 75 * Math.PI / 180;
  const minuteHandAngle = 0 - 75 * Math.PI / 180;
  const hourHand = {
    x: cx + shortHandLength * Math.cos(hourHandAngle),
    y: cy + shortHandLength * Math.sin(hourHandAngle)
  };
  const minuteHand = {
    x: cx + longHandLength * Math.cos(minuteHandAngle),
    y: cy + longHandLength * Math.sin(minuteHandAngle)
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("circle", {
      cx: cx,
      cy: cy,
      r: clockRadius,
      stroke: stroke,
      strokeWidth: 1.5,
      fill: filled ? stroke : "transparent"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: hourHand.x,
      y2: hourHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx,
      y1: cy,
      x2: minuteHand.x,
      y2: minuteHand.y,
      stroke: filled ? "transparent" : stroke,
      strokeWidth: 1.5
    }), Array.from({
      length: 12
    }, (_, index) => {
      const angle = index / 12 * 2 * Math.PI;
      const x1 = cx + clockRadius * Math.cos(angle);
      const y1 = cy + clockRadius * Math.sin(angle);
      const x2 = cx + (clockRadius - padding * 0.5) * Math.cos(angle);
      const y2 = cy + (clockRadius - padding * 0.5) * Math.sin(angle);
      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
        x1: x1,
        y1: y1,
        x2: x2,
        y2: y2,
        stroke: stroke,
        strokeWidth: 1.5
      }, index);
    })]
  });
}
function ErrorEventSymbolSvg(_ref4) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref4;
  const scaleFactor = 0.1;
  const originalPoints = [{
    x: 136.649,
    y: 252.094
  }, {
    x: 91.885,
    y: 307.853
  }, {
    x: 115.445,
    y: 132.723
  }, {
    x: 202.618,
    y: 229.319
  }, {
    x: 248.953,
    y: 129.581
  }, {
    x: 208.901,
    y: 321.204
  }, {
    x: 136.649,
    y: 252.094
  }, {
    x: 91.885,
    y: 307.853
  }];
  const adjustedPoints = originalPoints.map(point => `${(point.x - 200) * scaleFactor + cx},${(point.y - 200) * scaleFactor + cy}`).join(" ");
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: adjustedPoints,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function EscalationEventSymbolSvg(_ref5) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref5;
  const arrowHeight = innerCircleRadius * 1.2;
  const arrowBaseWidth = innerCircleRadius * 1;
  const upperLeftPoint = {
    x: cx - arrowBaseWidth / 2,
    y: cy + arrowHeight / 2
  };
  const upperRightPoint = {
    x: cx + arrowBaseWidth / 2,
    y: cy + arrowHeight / 2
  };
  const topPoint = {
    x: cx,
    y: cy - arrowHeight / 2
  };
  const midPoint = {
    x: cx,
    y: cy + arrowHeight / 20
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: upperLeftPoint.x,
      y1: upperLeftPoint.y,
      x2: topPoint.x,
      y2: topPoint.y,
      stroke: stroke,
      fill: filled ? stroke : "transparent",
      strokeWidth: 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: upperRightPoint.x,
      y1: upperRightPoint.y,
      x2: topPoint.x,
      y2: topPoint.y,
      stroke: stroke,
      fill: filled ? stroke : "transparent",
      strokeWidth: 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: upperLeftPoint.x,
      y1: upperLeftPoint.y,
      x2: midPoint.x,
      y2: midPoint.y,
      stroke: stroke,
      fill: filled ? stroke : "transparent",
      strokeWidth: 1.5
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: upperRightPoint.x,
      y1: upperRightPoint.y,
      x2: midPoint.x,
      y2: midPoint.y,
      stroke: stroke,
      fill: filled ? stroke : "transparent",
      strokeWidth: 1.5
    })]
  });
}
function SignalEventSymbolSvg(_ref6) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref6;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding;
  const hy = y + innerCircleRadius - padding;
  const triangle = [{
    x: cx + cos30 * hx,
    y: padding / 4 + cy + sin30 * hy
  }, {
    x: cx - cos30 * hx,
    y: padding / 4 + cy + sin30 * hy
  }, {
    x: cx,
    y: padding / 4 + cy - hy
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${triangle[0].x},${triangle[0].y} ${triangle[1].x},${triangle[1].y} ${triangle[2].x},${triangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })
  });
}
function CompensationEventSymbolSvg(_ref7) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref7;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding * 0.6;
  const hy = y + innerCircleRadius - padding * 0.2;
  const rightOffset = 0.15 * innerCircleRadius;
  const firstTriangle = [{
    x: cx + hx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - rightOffset,
    y: cy
  }, {
    x: cx + hx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  const secondTriangle = [{
    x: cx - rightOffset,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx - hx - rightOffset,
    y: cy
  }, {
    x: cx - rightOffset,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${firstTriangle[0].x},${firstTriangle[0].y} ${firstTriangle[1].x},${firstTriangle[1].y} ${firstTriangle[2].x},${firstTriangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${secondTriangle[0].x},${secondTriangle[0].y} ${secondTriangle[1].x},${secondTriangle[1].y} ${secondTriangle[2].x},${secondTriangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function ConditionalEventSymbolSvg(_ref8) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref8;
  const squareSize = outerCircleRadius * 1.1;
  const lineSpacing = squareSize / 5;
  const lineThickness = 2;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: cx - squareSize / 2,
      y: cy - squareSize / 2,
      width: squareSize,
      height: squareSize,
      fill: filled ? fill : "transparent",
      stroke: stroke,
      strokeWidth: 1.5
    }), [...Array(4)].map((_, index) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("line", {
      x1: cx - squareSize / 2 + 5,
      y1: cy - squareSize / 2 + lineSpacing * (index + 1),
      x2: cx + squareSize / 2 - 5,
      y2: cy - squareSize / 2 + lineSpacing * (index + 1),
      stroke: stroke,
      strokeWidth: lineThickness
    }, index))]
  });
}
function CancelEventSymbolSvg(_ref9) {
  let {
    stroke,
    cx,
    cy,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref9;
  const rectWidth = (outerCircleRadius - innerCircleRadius) * 0.3;
  const rectLength = innerCircleRadius * 1.4;
  const offset = rectLength / 2;
  function rotatePoint(px, py, angle) {
    const rad = Math.PI / 180 * angle;
    const cos = Math.cos(rad);
    const sin = Math.sin(rad);
    const x = cos * (px - cx) - sin * (py - cy) + cx;
    const y = sin * (px - cx) + cos * (py - cy) + cy;
    return {
      x,
      y
    };
  }
  const rect1 = [{
    x: cx - offset,
    y: cy - rectWidth / 2
  }, {
    x: cx + offset,
    y: cy - rectWidth / 2
  }, {
    x: cx + offset,
    y: cy + rectWidth / 2
  }, {
    x: cx - offset,
    y: cy + rectWidth / 2
  }];
  const rect2 = [{
    x: cx - rectWidth / 2,
    y: cy - offset
  }, {
    x: cx + rectWidth / 2,
    y: cy - offset
  }, {
    x: cx + rectWidth / 2,
    y: cy + offset
  }, {
    x: cx - rectWidth / 2,
    y: cy + offset
  }];
  const rotatedRect1 = rect1.map(point => rotatePoint(point.x, point.y, 45));
  const rotatedRect2 = rect2.map(point => rotatePoint(point.x, point.y, 45));
  const points1 = rotatedRect1.map(p => `${p.x},${p.y}`).join(" ");
  const points2 = rotatedRect2.map(p => `${p.x},${p.y}`).join(" ");
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: points1,
      strokeWidth: 0.2,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: points2,
      strokeWidth: 0.2,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function LinkEventSymbolSvg(_ref10) {
  let {
    stroke,
    cx,
    cy,
    x,
    y,
    innerCircleRadius,
    outerCircleRadius,
    fill,
    filled
  } = _ref10;
  const padding = 1.5 * (outerCircleRadius - innerCircleRadius);
  const hx = x + innerCircleRadius - padding * 0.6;
  const hy = y + innerCircleRadius - padding * 0.2;
  const rectangleX = cx - hx;
  const rectangleY = cy - hy / 2;
  const rectangleWidth = hx + 10;
  const rectangleHeight = hy;
  const secondTriangle = [{
    x: cx + 10,
    y: cy - hy + (outerCircleRadius - innerCircleRadius)
  }, {
    x: cx + hx,
    y: cy
  }, {
    x: cx + 10,
    y: cy + hy - (outerCircleRadius - innerCircleRadius)
  }];
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
      x: rectangleX,
      y: rectangleY,
      width: rectangleWidth,
      height: rectangleHeight,
      fill: filled ? stroke : "transparent",
      stroke: stroke,
      strokeWidth: 1.5,
      strokeLinejoin: "round"
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("polygon", {
      points: `${secondTriangle[0].x},${secondTriangle[0].y} ${secondTriangle[1].x},${secondTriangle[1].y} ${secondTriangle[2].x},${secondTriangle[2].y}`,
      strokeWidth: 1.5,
      strokeLinejoin: "round",
      fill: filled ? stroke : "transparent",
      stroke: stroke
    })]
  });
}
function ActivityNodeIcons(_ref11) {
  let {
    x,
    y,
    width,
    height,
    icons
  } = _ref11;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Loop) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u21BB"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.AdHocSubProcess) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "~"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Compensation) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u23EA"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.Collapsed) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("rect", {
        x: x + width / 2 - 15,
        y: y + height - 20 - _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH,
        width: 30,
        height: 20,
        fill: "transparent",
        stroke: _NodeStyle__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_NODE_STROKE_COLOR,
        strokeWidth: _kie_tools_xyflow_react_kie_diagram_dist_nodes_NodeSvgs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_NODE_STROKE_WIDTH
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
        fontSize: "2em",
        textAnchor: "middle",
        dominantBaseline: "auto",
        fontWeight: "bold",
        x: x + width / 2,
        y: 1 + y + height,
        children: "+"
      })]
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceParallel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2 - 7}, ${y + height - 15}) rotate(90)`,
      children: "\u2630"
    }), icons.has(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_5__.ActivityNodeMarker.MultiInstanceSequential) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("text", {
      fontSize: "2em",
      textAnchor: "middle",
      dominantBaseline: "auto",
      fontWeight: "bold",
      transform: `translate(${x + width / 2}, ${y + height - 5}) rotate(0)`,
      children: "\u2630"
    })]
  });
}
try {
    // @ts-ignore
    DataObjectNodeSvg.displayName = "DataObjectNodeSvg";
    // @ts-ignore
    DataObjectNodeSvg.__docgenInfo = { "description": "", "displayName": "DataObjectNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "isIcon": { "defaultValue": null, "description": "", "name": "isIcon", "required": false, "type": { "name": "boolean" } }, "showFoldedPage": { "defaultValue": null, "description": "", "name": "showFoldedPage", "required": false, "type": { "name": "boolean" } }, "showArrow": { "defaultValue": null, "description": "", "name": "showArrow", "required": false, "type": { "name": "boolean" } }, "transform": { "defaultValue": null, "description": "", "name": "transform", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg"] = { docgenInfo: DataObjectNodeSvg.__docgenInfo, name: "DataObjectNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#DataObjectNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNodeSvg.displayName = "StartEventNodeSvg";
    // @ts-ignore
    StartEventNodeSvg.__docgenInfo = { "description": "", "displayName": "StartEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg"] = { docgenInfo: StartEventNodeSvg.__docgenInfo, name: "StartEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#StartEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNodeSvg.displayName = "IntermediateCatchEventNodeSvg";
    // @ts-ignore
    IntermediateCatchEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg"] = { docgenInfo: IntermediateCatchEventNodeSvg.__docgenInfo, name: "IntermediateCatchEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateCatchEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNodeSvg.displayName = "IntermediateThrowEventNodeSvg";
    // @ts-ignore
    IntermediateThrowEventNodeSvg.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg"] = { docgenInfo: IntermediateThrowEventNodeSvg.__docgenInfo, name: "IntermediateThrowEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#IntermediateThrowEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNodeSvg.displayName = "EndEventNodeSvg";
    // @ts-ignore
    EndEventNodeSvg.__docgenInfo = { "description": "", "displayName": "EndEventNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg"] = { docgenInfo: EndEventNodeSvg.__docgenInfo, name: "EndEventNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EndEventNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNodeSvg.displayName = "TaskNodeSvg";
    // @ts-ignore
    TaskNodeSvg.__docgenInfo = { "description": "", "displayName": "TaskNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "markers": { "defaultValue": null, "description": "", "name": "markers", "required": false, "type": { "name": "(ActivityNodeMarker | \"CallActivityPaletteIcon\")[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"businessRuleTask\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"userTask\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg"] = { docgenInfo: TaskNodeSvg.__docgenInfo, name: "TaskNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TaskNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNodeSvg.displayName = "GatewayNodeSvg";
    // @ts-ignore
    GatewayNodeSvg.__docgenInfo = { "description": "", "displayName": "GatewayNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"complexGateway\"" }, { "value": "\"eventBasedGateway\"" }, { "value": "\"exclusiveGateway\"" }, { "value": "\"inclusiveGateway\"" }, { "value": "\"parallelGateway\"" }, { "value": "\"none\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg"] = { docgenInfo: GatewayNodeSvg.__docgenInfo, name: "GatewayNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GatewayNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNodeSvg.displayName = "TextAnnotationNodeSvg";
    // @ts-ignore
    TextAnnotationNodeSvg.__docgenInfo = { "description": "", "displayName": "TextAnnotationNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "showPlaceholder": { "defaultValue": null, "description": "", "name": "showPlaceholder", "required": false, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg"] = { docgenInfo: TextAnnotationNodeSvg.__docgenInfo, name: "TextAnnotationNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TextAnnotationNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNodeSvg.displayName = "UnknownNodeSvg";
    // @ts-ignore
    UnknownNodeSvg.__docgenInfo = { "description": "", "displayName": "UnknownNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg"] = { docgenInfo: UnknownNodeSvg.__docgenInfo, name: "UnknownNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#UnknownNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EventVariantSymbolSvg.displayName = "EventVariantSymbolSvg";
    // @ts-ignore
    EventVariantSymbolSvg.__docgenInfo = { "description": "", "displayName": "EventVariantSymbolSvg", "props": { "variant": { "defaultValue": null, "description": "", "name": "variant", "required": true, "type": { "name": "enum", "value": [{ "value": "\"cancelEventDefinition\"" }, { "value": "\"compensateEventDefinition\"" }, { "value": "\"conditionalEventDefinition\"" }, { "value": "\"errorEventDefinition\"" }, { "value": "\"escalationEventDefinition\"" }, { "value": "\"linkEventDefinition\"" }, { "value": "\"messageEventDefinition\"" }, { "value": "\"signalEventDefinition\"" }, { "value": "\"terminateEventDefinition\"" }, { "value": "\"timerEventDefinition\"" }, { "value": "\"none\"" }] } }, "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg"] = { docgenInfo: EventVariantSymbolSvg.__docgenInfo, name: "EventVariantSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EventVariantSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    MessageEventSymbolSvg.displayName = "MessageEventSymbolSvg";
    // @ts-ignore
    MessageEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "MessageEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg"] = { docgenInfo: MessageEventSymbolSvg.__docgenInfo, name: "MessageEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#MessageEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TimerEventSymbolSvg.displayName = "TimerEventSymbolSvg";
    // @ts-ignore
    TimerEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "TimerEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg"] = { docgenInfo: TimerEventSymbolSvg.__docgenInfo, name: "TimerEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#TimerEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ErrorEventSymbolSvg.displayName = "ErrorEventSymbolSvg";
    // @ts-ignore
    ErrorEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ErrorEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg"] = { docgenInfo: ErrorEventSymbolSvg.__docgenInfo, name: "ErrorEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ErrorEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EscalationEventSymbolSvg.displayName = "EscalationEventSymbolSvg";
    // @ts-ignore
    EscalationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "EscalationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg"] = { docgenInfo: EscalationEventSymbolSvg.__docgenInfo, name: "EscalationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#EscalationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SignalEventSymbolSvg.displayName = "SignalEventSymbolSvg";
    // @ts-ignore
    SignalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "SignalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg"] = { docgenInfo: SignalEventSymbolSvg.__docgenInfo, name: "SignalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SignalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CompensationEventSymbolSvg.displayName = "CompensationEventSymbolSvg";
    // @ts-ignore
    CompensationEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CompensationEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg"] = { docgenInfo: CompensationEventSymbolSvg.__docgenInfo, name: "CompensationEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CompensationEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ConditionalEventSymbolSvg.displayName = "ConditionalEventSymbolSvg";
    // @ts-ignore
    ConditionalEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "ConditionalEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg"] = { docgenInfo: ConditionalEventSymbolSvg.__docgenInfo, name: "ConditionalEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#ConditionalEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    CancelEventSymbolSvg.displayName = "CancelEventSymbolSvg";
    // @ts-ignore
    CancelEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "CancelEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg"] = { docgenInfo: CancelEventSymbolSvg.__docgenInfo, name: "CancelEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#CancelEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LinkEventSymbolSvg.displayName = "LinkEventSymbolSvg";
    // @ts-ignore
    LinkEventSymbolSvg.__docgenInfo = { "description": "", "displayName": "LinkEventSymbolSvg", "props": { "stroke": { "defaultValue": null, "description": "", "name": "stroke", "required": true, "type": { "name": "string" } }, "cx": { "defaultValue": null, "description": "", "name": "cx", "required": true, "type": { "name": "number" } }, "cy": { "defaultValue": null, "description": "", "name": "cy", "required": true, "type": { "name": "number" } }, "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "innerCircleRadius": { "defaultValue": null, "description": "", "name": "innerCircleRadius", "required": true, "type": { "name": "number" } }, "outerCircleRadius": { "defaultValue": null, "description": "", "name": "outerCircleRadius", "required": true, "type": { "name": "number" } }, "fill": { "defaultValue": null, "description": "", "name": "fill", "required": true, "type": { "name": "string" } }, "filled": { "defaultValue": null, "description": "", "name": "filled", "required": true, "type": { "name": "boolean" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg"] = { docgenInfo: LinkEventSymbolSvg.__docgenInfo, name: "LinkEventSymbolSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LinkEventSymbolSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    ActivityNodeIcons.displayName = "ActivityNodeIcons";
    // @ts-ignore
    ActivityNodeIcons.__docgenInfo = { "description": "", "displayName": "ActivityNodeIcons", "props": { "x": { "defaultValue": null, "description": "", "name": "x", "required": true, "type": { "name": "number" } }, "y": { "defaultValue": null, "description": "", "name": "y", "required": true, "type": { "name": "number" } }, "width": { "defaultValue": null, "description": "", "name": "width", "required": true, "type": { "name": "number" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": true, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": true, "type": { "name": "Set<ActivityNodeMarker>" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons"] = { docgenInfo: ActivityNodeIcons.__docgenInfo, name: "ActivityNodeIcons", path: "src/diagram/nodes/NodeSvgs.tsx#ActivityNodeIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNodeSvg.displayName = "LaneNodeSvg";
    // @ts-ignore
    LaneNodeSvg.__docgenInfo = { "description": "", "displayName": "LaneNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "gutterWidth": { "defaultValue": null, "description": "", "name": "gutterWidth", "required": false, "type": { "name": "number" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg"] = { docgenInfo: LaneNodeSvg.__docgenInfo, name: "LaneNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#LaneNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNodeSvg.displayName = "SubProcessNodeSvg";
    // @ts-ignore
    SubProcessNodeSvg.__docgenInfo = { "description": "", "displayName": "SubProcessNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "borderRadius": { "defaultValue": null, "description": "", "name": "borderRadius", "required": false, "type": { "name": "number" } }, "rimWidth": { "defaultValue": null, "description": "", "name": "rimWidth", "required": false, "type": { "name": "number" } }, "icons": { "defaultValue": null, "description": "", "name": "icons", "required": false, "type": { "name": "ActivityNodeMarker[]" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "\"event\"" }, { "value": "\"transaction\"" }, { "value": "\"multi-instance\"" }, { "value": "\"other\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg"] = { docgenInfo: SubProcessNodeSvg.__docgenInfo, name: "SubProcessNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#SubProcessNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNodeSvg.displayName = "GroupNodeSvg";
    // @ts-ignore
    GroupNodeSvg.__docgenInfo = { "description": "", "displayName": "GroupNodeSvg", "props": { "fillColor": { "defaultValue": null, "description": "", "name": "fillColor", "required": false, "type": { "name": "string" } }, "strokeColor": { "defaultValue": null, "description": "", "name": "strokeColor", "required": false, "type": { "name": "string" } }, "strokeWidth": { "defaultValue": null, "description": "", "name": "strokeWidth", "required": false, "type": { "name": "number" } }, "strokeDasharray": { "defaultValue": null, "description": "", "name": "strokeDasharray", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg"] = { docgenInfo: GroupNodeSvg.__docgenInfo, name: "GroupNodeSvg", path: "src/diagram/nodes/NodeSvgs.tsx#GroupNodeSvg" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/diagram/nodes/Nodes.tsx":
/*!*************************************!*\
  !*** ./src/diagram/nodes/Nodes.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataObjectNode: () => (/* binding */ DataObjectNode),
/* harmony export */   EndEventNode: () => (/* binding */ EndEventNode),
/* harmony export */   GatewayNode: () => (/* binding */ GatewayNode),
/* harmony export */   GroupNode: () => (/* binding */ GroupNode),
/* harmony export */   IntermediateCatchEventNode: () => (/* binding */ IntermediateCatchEventNode),
/* harmony export */   IntermediateThrowEventNode: () => (/* binding */ IntermediateThrowEventNode),
/* harmony export */   LaneNode: () => (/* binding */ LaneNode),
/* harmony export */   NodeLabelAtTheBottom: () => (/* binding */ NodeLabelAtTheBottom),
/* harmony export */   StartEventNode: () => (/* binding */ StartEventNode),
/* harmony export */   SubProcessNode: () => (/* binding */ SubProcessNode),
/* harmony export */   TaskNode: () => (/* binding */ TaskNode),
/* harmony export */   TextAnnotationNode: () => (/* binding */ TextAnnotationNode),
/* harmony export */   UnknownNode: () => (/* binding */ UnknownNode),
/* harmony export */   useActivityIcons: () => (/* binding */ useActivityIcons)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/maths/DcMaths */ "../xyflow-react-kie-diagram/dist/maths/DcMaths.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/memoization/memoization */ "../xyflow-react-kie-diagram/dist/memoization/memoization.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel */ "../xyflow-react-kie-diagram/dist/nodes/EditableNodeLabel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/Hooks */ "../xyflow-react-kie-diagram/dist/nodes/Hooks.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/InfoNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/InfoNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel */ "../xyflow-react-kie-diagram/dist/nodes/OutgoingStuffNodePanel.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles */ "../xyflow-react-kie-diagram/dist/nodes/PositionalNodeHandles.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/reactExt/useIsHovered */ "../xyflow-react-kie-diagram/dist/reactExt/useIsHovered.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! reactflow */ "../../node_modules/.pnpm/@reactflow+core@11.10.1_@types+react@17.0.21_immer@10.0.3_patch_hash=utu5oov26wz5mjuays57tp3y_kvkkldyzgoymrhkgoz2ul5eloq/node_modules/@reactflow/core/dist/esm/index.mjs");
/* harmony import */ var _mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../mutations/renameNode */ "./src/mutations/renameNode.ts");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BpmnDiagramDomain */ "./src/diagram/BpmnDiagramDomain.tsx");
/* harmony import */ var _NodeStyle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NodeStyle */ "./src/diagram/nodes/NodeStyle.ts");
/* harmony import */ var _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./NodeSvgs */ "./src/diagram/nodes/NodeSvgs.tsx");
/* harmony import */ var _morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./morphing/NodeMorphingPanel */ "./src/diagram/nodes/morphing/NodeMorphingPanel.tsx");
/* harmony import */ var _morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./morphing/useEventNodeMorphingActions */ "./src/diagram/nodes/morphing/useEventNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./morphing/useGatewayNodeMorphingActions */ "./src/diagram/nodes/morphing/useGatewayNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./morphing/useTaskNodeMorphingActions */ "./src/diagram/nodes/morphing/useTaskNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./morphing/useSubProcessNodeMorphingActions */ "./src/diagram/nodes/morphing/useSubProcessNodeMorphingActions.tsx");
/* harmony import */ var _morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./morphing/useKeyboardShortcutsForMorphingActions */ "./src/diagram/nodes/morphing/useKeyboardShortcutsForMorphingActions.tsx");
























const StartEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref => {
  let {
    data: {
      bpmnElement: startEvent,
      shape,
      shapeIndex,
      parentXyFlowNode
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(startEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => (parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type) === _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess ? new Set(["none", "cancelEventDefinition", "linkEventDefinition", "terminateEventDefinition"]) : new Set(["errorEventDefinition", "escalationEventDefinition", "cancelEventDefinition", "compensateEventDefinition", "linkEventDefinition", "terminateEventDefinition"]), [parentXyFlowNode === null || parentXyFlowNode === void 0 ? void 0 : parentXyFlowNode.type]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.StartEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = startEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": startEvent["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.startEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.startEvent.background,
          selectedActionId: (_e = (_d = startEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (startEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: startEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: startEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateCatchEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref2 => {
  let {
    data: {
      bpmnElement: intermediateCatchEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref2;
  var _a, _b, _c, _d;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateCatchEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => intermediateCatchEvent.__$$element === "intermediateCatchEvent" ? new Set(["none", "errorEventDefinition", "escalationEventDefinition", "compensateEventDefinition", "cancelEventDefinition", "terminateEventDefinition"]) : intermediateCatchEvent.__$$element === "boundaryEvent" ? new Set(["none", "linkEventDefinition", "terminateEventDefinition"]) : new Set(), [intermediateCatchEvent.__$$element]);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateCatchEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_b = (_a = intermediateCatchEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0].__$$element) !== null && _b !== void 0 ? _b : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-catch-event-node ${className} kie-bpmn-editor--selected-intermediate-catch-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateCatchEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateCatchEvent.background,
          selectedActionId: (_d = (_c = intermediateCatchEvent.eventDefinition) === null || _c === void 0 ? void 0 : _c[0].__$$element) !== null && _d !== void 0 ? _d : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateCatchEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateCatchEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateCatchEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const IntermediateThrowEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref3 => {
  let {
    data: {
      bpmnElement: intermediateThrowEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref3;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(intermediateThrowEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "errorEventDefinition", "cancelEventDefinition", "conditionalEventDefinition", "terminateEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.IntermediateThrowEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = intermediateThrowEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--intermediate-throw-event-node ${className} kie-bpmn-editor--selected-intermediate-throw-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.intermediateThrowEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.intermediateThrowEvent.background,
          selectedActionId: (_e = (_d = intermediateThrowEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (intermediateThrowEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: intermediateThrowEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: intermediateThrowEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const EndEventNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref4 => {
  let {
    data: {
      bpmnElement: endEvent,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref4;
  var _a, _b, _c, _d, _e;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useEventNodeMorphingActions__WEBPACK_IMPORTED_MODULE_16__.useEventNodeMorphingActions)(endEvent);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(["timerEventDefinition", "conditionalEventDefinition", "linkEventDefinition"]), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.EndEventNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: (_c = (_b = (_a = endEvent.eventDefinition) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.__$$element) !== null && _c !== void 0 ? _c : "none",
        strokeWidth: 6
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--end-event-node ${className} kie-bpmn-editor--selected-end-event-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.endEvent].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.endEvent.background,
          selectedActionId: (_e = (_d = endEvent.eventDefinition) === null || _d === void 0 ? void 0 : _d[0].__$$element) !== null && _e !== void 0 ? _e : "none"
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (endEvent["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: endEvent["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: endEvent["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TaskNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref5 => {
  let {
    data: {
      bpmnElement: task,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref5;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(task);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useTaskNodeMorphingActions__WEBPACK_IMPORTED_MODULE_18__.useTaskNodeMorphingActions)(task);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TaskNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: task.__$$element === "callActivity" ? 5 : undefined,
        markers: icons
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--task-node ${className} kie-bpmn-editor--selected-task-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": task["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: task["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: task["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.task].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.task.background,
          selectedActionId: task.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const SubProcessNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref6 => {
  let {
    data: {
      bpmnElement: subProcess,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref6;
  var _a, _b;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const icons = useActivityIcons(subProcess);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useSubProcessNodeMorphingActions__WEBPACK_IMPORTED_MODULE_19__.useSubProcessNodeMorphingActions)(subProcess);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.SubProcessNodeSvg, {
        ...nodeDimensions,
        ref: ref,
        x: 0,
        y: 0,
        icons: icons,
        variant: subProcess.__$$element === "transaction" ? "transaction" : subProcess["@_triggeredByEvent"] ? "event" : ((_a = subProcess.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics" ? "multi-instance" : "other"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--sub-process-node ${className} kie-bpmn-editor--selected-sub-process-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": subProcess["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: subProcess["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: subProcess["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            ...fontCssProperties,
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.subProcess].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && isOnlySelectedNode && !dragging,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.subProcess.background,
          selectedActionId: subProcess["@_triggeredByEvent"] === true ? "eventSubProcess" : ((_b = subProcess.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "multiInstanceLoopCharacteristics" ? "multiInstanceSubProcess" : subProcess.__$$element
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GatewayNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref7 => {
  let {
    data: {
      bpmnElement: gateway,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref7;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [isMorphingPanelExpanded, setMorphingPanelExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_10__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => setMorphingPanelExpanded(false), [isHovered]);
  const morphingActions = (0,_morphing_useGatewayNodeMorphingActions__WEBPACK_IMPORTED_MODULE_17__.useGatewayNodeMorphingActions)(gateway);
  const disabledMorphingActionIds = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => new Set(), []);
  (0,_morphing_useKeyboardShortcutsForMorphingActions__WEBPACK_IMPORTED_MODULE_20__.useKeyboardShortcutsForMorphingActions)(ref, morphingActions, disabledMorphingActionIds);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GatewayNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        variant: gateway.__$$element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--gateway-node ${className} kie-bpmn-editor--selected-gateway-node`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": gateway["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isMorphingPanelExpanded && !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.gateway].edges
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_morphing_NodeMorphingPanel__WEBPACK_IMPORTED_MODULE_15__.NodeMorphingPanel, {
          disabledActionIds: disabledMorphingActionIds,
          isToggleVisible: !isTargeted && shouldActLikeHovered,
          isExpanded: isMorphingPanelExpanded,
          setExpanded: setMorphingPanelExpanded,
          actions: morphingActions,
          primaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.foreground,
          secondaryColor: _NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.NODE_COLORS.gateway.background,
          selectedActionId: gateway.__$$element
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (gateway["@_name"] || isEditingLabel) && !isMorphingPanelExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: gateway["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: gateway["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const DataObjectNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref8 => {
  let {
    data: {
      bpmnElement: dataObject,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref8;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateFlowElement)({
        definitions: state.bpmn.model.definitions,
        newFlowElement: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const [nodeHeight, setNodeHeight] = react__WEBPACK_IMPORTED_MODULE_10__.useState(0);
  const style = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => ({
    display: "flex",
    flexDirection: "column",
    outline: "none",
    "--selected-data-object-node-shape--height": `${nodeDimensions.height + 20 + 26 + (isEditingLabel ? 20 : nodeHeight !== null && nodeHeight !== void 0 ? nodeHeight : 0)}px`
  }), [nodeDimensions, isEditingLabel, nodeHeight]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.DataObjectNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        showArrow: false,
        showFoldedPage: true
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      style: style,
      className: `kie-bpmn-editor--data-object-node-content ${className} ${selected ? "selected" : ""}`,
      ref: ref,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": dataObject["@_name"],
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && shouldActLikeHovered,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && shouldActLikeHovered,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.dataObject].edges
        })]
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          height: nodeDimensions.height,
          flexShrink: 0
        }
      }), (dataObject["@_name"] || isEditingLabel) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NodeLabelAtTheBottom, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: dataObject["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: dataObject["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          },
          setLabelHeight: setNodeHeight
        })
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const GroupNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref9 => {
  let {
    data: {
      bpmnElement: group,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref9;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const reactFlow = reactflow__WEBPACK_IMPORTED_MODULE_22__.useReactFlow();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES, true);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  (0,react__WEBPACK_IMPORTED_MODULE_10__.useEffect)(() => {
    const onDoubleClick = () => {
      bpmnEditorStoreApi.setState(state => {
        state.xyFlowReactKieDiagram._selectedNodes = reactFlow.getNodes().flatMap(n => (0,_kie_tools_xyflow_react_kie_diagram_dist_maths_DcMaths__WEBPACK_IMPORTED_MODULE_2__.getContainmentRelationship)({
          bounds: n.data.shape["dc:Bounds"],
          container: shape["dc:Bounds"],
          snapGrid: state.xyFlowReactKieDiagram.snapGrid,
          containerMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group],
          boundsMinSizes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES[n.type],
          borderAllowanceInPx: 0
        }).isCompletelyInside ? [n.id] : []);
      });
    };
    const r = ref.current;
    r === null || r === void 0 ? void 0 : r.addEventListener("dblclick", onDoubleClick);
    return () => {
      r === null || r === void 0 ? void 0 : r.removeEventListener("dblclick", onDoubleClick);
    };
  }, [bpmnEditorStoreApi, reactFlow, shape]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.GroupNodeSvg, {
        ref: ref,
        ...nodeDimensions,
        x: 0,
        y: 0,
        strokeWidth: 3
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--group-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": id,
      children: [selected && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && selected && !dragging,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.group].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const LaneNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref10 => {
  let {
    data: {
      bpmnElement: lane,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref10;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isOnlySelectedNode = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.xyFlowReactKieDiagram._selectedNodes.length === 1 && selected);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    shape,
    nodeType: type,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setName = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newName => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateLane)({
        definitions: state.bpmn.model.definitions,
        newLane: {
          "@_name": newName.trim()
        },
        id
      });
    });
  }, [bpmnEditorStoreApi, id]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className} ${selected ? "selected" : ""}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.LaneNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0,
        ref: ref
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      className: `kie-bpmn-editor--lane-node ${className} kie-bpmn-editor--selected-lane-node`,
      tabIndex: -1,
      "data-nodehref": id,
      "data-nodelabel": lane["@_name"],
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        className: "xyflow-react-kie-diagram--node",
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
            bpmnEditorStoreApi.setState(state => {
              state.propertiesPanel.isOpen = true;
            });
          }, [bpmnEditorStoreApi])
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
          id: id,
          name: lane["@_name"],
          isEditing: isEditingLabel,
          setEditing: setEditingLabel,
          position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
            nodeType: type
          }),
          value: lane["@_name"],
          onChange: setName,
          validate: () => true,
          shouldCommitOnBlur: true,
          fontCssProperties: {
            zIndex: 2000
          }
        }), isOnlySelectedNode && !dragging && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
          nodeType: type,
          nodeId: id,
          nodeShapeIndex: shapeIndex,
          MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
          nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
          edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
          nodeHref: id,
          isVisible: !isTargeted && isOnlySelectedNode && !dragging,
          nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].nodes,
          edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.lane].edges
        })]
      })
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const TextAnnotationNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref11 => {
  let {
    data: {
      bpmnElement: textAnnotation,
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref11;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const enableCustomNodeStyles = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => s.diagram.overlays.enableCustomNodeStyles);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const {
    isEditingLabel,
    setEditingLabel,
    triggerEditing,
    triggerEditingIfEnter
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.useEditableNodeLabel)(id);
  (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useHoveredNodeAlwaysOnTop)(ref, zIndex, shouldActLikeHovered, dragging, selected, isEditingLabel);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  const setText = (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(newText => {
    bpmnEditorStoreApi.setState(state => {
      (0,_mutations_renameNode__WEBPACK_IMPORTED_MODULE_21__.updateTextAnnotation)({
        definitions: state.bpmn.model.definitions,
        id,
        newTextAnnotation: {
          text: {
            __$$text: newText
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, id]);
  const {
    fontCssProperties
  } = (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.useNodeStyle)({
    nodeType: type,
    isEnabled: enableCustomNodeStyles
  });
  const content = (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a;
    return String((_a = textAnnotation.text) === null || _a === void 0 ? void 0 : _a.__$$text) || (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_1__.parseBpmn20Drools10MetaData)(textAnnotation).get("elementname");
  }, [textAnnotation]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.TextAnnotationNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_PositionalNodeHandles__WEBPACK_IMPORTED_MODULE_8__.PositionalNodeHandles, {
      isTargeted: isTargeted && isValidConnectionTarget,
      nodeId: id
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--text-annotation-node ${className}`,
      tabIndex: -1,
      onDoubleClick: triggerEditing,
      onKeyDown: triggerEditingIfEnter,
      "data-nodehref": id,
      "data-nodelabel": String(textAnnotation.text),
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: content,
        isEditing: isEditingLabel,
        setEditing: setEditingLabel,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        value: content,
        onChange: setText,
        validate: () => true,
        shouldCommitOnBlur: true,
        fontCssProperties: {
          ...fontCssProperties,
          zIndex: 2000
        }
      }), shouldActLikeHovered && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.NodeResizerHandle, {
        nodeType: type,
        nodeId: id,
        nodeShapeIndex: shapeIndex,
        MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_OutgoingStuffNodePanel__WEBPACK_IMPORTED_MODULE_7__.OutgoingStuffNodePanel, {
        nodeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnNodesOutgoingStuffNodePanelMapping,
        edgeMapping: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.bpmnEdgesOutgoingStuffNodePanelMapping,
        nodeHref: id,
        isVisible: !isTargeted && shouldActLikeHovered,
        nodeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].nodes,
        edgeTypes: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.BPMN_OUTGOING_STRUCTURE[_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES.textAnnotation].edges
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
const UnknownNode = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_10__.memo(_ref12 => {
  let {
    data: {
      shape,
      shapeIndex
    },
    selected,
    dragging,
    zIndex,
    type,
    id
  } = _ref12;
  const renderCount = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(0);
  renderCount.current++;
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_10__.useRef)(null);
  const isHovered = (0,_kie_tools_xyflow_react_kie_diagram_dist_reactExt_useIsHovered__WEBPACK_IMPORTED_MODULE_9__.useIsHovered)(ref);
  const isResizing = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeResizing)(id);
  const shouldActLikeHovered = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStore)(s => (isHovered || isResizing) && s.xyFlowReactKieDiagram.draggingNodes.length === 0);
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_11__.useBpmnEditorStoreApi)();
  const {
    isTargeted,
    isValidConnectionTarget
  } = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useConnectionTargetStatus)(id, shouldActLikeHovered);
  const className = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeClassName)(isValidConnectionTarget, id, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.NODE_TYPES, _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.EDGE_TYPES);
  const nodeDimensions = (0,_kie_tools_xyflow_react_kie_diagram_dist_nodes_Hooks__WEBPACK_IMPORTED_MODULE_5__.useNodeDimensions)({
    nodeType: type,
    shape,
    MIN_NODE_SIZES: _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.MIN_NODE_SIZES
  });
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg", {
      className: `xyflow-react-kie-diagram--node-shape ${className}`,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_NodeSvgs__WEBPACK_IMPORTED_MODULE_14__.UnknownNodeSvg, {
        ...nodeDimensions,
        x: 0,
        y: 0
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(reactflow__WEBPACK_IMPORTED_MODULE_22__.Handle, {
      id: "unknown",
      type: "source",
      style: {
        opacity: 0
      },
      position: reactflow__WEBPACK_IMPORTED_MODULE_22__.Position.Top
    }, "unknown"), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      ref: ref,
      className: `xyflow-react-kie-diagram--node kie-bpmn-editor--unknown-node ${className}`,
      tabIndex: -1,
      "data-nodehref": id,
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_InfoNodePanel__WEBPACK_IMPORTED_MODULE_6__.InfoNodePanel, {
        isVisible: !isTargeted && shouldActLikeHovered,
        onClick: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(() => {
          bpmnEditorStoreApi.setState(state => {
            state.propertiesPanel.isOpen = true;
          });
        }, [bpmnEditorStoreApi])
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_nodes_EditableNodeLabel__WEBPACK_IMPORTED_MODULE_4__.EditableNodeLabel, {
        id: id,
        name: undefined,
        position: (0,_NodeStyle__WEBPACK_IMPORTED_MODULE_13__.getNodeLabelPosition)({
          nodeType: type
        }),
        isEditing: false,
        setEditing: () => {},
        value: `? `,
        onChange: () => {},
        skipValidation: false,
        validate: (0,react__WEBPACK_IMPORTED_MODULE_10__.useCallback)(value => true, []),
        shouldCommitOnBlur: true
      })]
    })]
  });
}, _kie_tools_xyflow_react_kie_diagram_dist_memoization_memoization__WEBPACK_IMPORTED_MODULE_3__.propsHaveSameValuesDeep);
function useActivityIcons(activity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_10__.useMemo)(() => {
    var _a, _b;
    const icons = [];
    if (activity.__$$element === "adHocSubProcess") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.AdHocSubProcess);
    }
    if (activity["@_isForCompensation"]) {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Compensation);
    }
    if (((_a = activity.loopCharacteristics) === null || _a === void 0 ? void 0 : _a.__$$element) === "multiInstanceLoopCharacteristics") {
      icons.push(activity.loopCharacteristics["@_isSequential"] ? _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceSequential : _BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.MultiInstanceParallel);
    }
    if (((_b = activity.loopCharacteristics) === null || _b === void 0 ? void 0 : _b.__$$element) === "standardLoopCharacteristics") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Loop);
    }
    if (activity.__$$element === "callActivity") {
      icons.push(_BpmnDiagramDomain__WEBPACK_IMPORTED_MODULE_12__.ActivityNodeMarker.Collapsed);
    }
    return icons;
  }, [activity]);
}
function NodeLabelAtTheBottom(_ref13) {
  let {
    children
  } = _ref13;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
    style: {
      fontSize: "0.8em",
      marginTop: "10px",
      borderRadius: "5px",
      padding: "5px",
      backgroundColor: "rgba(0,0,0,0.02)",
      border: "1px solid rgba(0,0,0,0.2)",
      boxShadow: "rgba(0, 0, 0, 0.4) 2px 2px 6px",
      backdropFilter: "blur(4px)",
      textAlign: "center",
      width: "calc(100% + 20px)",
      marginLeft: "-10px"
    },
    children: children
  });
}
try {
    // @ts-ignore
    useActivityIcons.displayName = "useActivityIcons";
    // @ts-ignore
    useActivityIcons.__docgenInfo = { "description": "", "displayName": "useActivityIcons", "props": { "__": { "defaultValue": null, "description": "", "name": "__", "required": false, "type": { "name": "undefined" } }, "@_id": { "defaultValue": null, "description": "", "name": "@_id", "required": false, "type": { "name": "string" } }, "documentation": { "defaultValue": null, "description": "", "name": "documentation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined" } }, "extensionElements": { "defaultValue": null, "description": "", "name": "extensionElements", "required": false, "type": { "name": "({ __?: undefined; \"drools:onEntry-script\"?: ({ \"@_scriptFormat\": string; \"drools:script\": { __$$text: string; } & { __$$text: string; }; } & Namespaced<\"drools\", drools__GLOBAL__onEntry_script>); \"drools:onExit-script\"?: ({ ...; } & Namespaced<...>); \"drools:metaData\"?: ({ ...; } & Namespace..." } }, "@_name": { "defaultValue": null, "description": "", "name": "@_name", "required": false, "type": { "name": "string" } }, "auditing": { "defaultValue": null, "description": "", "name": "auditing", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAuditing__extensionElements) | undefined; } & { ...; }) ..." } }, "monitoring": { "defaultValue": null, "description": "", "name": "monitoring", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tMonitoring__extensionElements) | undefined; } & { ...; }..." } }, "categoryValueRef": { "defaultValue": null, "description": "", "name": "categoryValueRef", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "incoming": { "defaultValue": null, "description": "", "name": "incoming", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "outgoing": { "defaultValue": null, "description": "", "name": "outgoing", "required": false, "type": { "name": "({ __$$text: string; } & { __$$text: string; })[] | ({ __$$text: string; } & { __$$text: string; })[]" } }, "@_isForCompensation": { "defaultValue": null, "description": "", "name": "@_isForCompensation", "required": false, "type": { "name": "boolean" } }, "@_startQuantity": { "defaultValue": null, "description": "", "name": "@_startQuantity", "required": false, "type": { "name": "number" } }, "@_completionQuantity": { "defaultValue": null, "description": "", "name": "@_completionQuantity", "required": false, "type": { "name": "number" } }, "@_default": { "defaultValue": null, "description": "", "name": "@_default", "required": false, "type": { "name": "string" } }, "ioSpecification": { "defaultValue": null, "description": "", "name": "ioSpecification", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; outputSet: ({ ...; } & { ...; })[]; } & { ...; }) | undefined" } }, "property": { "defaultValue": null, "description": "", "name": "property", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tProperty__extensionElements) | undefined; \"@_name\"?: str..." } }, "dataInputAssociation": { "defaultValue": null, "description": "", "name": "dataInputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "dataOutputAssociation": { "defaultValue": null, "description": "", "name": "dataOutputAssociation", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 4 more ...; assignment?: ({ ...; } & { ...; })[] | undefined; } & { ...; })[] | undefined" } }, "resourceRole": { "defaultValue": null, "description": "", "name": "resourceRole", "required": false, "type": { "name": "(({ __$$element: \"performer\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 4 more ...; resourceParameterBinding?: ({ ...; } & { ...; })[] | undefined; }..." } }, "loopCharacteristics": { "defaultValue": null, "description": "", "name": "loopCharacteristics", "required": false, "type": { "name": "({ __$$element: \"multiInstanceLoopCharacteristics\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 11 more ...; completionCondition?: ({ ...; } & { ...; }..." } }, "@_triggeredByEvent": { "defaultValue": null, "description": "", "name": "@_triggeredByEvent", "required": false, "type": { "name": "boolean" } }, "laneSet": { "defaultValue": null, "description": "", "name": "laneSet", "required": false, "type": { "name": "({ __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tLaneSet__extensionElements) | undefined; \"@_name\"?: stri..." } }, "flowElement": { "defaultValue": null, "description": "", "name": "flowElement", "required": false, "type": { "name": "(({ __$$element: \"adHocSubProcess\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; ... 23 more ...; completionCondition?: ({ ...; } & { ...; }) | undefined; }..." } }, "artifact": { "defaultValue": null, "description": "", "name": "artifact", "required": false, "type": { "name": "(({ __$$element: \"association\"; __?: undefined; \"@_id\"?: string; documentation?: ({ __?: undefined; \"@_id\"?: string; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { ...; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tAssociation__extensionElements) | unde..." } }, "__$$element": { "defaultValue": null, "description": "", "name": "__$$element", "required": true, "type": { "name": "enum", "value": [{ "value": "\"adHocSubProcess\"" }, { "value": "\"businessRuleTask\"" }, { "value": "\"callActivity\"" }, { "value": "\"scriptTask\"" }, { "value": "\"serviceTask\"" }, { "value": "\"subProcess\"" }, { "value": "\"task\"" }, { "value": "\"transaction\"" }, { "value": "\"userTask\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#useActivityIcons"] = { docgenInfo: useActivityIcons.__docgenInfo, name: "useActivityIcons", path: "src/diagram/nodes/Nodes.tsx#useActivityIcons" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    NodeLabelAtTheBottom.displayName = "NodeLabelAtTheBottom";
    // @ts-ignore
    NodeLabelAtTheBottom.__docgenInfo = { "description": "", "displayName": "NodeLabelAtTheBottom", "props": {} };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom"] = { docgenInfo: NodeLabelAtTheBottom.__docgenInfo, name: "NodeLabelAtTheBottom", path: "src/diagram/nodes/Nodes.tsx#NodeLabelAtTheBottom" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StartEventNode.displayName = "StartEventNode";
    // @ts-ignore
    StartEventNode.__docgenInfo = { "description": "", "displayName": "StartEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 14 more ...; \"@_isInterrupting\"?: boolean | undefined; } & { ...; } & { ....." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#StartEventNode"] = { docgenInfo: StartEventNode.__docgenInfo, name: "StartEventNode", path: "src/diagram/nodes/Nodes.tsx#StartEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateCatchEventNode.displayName = "IntermediateCatchEventNode";
    // @ts-ignore
    IntermediateCatchEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateCatchEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<({ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 13 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode"] = { docgenInfo: IntermediateCatchEventNode.__docgenInfo, name: "IntermediateCatchEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateCatchEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    IntermediateThrowEventNode.displayName = "IntermediateThrowEventNode";
    // @ts-ignore
    IntermediateThrowEventNode.__docgenInfo = { "description": "", "displayName": "IntermediateThrowEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode"] = { docgenInfo: IntermediateThrowEventNode.__docgenInfo, name: "IntermediateThrowEventNode", path: "src/diagram/nodes/Nodes.tsx#IntermediateThrowEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    EndEventNode.displayName = "EndEventNode";
    // @ts-ignore
    EndEventNode.__docgenInfo = { "description": "", "displayName": "EndEventNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 12 more ...; eventDefinitionRef?: ({ ...; } & { ...; })[] | undefined; } &..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#EndEventNode"] = { docgenInfo: EndEventNode.__docgenInfo, name: "EndEventNode", path: "src/diagram/nodes/Nodes.tsx#EndEventNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TaskNode.displayName = "TaskNode";
    // @ts-ignore
    TaskNode.__docgenInfo = { "description": "", "displayName": "TaskNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"businessRuleTask\" | ... 4 more ... | \"userTask\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TaskNode"] = { docgenInfo: TaskNode.__docgenInfo, name: "TaskNode", path: "src/diagram/nodes/Nodes.tsx#TaskNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    SubProcessNode.displayName = "SubProcessNode";
    // @ts-ignore
    SubProcessNode.__docgenInfo = { "description": "", "displayName": "SubProcessNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 20 more ...; artifact?: (({ ...; } & { ...; }) | ... 1 more ... | ({ ...; ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#SubProcessNode"] = { docgenInfo: SubProcessNode.__docgenInfo, name: "SubProcessNode", path: "src/diagram/nodes/Nodes.tsx#SubProcessNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GatewayNode.displayName = "GatewayNode";
    // @ts-ignore
    GatewayNode.__docgenInfo = { "description": "", "displayName": "GatewayNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<Normalized<ElementFilter<({ __$$element: \"adHocSubProcess\"; } & BPMN20__tAdHocSubProcess) | ({ __$$element: \"boundaryEvent\"; } & BPMN20__tBoundaryEvent) | ... 28 more ... | ({ ...; } & BPMN20__tUserTask), \"complexGateway\" | ... 3 more ... | \"parallelGateway\">>>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GatewayNode"] = { docgenInfo: GatewayNode.__docgenInfo, name: "GatewayNode", path: "src/diagram/nodes/Nodes.tsx#GatewayNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    DataObjectNode.displayName = "DataObjectNode";
    // @ts-ignore
    DataObjectNode.__docgenInfo = { "description": "", "displayName": "DataObjectNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 7 more ...; dataState?: ({ ...; } & { ...; }) | undefined; } & { ...; } & ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#DataObjectNode"] = { docgenInfo: DataObjectNode.__docgenInfo, name: "DataObjectNode", path: "src/diagram/nodes/Nodes.tsx#DataObjectNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    GroupNode.displayName = "GroupNode";
    // @ts-ignore
    GroupNode.__docgenInfo = { "description": "", "displayName": "GroupNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tGroup__extensionElements) | undefined..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#GroupNode"] = { docgenInfo: GroupNode.__docgenInfo, name: "GroupNode", path: "src/diagram/nodes/Nodes.tsx#GroupNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    LaneNode.displayName = "LaneNode";
    // @ts-ignore
    LaneNode.__docgenInfo = { "description": "", "displayName": "LaneNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 5 more ...; childLaneSet?: ({ ...; } & { ...; }) | undefined; } & { ...; }..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#LaneNode"] = { docgenInfo: LaneNode.__docgenInfo, name: "LaneNode", path: "src/diagram/nodes/Nodes.tsx#LaneNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    TextAnnotationNode.displayName = "TextAnnotationNode";
    // @ts-ignore
    TextAnnotationNode.__docgenInfo = { "description": "", "displayName": "TextAnnotationNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; extensionElements?: ({ ...; } & BPMN20__tTextAnnotation__extensionElements) | ..." } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#TextAnnotationNode"] = { docgenInfo: TextAnnotationNode.__docgenInfo, name: "TextAnnotationNode", path: "src/diagram/nodes/Nodes.tsx#TextAnnotationNode" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    UnknownNode.displayName = "UnknownNode";
    // @ts-ignore
    UnknownNode.__docgenInfo = { "description": "", "displayName": "UnknownNode", "props": { "id": { "defaultValue": null, "description": "", "name": "id", "required": true, "type": { "name": "string" } }, "data": { "defaultValue": null, "description": "", "name": "data", "required": true, "type": { "name": "BpmnDiagramNodeData<any>" } }, "dragHandle": { "defaultValue": null, "description": "", "name": "dragHandle", "required": false, "type": { "name": "string" } }, "selected": { "defaultValue": null, "description": "", "name": "selected", "required": false, "type": { "name": "boolean" } }, "type": { "defaultValue": null, "description": "", "name": "type", "required": false, "type": { "name": "string" } }, "zIndex": { "defaultValue": null, "description": "", "name": "zIndex", "required": false, "type": { "name": "number" } }, "isConnectable": { "defaultValue": null, "description": "", "name": "isConnectable", "required": true, "type": { "name": "boolean" } }, "xPos": { "defaultValue": null, "description": "", "name": "xPos", "required": true, "type": { "name": "number" } }, "yPos": { "defaultValue": null, "description": "", "name": "yPos", "required": true, "type": { "name": "number" } }, "dragging": { "defaultValue": null, "description": "", "name": "dragging", "required": true, "type": { "name": "boolean" } }, "targetPosition": { "defaultValue": null, "description": "", "name": "targetPosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } }, "sourcePosition": { "defaultValue": null, "description": "", "name": "sourcePosition", "required": false, "type": { "name": "enum", "value": [{ "value": "\"left\"" }, { "value": "\"top\"" }, { "value": "\"right\"" }, { "value": "\"bottom\"" }] } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/diagram/nodes/Nodes.tsx#UnknownNode"] = { docgenInfo: UnknownNode.__docgenInfo, name: "UnknownNode", path: "src/diagram/nodes/Nodes.tsx#UnknownNode" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css":
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css ***!
  \*****************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".xyflow-react-kie-diagram--node-containerNode-interactionRect {\n  pointer-events: stroke !important;\n  opacity: 0;\n  /* ⬇ Uncomment for debugging purposes:*/\n  /* stroke: purple;\n    opacity: 0.2; */\n}\n.xyflow-react-kie-diagram--node-containerNode-visibleRect {\n  pointer-events: none;\n}\n\n/* (begin) containerNodes */\n/* CONTAINER NODES HAVE A SPECIFIC SELECTION MECHANISM TO ALLOW EDITING EDGES INSIDE THEM */\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside {\n  pointer-events: none !important;\n  background: transparent;\n  box-shadow: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected) .xyflow-react-kie-diagram--node-shape {\n  filter: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside\n  .xyflow-react-kie-diagram--editable-node-name-input\n  span,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .xyflow-react-kie-diagram--info-node-panel,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .react-flow__resize-control div {\n  pointer-events: all !important;\n}\n\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected):hover\n  .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #006ba47b) !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside.selected:hover .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #004e77d6) !important;\n}\n\n/* (end) containerNodes */\n", "",{"version":3,"sources":["webpack://./../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css"],"names":[],"mappings":"AAAA;EACE,iCAAiC;EACjC,UAAU;EACV,uCAAuC;EACvC;mBACiB;AACnB;AACA;EACE,oBAAoB;AACtB;;AAEA,2BAA2B;AAC3B,2FAA2F;AAC3F;EACE,+BAA+B;EAC/B,uBAAuB;EACvB,2BAA2B;AAC7B;AACA;EACE,uBAAuB;AACzB;AACA;;;;;EAKE,8BAA8B;AAChC;;AAEA;;EAEE,qDAAqD;AACvD;AACA;EACE,qDAAqD;AACvD;;AAEA,yBAAyB","sourcesContent":[".xyflow-react-kie-diagram--node-containerNode-interactionRect {\n  pointer-events: stroke !important;\n  opacity: 0;\n  /* ⬇ Uncomment for debugging purposes:*/\n  /* stroke: purple;\n    opacity: 0.2; */\n}\n.xyflow-react-kie-diagram--node-containerNode-visibleRect {\n  pointer-events: none;\n}\n\n/* (begin) containerNodes */\n/* CONTAINER NODES HAVE A SPECIFIC SELECTION MECHANISM TO ALLOW EDITING EDGES INSIDE THEM */\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside {\n  pointer-events: none !important;\n  background: transparent;\n  box-shadow: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected) .xyflow-react-kie-diagram--node-shape {\n  filter: none !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside\n  .xyflow-react-kie-diagram--editable-node-name-input\n  span,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .xyflow-react-kie-diagram--info-node-panel,\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside .react-flow__resize-control div {\n  pointer-events: all !important;\n}\n\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside:not(.selected):hover\n  .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #006ba47b) !important;\n}\n.react-flow__node.xyflow-react-kie-diagram--containerNode--inside.selected:hover .xyflow-react-kie-diagram--node-shape {\n  filter: drop-shadow(2px 2px 3px #004e77d6) !important;\n}\n\n/* (end) containerNodes */\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css":
/*!***********************************************************!*\
  !*** ../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/.pnpm/style-loader@3.3.3_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_pnpm_style_loader_3_3_3_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }
  var p;
  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (a[p] !== b[p]) {
      return false;
    }
  }
  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (!a[p]) {
      return false;
    }
  }
  return true;
};
    var isNamedExport = !_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!./NodeSvgs.css */ "../../node_modules/.pnpm/css-loader@6.7.1_webpack@5.94.0_@swc+core@1.3.92_esbuild@0.18.20_webpack-cli@4.10.0_/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[8].use[1]!../xyflow-react-kie-diagram/dist/nodes/NodeSvgs.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_pnpm_css_loader_6_7_1_webpack_5_94_0_swc_core_1_3_92_esbuild_0_18_20_webpack_cli_4_10_0_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_8_use_1_NodeSvgs_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,