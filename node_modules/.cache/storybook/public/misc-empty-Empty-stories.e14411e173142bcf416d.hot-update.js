"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/reassignments/Reassignments.tsx":
/*!*************************************************************!*\
  !*** ./src/propertiesPanel/reassignments/Reassignments.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Reassignments: () => (/* binding */ Reassignments)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/Button.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Modal */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Modal/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Grid */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Grid/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/plus-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/times-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Bullseye */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Bullseye/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/EmptyState */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/EmptyState/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Title */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Title/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Dropdown */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Dropdown/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Reassignments_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reassignments.css */ "./src/propertiesPanel/reassignments/Reassignments.css");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextArea/TextArea */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextArea/TextArea.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/FormSelect/FormSelect */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/FormSelect/FormSelect.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/FormSelect/FormSelectOption */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/FormSelect/FormSelectOption.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form_Form__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/Form.js");





















function DropdownWithAdd(_ref) {
  let {
    items,
    setItems
  } = _ref;
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const [newItem, setNewItem] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");
  const [selectedItem, setSelectedItem] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  const handleAddItem = () => {
    if (newItem && !items.includes(newItem)) {
      setItems([...items, newItem]);
      setSelectedItem(newItem);
    }
    setNewItem("");
    setIsOpen(false);
  };
  const handleSelectItem = item => {
    setSelectedItem(item);
    setIsOpen(false);
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__.Dropdown, {
    toggle: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__.DropdownToggle, {
      onToggle: () => setIsOpen(!isOpen),
      children: selectedItem || "Select or add..."
    }),
    isOpen: isOpen,
    dropdownItems: [...items.map(item => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__.DropdownItem, {
      onClick: () => handleSelectItem(item),
      children: item
    }, item)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Dropdown__WEBPACK_IMPORTED_MODULE_5__.DropdownItem, {
      isDisabled: true,
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        style: {
          display: "flex",
          alignItems: "center",
          gap: "8px"
        },
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
          type: "text",
          placeholder: "Add new...",
          value: newItem,
          onChange: e => setNewItem(e.target.value),
          onKeyDown: e => {
            if (e.key === "Enter") handleAddItem();
          },
          style: {
            flex: 1,
            padding: "4px",
            borderRadius: "4px"
          }
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.Button, {
          variant: "link",
          onClick: handleAddItem,
          isDisabled: newItem.trim() === "",
          "aria-label": "Add new item",
          children: "\u2713"
        })]
      })
    }, "add-new")]
  });
}
const typeOptions = [{
  value: "NotStartedReassign",
  label: "Not Started"
}, {
  value: "NotCompletedReassign",
  label: "Not Completed"
}];
const periodUnits = [{
  value: "m",
  label: "minutes"
}, {
  value: "h",
  label: "hours"
}, {
  value: "d",
  label: "days"
}, {
  value: "M",
  label: "months"
}, {
  value: "y",
  label: "years"
}];
const entryStyle = {
  padding: "4px",
  margin: "8px",
  width: "calc(100% - 2 * 4px - 2 * 8px)"
};
function Reassignments(_ref2) {
  let {
    isOpen,
    onClose,
    element
  } = _ref2;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  const [reassignments, setReassignments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);
  const [hoveredIndex, setHoveredIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  const addReassignment = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {
    setReassignments([...reassignments, {
      users: "",
      groups: "",
      type: "NotStartedReassign",
      period: 0,
      periodUnit: "m"
    }]);
  }, [reassignments]);
  const removeReassignment = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(index => {
    setReassignments(reassignments.filter((_, i) => i !== index));
  }, [reassignments]);
  const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((index, propertyName, value) => {
    setReassignments(prevReassignments => {
      const updatedReassignments = [...prevReassignments];
      updatedReassignments[index] = {
        ...updatedReassignments[index],
        [propertyName]: value
      };
      return updatedReassignments;
    });
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    var _a, _b;
    if (!isOpen || !element) {
      return;
    }
    const extractedReassignments = (_b = (_a = element === null || element === void 0 ? void 0 : element.dataInputAssociation) === null || _a === void 0 ? void 0 : _a.filter(dataInputAssociation => {
      var _a, _b;
      return ((_a = dataInputAssociation.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text.includes("NotStartedReassign")) || ((_b = dataInputAssociation.targetRef) === null || _b === void 0 ? void 0 : _b.__$$text.includes("NotCompletedReassign"));
    })) === null || _b === void 0 ? void 0 : _b.flatMap(association => {
      var _a;
      const assignment = (_a = association.assignment) === null || _a === void 0 ? void 0 : _a[0];
      if (!assignment) {
        return [];
      }
      const reassignmentText = assignment.from.__$$text || "";
      const usersMatches = [...reassignmentText.matchAll(/users:([^|]*)/g)];
      const groupsMatches = [...reassignmentText.matchAll(/groups:([^\]]*)/g)];
      const periodMatches = [...reassignmentText.matchAll(/(\d+)([mhdMy])/g)];
      const users = usersMatches.map(match => match[1]);
      const groups = groupsMatches.map(match => match[1]);
      const periods = periodMatches.map(match => parseInt(match[1]));
      const periodUnits = periodMatches.map(match => match[2]);
      const reassignments = [];
      for (let i = 0; i < users.length; i++) {
        reassignments.push({
          users: users[i] || "",
          groups: groups[i] || "",
          type: association.targetRef.__$$text.includes("NotStartedReassign") ? "NotStartedReassign" : "NotCompletedReassign",
          period: periods[i] || 0,
          periodUnit: periodUnits[i] || "m"
        });
      }
      return reassignments;
    });
    setReassignments(extractedReassignments || []);
  }, [isOpen, element]);
  const handleSubmit = () => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_7__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_8__.visitFlowElementsAndArtifacts)(process, _ref3 => {
        let {
          element: e
        } = _ref3;
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var _k;
        if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
          (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_4__.setBpmn20Drools10MetaData)(e, "elementname", e["@_name"] || "");
          (_a = e.ioSpecification) !== null && _a !== void 0 ? _a : e.ioSpecification = {
            "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_9__.generateUuid)(),
            inputSet: [],
            outputSet: [],
            dataInput: []
          };
          (_b = (_k = e.ioSpecification).dataInput) !== null && _b !== void 0 ? _b : _k.dataInput = [];
          (_c = e.dataInputAssociation) !== null && _c !== void 0 ? _c : e.dataInputAssociation = [];
          e.ioSpecification.dataInput = (_d = e.ioSpecification.dataInput) === null || _d === void 0 ? void 0 : _d.filter(dataInput => {
            var _a, _b;
            return !((_a = dataInput["@_name"]) === null || _a === void 0 ? void 0 : _a.includes("NotStartedReassign")) && !((_b = dataInput["@_name"]) === null || _b === void 0 ? void 0 : _b.includes("NotCompletedReassign"));
          });
          if ((_g = (_f = (_e = e.ioSpecification) === null || _e === void 0 ? void 0 : _e.inputSet) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.dataInputRefs) {
            e.ioSpecification.inputSet[0].dataInputRefs = (_h = e.ioSpecification.inputSet[0].dataInputRefs) === null || _h === void 0 ? void 0 : _h.filter(dataInputRefs => {
              var _a;
              return !dataInputRefs.__$$text.includes("NotStartedReassign") && !((_a = dataInputRefs.__$$text) === null || _a === void 0 ? void 0 : _a.includes("NotCompletedReassign"));
            });
          }
          e.dataInputAssociation = (_j = e.dataInputAssociation) === null || _j === void 0 ? void 0 : _j.filter(dataInputAssociation => !dataInputAssociation.targetRef.__$$text.includes("NotStartedReassign") && !dataInputAssociation.targetRef.__$$text.includes("NotCompletedReassign"));
          reassignments.forEach(reassignment => {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
            let dataInput = (_b = (_a = e === null || e === void 0 ? void 0 : e.ioSpecification) === null || _a === void 0 ? void 0 : _a.dataInput) === null || _b === void 0 ? void 0 : _b.find(input => input["@_name"] === reassignment.type);
            if (!dataInput) {
              dataInput = {
                "@_id": `${e["@_id"]}_${reassignment.type}InputX`,
                "@_drools:dtype": "Object",
                "@_itemSubjectRef": `_${e["@_id"]}_${reassignment.type}InputX`,
                "@_name": reassignment.type
              };
              (_d = (_c = e === null || e === void 0 ? void 0 : e.ioSpecification) === null || _c === void 0 ? void 0 : _c.dataInput) === null || _d === void 0 ? void 0 : _d.push(dataInput);
            }
            let inputSet = (_e = e.ioSpecification) === null || _e === void 0 ? void 0 : _e.inputSet[0];
            if (!inputSet) {
              inputSet = {
                "@_id": `${e["@_id"]}_${reassignment.type}InputX`,
                dataInputRefs: [{
                  __$$text: `${e["@_id"]}_${reassignment.type}InputX`
                }]
              };
              (_f = e.ioSpecification) === null || _f === void 0 ? void 0 : _f.inputSet.push(inputSet);
            } else {
              (_h = (_g = e.ioSpecification) === null || _g === void 0 ? void 0 : _g.inputSet[0].dataInputRefs) === null || _h === void 0 ? void 0 : _h.push({
                __$$text: `${e["@_id"]}_${reassignment.type}InputX`
              });
            }
            let dataInputAssociation = (_j = e.dataInputAssociation) === null || _j === void 0 ? void 0 : _j.find(association => association.targetRef.__$$text === dataInput["@_id"]);
            if (!dataInputAssociation) {
              dataInputAssociation = {
                "@_id": `${e["@_id"]}_dataInputAssociation_${reassignment.type}`,
                targetRef: {
                  __$$text: dataInput["@_id"]
                },
                assignment: []
              };
              (_k = e.dataInputAssociation) === null || _k === void 0 ? void 0 : _k.push(dataInputAssociation);
            }
            const existingAssignment = (_l = dataInputAssociation === null || dataInputAssociation === void 0 ? void 0 : dataInputAssociation.assignment) === null || _l === void 0 ? void 0 : _l.find(assignment => assignment["@_id"] === `${e["@_id"]}_assignment_${reassignment.type}`);
            const newEntry = `users:${reassignment.users}|groups:${reassignment.groups}]@[${reassignment.period}${reassignment.periodUnit}`;
            if (existingAssignment) {
              const existingValues = new Set((_o = (_m = existingAssignment === null || existingAssignment === void 0 ? void 0 : existingAssignment.from) === null || _m === void 0 ? void 0 : _m.__$$text) === null || _o === void 0 ? void 0 : _o.split(" "));
              const newValues = newEntry.split(" ");
              const uniqueValues = [...existingValues, ...newValues].join(" ");
              existingAssignment.from.__$$text = uniqueValues;
            } else {
              (_p = dataInputAssociation === null || dataInputAssociation === void 0 ? void 0 : dataInputAssociation.assignment) === null || _p === void 0 ? void 0 : _p.push({
                "@_id": `${e["@_id"]}_assignment_${reassignment.type}`,
                from: {
                  "@_id": `${e["@_id"]}`,
                  __$$text: newEntry
                },
                to: {
                  "@_id": dataInput["@_id"],
                  __$$text: dataInput["@_id"]
                }
              });
            }
          });
        }
      });
    });
  };
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_10__.Modal, {
    className: "kie-bpmn-editor--reassignments--modal",
    "aria-labelledby": "Reassignments",
    title: "Reassignments",
    variant: _patternfly_react_core_dist_js_components_Modal__WEBPACK_IMPORTED_MODULE_10__.ModalVariant.large,
    isOpen: isOpen,
    onClose: onClose,
    children: reassignments.length > 0 ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form_Form__WEBPACK_IMPORTED_MODULE_11__.Form, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.Grid, {
        md: 12,
        style: {
          padding: "0 8px"
        },
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
          span: 3,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
            style: entryStyle,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
              children: "Users"
            })
          })
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
          span: 3,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
            style: entryStyle,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
              children: "Groups"
            })
          })
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
          span: 2,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
            style: entryStyle,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
              children: "Type"
            })
          })
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
          span: 3,
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
            style: entryStyle,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
              children: "Period"
            })
          })
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
          span: 1,
          style: {
            textAlign: "right"
          },
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.Button, {
            variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.ButtonVariant.plain,
            style: {
              paddingLeft: 0
            },
            onClick: addReassignment,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_13__.PlusCircleIcon, {
              color: "var(--pf-c-button--m-primary--BackgroundColor)"
            })
          })
        })]
      }), reassignments.map((entry, i) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.Grid, {
          md: 6,
          className: "kie-bpmn-editor--properties-panel--reassignment-entry",
          onMouseEnter: () => setHoveredIndex(i),
          onMouseLeave: () => setHoveredIndex(undefined),
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_14__.TextArea, {
              "aria-label": "users",
              autoFocus: true,
              style: entryStyle,
              type: "text",
              placeholder: "Users...",
              value: entry.users,
              onChange: e => handleInputChange(i, "users", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_14__.TextArea, {
              "aria-label": "groups",
              style: entryStyle,
              type: "text",
              placeholder: "Groups...",
              value: entry.groups,
              onChange: e => handleInputChange(i, "groups", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 2,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_15__.FormSelect, {
              "aria-label": "type",
              type: "text",
              value: entry.type,
              onChange: e => handleInputChange(i, "type", e),
              style: entryStyle,
              rows: 1,
              children: typeOptions.map(option => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_16__.FormSelectOption, {
                label: option.label,
                value: option.value
              }, option.label))
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 2,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
              style: {
                display: "flex",
                gap: "4px",
                alignItems: "center"
              },
              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input", {
                "aria-label": "period",
                style: entryStyle,
                type: "number",
                placeholder: "Enter value",
                value: entry.period,
                onChange: e => handleInputChange(i, "period", e.target.value)
              }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_15__.FormSelect, {
                "aria-label": "period unit",
                type: "text",
                value: entry.periodUnit,
                onChange: e => handleInputChange(i, "periodUnit", e),
                style: entryStyle,
                rows: 1,
                children: periodUnits.map(option => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_16__.FormSelectOption, {
                  label: option.label,
                  value: option.value
                }, option.label))
              })]
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_12__.GridItem, {
            span: 1,
            style: {
              textAlign: "right"
            },
            children: hoveredIndex === i && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.Button, {
              tabIndex: 9999,
              variant: _patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.ButtonVariant.plain,
              style: {
                paddingLeft: 0
              },
              onClick: () => removeReassignment(i),
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_17__.TimesIcon, {})
            })
          })]
        })
      }, i)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.Button, {
        onClick: handleSubmit,
        className: "kie-bpmn-editor--properties-panel--reassignment-submit-save-button",
        children: "Save"
      })]
    }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      className: "kie-bpmn-editor--reassignments--empty-state",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_18__.Bullseye, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_19__.EmptyState, {
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_20__.Title, {
            headingLevel: "h4",
            children: "No reassignments yet"
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_19__.EmptyStateBody, {
            children: "This represents the empty state for reassignments. You can add reassignments to get started."
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button_Button__WEBPACK_IMPORTED_MODULE_6__.Button, {
            variant: "primary",
            onClick: addReassignment,
            children: "Add reassignment"
          })]
        })
      })
    })
  });
}
try {
    // @ts-ignore
    Reassignments.displayName = "Reassignments";
    // @ts-ignore
    Reassignments.__docgenInfo = { "description": "", "displayName": "Reassignments", "props": { "isOpen": { "defaultValue": null, "description": "", "name": "isOpen", "required": true, "type": { "name": "boolean" } }, "onClose": { "defaultValue": null, "description": "", "name": "onClose", "required": true, "type": { "name": "() => void" } }, "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "{ __?: undefined; \"@_id\"?: string | undefined; documentation?: ({ __?: undefined; \"@_id\"?: string | undefined; \"@_textFormat\"?: string | undefined; __$$text?: string | undefined; } & { \"@_id\": string; })[] | undefined; ... 18 more ...; rendering?: ({ ...; } & { ...; })[] | undefined; } & { ...; } & { ...; }" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/reassignments/Reassignments.tsx#Reassignments"] = { docgenInfo: Reassignments.__docgenInfo, name: "Reassignments", path: "src/propertiesPanel/reassignments/Reassignments.tsx#Reassignments" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,