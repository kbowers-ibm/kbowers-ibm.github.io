"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx":
/*!****************************************************************************************!*\
  !*** ./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OnEntryAndExitScriptsFormSection: () => (/* binding */ OnEntryAndExitScriptsFormSection)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader */ "../xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_code_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/code-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/code-icon.js");
/* harmony import */ var _codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../codeInput/CodeInput */ "./src/propertiesPanel/codeInput/CodeInput.tsx");
/* harmony import */ var _OnEntryAndExitScriptsFormSection_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OnEntryAndExitScriptsFormSection.css */ "./src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.css");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");










function OnEntryAndExitScriptsFormSection(_ref) {
  let {
    element
  } = _ref;
  var _a, _b, _c, _d, _e, _f;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const [isExpanded, setExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.FormSection, {
      title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_3__.SectionHeader, {
        expands: true,
        isSectionExpanded: isExpanded,
        toogleSectionExpanded: () => setExpanded(prev => !prev),
        icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_code_icon__WEBPACK_IMPORTED_MODULE_7__.CodeIcon, {
          width: 16,
          height: 36,
          style: {
            marginLeft: "12px"
          }
        }),
        title: "onEntry / onExit"
      }),
      children: isExpanded && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.FormSection, {
          style: {
            paddingLeft: "20px",
            marginTop: "20px",
            gap: 0
          },
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_4__.CodeInput, {
            label: "onEntry",
            languages: ["Java"],
            value: ((_c = (_b = (_a = element === null || element === void 0 ? void 0 : element.extensionElements) === null || _a === void 0 ? void 0 : _a["drools:onEntry-script"]) === null || _b === void 0 ? void 0 : _b["drools:script"]) === null || _c === void 0 ? void 0 : _c.__$$text) || undefined,
            onChange: newValue => {
              bpmnEditorStoreApi.setState(s => {
                const {
                  process
                } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                  definitions: s.bpmn.model.definitions
                });
                (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_9__.visitFlowElementsAndArtifacts)(process, _ref2 => {
                  let {
                    element: e
                  } = _ref2;
                  var _a, _b;
                  var _c;
                  if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
                    (_a = e.extensionElements) !== null && _a !== void 0 ? _a : e.extensionElements = {};
                    (_b = (_c = e.extensionElements)["drools:onEntry-script"]) !== null && _b !== void 0 ? _b : _c["drools:onEntry-script"] = {
                      "@_scriptFormat": "",
                      "drools:script": {
                        __$$text: ""
                      }
                    };
                    e.extensionElements["drools:onEntry-script"]["@_scriptFormat"] = "";
                    e.extensionElements["drools:onEntry-script"]["drools:script"].__$$text = newValue;
                  }
                });
                s = {
                  ...s
                };
              });
            }
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br", {}), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_codeInput_CodeInput__WEBPACK_IMPORTED_MODULE_4__.CodeInput, {
            label: "onExit",
            languages: ["Java"],
            value: (_f = (_e = (_d = element === null || element === void 0 ? void 0 : element.extensionElements) === null || _d === void 0 ? void 0 : _d["drools:onEntry-script"]) === null || _e === void 0 ? void 0 : _e["drools:script"]) === null || _f === void 0 ? void 0 : _f.__$$text,
            onChange: newValue => {
              bpmnEditorStoreApi.setState(s => {
                var _a, _b;
                var _c;
                const {
                  process
                } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_8__.addOrGetProcessAndDiagramElements)({
                  definitions: s.bpmn.model.definitions
                });
                console.log("Before Update:", JSON.stringify(process.extensionElements, null, 2));
                (_a = process.extensionElements) !== null && _a !== void 0 ? _a : process.extensionElements = {};
                (_b = (_c = process.extensionElements)["drools:onExit-script"]) !== null && _b !== void 0 ? _b : _c["drools:onExit-script"] = {
                  "@_scriptFormat": "",
                  "drools:script": {
                    __$$text: ""
                  }
                };
                if (!process.extensionElements["drools:onExit-script"]["drools:script"]) {
                  process.extensionElements["drools:onExit-script"]["drools:script"] = {
                    __$$text: ""
                  };
                }
                console.log("After Ensuring Structure:", JSON.stringify(process.extensionElements, null, 2));
                process.extensionElements["drools:onExit-script"]["drools:script"].__$$text = newValue;
                console.log("After Update:", JSON.stringify(process.extensionElements, null, 2));
              });
            }
          })]
        })
      })
    })
  });
}
try {
    // @ts-ignore
    OnEntryAndExitScriptsFormSection.displayName = "OnEntryAndExitScriptsFormSection";
    // @ts-ignore
    OnEntryAndExitScriptsFormSection.__docgenInfo = { "description": "", "displayName": "OnEntryAndExitScriptsFormSection", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithOnEntryAndExitScripts" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx#OnEntryAndExitScriptsFormSection"] = { docgenInfo: OnEntryAndExitScriptsFormSection.__docgenInfo, name: "OnEntryAndExitScriptsFormSection", path: "src/propertiesPanel/onEntryAndExitScripts/OnEntryAndExitScriptsFormSection.tsx#OnEntryAndExitScriptsFormSection" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,