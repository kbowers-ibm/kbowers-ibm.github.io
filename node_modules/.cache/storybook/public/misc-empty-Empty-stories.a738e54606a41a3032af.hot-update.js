"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/assignments/AssignmentsFormSection.tsx":
/*!********************************************************************!*\
  !*** ./src/propertiesPanel/assignments/AssignmentsFormSection.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AssignmentList: () => (/* binding */ AssignmentList),
/* harmony export */   AssignmentsFormSection: () => (/* binding */ AssignmentsFormSection),
/* harmony export */   BidirectionalAssignmentsFormSection: () => (/* binding */ BidirectionalAssignmentsFormSection),
/* harmony export */   InputOnlyAssociationFormSection: () => (/* binding */ InputOnlyAssociationFormSection),
/* harmony export */   OutputOnlyAssociationFormSection: () => (/* binding */ OutputOnlyAssociationFormSection)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader */ "../xyflow-react-kie-diagram/dist/propertiesPanel/SectionHeader.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Button */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Button/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/edit-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/edit-icon.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Modal_Modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Modal/Modal */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Modal/Modal.js");
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _AssignmentsFormSection_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AssignmentsFormSection.css */ "./src/propertiesPanel/assignments/AssignmentsFormSection.css");
/* harmony import */ var _patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/EmptyState */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/EmptyState/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Title */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Title/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Bullseye */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Bullseye/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @patternfly/react-core/dist/js/layouts/Grid */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/layouts/Grid/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/times-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_eye_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/eye-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/eye-icon.js");
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @patternfly/react-icons/dist/js/icons/plus-circle-icon */ "../../node_modules/.pnpm/@patternfly+react-icons@4.93.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-icons/dist/js/icons/plus-circle-icon.js");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Divider */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Divider/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @kie-tools/bpmn-marshaller/dist/drools-extension-metaData */ "../bpmn-marshaller/dist/drools-extension-metaData.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextArea/TextArea */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextArea/TextArea.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/FormSelect/FormSelect */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/FormSelect/FormSelect.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/FormSelect/FormSelectOption */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/FormSelect/FormSelectOption.js");
























const dataType = [{
  value: "Custom",
  label: "Custom..."
}, {
  value: "Boolean",
  label: "Boolean"
}, {
  value: "Float",
  label: "Float"
}, {
  value: "Integer",
  label: "Integer"
}, {
  value: "Object",
  label: "Object"
}, {
  value: "String",
  label: "String"
}];
const entryStyle = {
  padding: "4px",
  margin: "8px",
  width: "calc(100% - 2 * 4px - 2 * 8px)"
};
const blacklistedNames = ["TaskName", "Skippable", "NotStartedReassign", "NotCompletedReassign", "NotStartedNotify", "NotCompletedNotify"];
function AssignmentsFormSection(_ref) {
  let {
    sectionLabel,
    children
  } = _ref;
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const [showAssignmentsModal, setShowAssignmentsModal] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.FormSection, {
      title: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_kie_tools_xyflow_react_kie_diagram_dist_propertiesPanel_SectionHeader__WEBPACK_IMPORTED_MODULE_2__.SectionHeader, {
        expands: "modal",
        icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
          style: {
            marginLeft: "12px",
            width: "16px",
            height: "36px",
            lineHeight: "36px"
          },
          children: "⇆"
        }),
        title: "Assignments",
        toogleSectionExpanded: () => setShowAssignmentsModal(true),
        action: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
          title: "Manage",
          variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
          onClick: () => setShowAssignmentsModal(true),
          style: {
            paddingBottom: 0,
            paddingTop: 0
          },
          children: isReadOnly ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_eye_icon__WEBPACK_IMPORTED_MODULE_8__.EyeIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_edit_icon__WEBPACK_IMPORTED_MODULE_9__.EditIcon, {})
        })
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Modal_Modal__WEBPACK_IMPORTED_MODULE_10__.Modal, {
      title: "Assignments",
      className: "kie-bpmn-editor--assignments--modal",
      "aria-labelledby": "Assignments",
      variant: _patternfly_react_core_dist_js_components_Modal_Modal__WEBPACK_IMPORTED_MODULE_10__.ModalVariant.large,
      isOpen: showAssignmentsModal,
      onClose: () => setShowAssignmentsModal(false),
      children: children
    })]
  });
}
function BidirectionalAssignmentsFormSection(_ref2) {
  let {
    element
  } = _ref2;
  var _a, _b;
  const inputCount = (_a = element === null || element === void 0 ? void 0 : element.dataInputAssociation) === null || _a === void 0 ? void 0 : _a.filter(association => !blacklistedNames.some(blacklistedNames => {
    var _a;
    return (_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text.includes(blacklistedNames);
  })).length;
  const outputCount = (_b = element === null || element === void 0 ? void 0 : element.dataOutputAssociation) === null || _b === void 0 ? void 0 : _b.filter(association => !blacklistedNames.some(blacklistedNames => {
    var _a;
    return (_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text.includes(blacklistedNames);
  })).length;
  const sectionLabel = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {
    if (inputCount && inputCount > 0 && outputCount && outputCount > 0) {
      return ` (in: ${inputCount}, out: ${outputCount})`;
    } else if (inputCount && inputCount > 0) {
      return ` (in: ${inputCount}, out: -)`;
    } else if (outputCount && outputCount > 0) {
      return ` (in: -, out: ${outputCount})`;
    } else {
      return "";
    }
  }, [inputCount, outputCount]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(AssignmentsFormSection, {
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      className: "kie-bpmn-editor--assignments--modal-section",
      style: {
        height: "50%"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentList, {
        section: "input",
        element: element
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      className: "kie-bpmn-editor--assignments--modal-section",
      style: {
        height: "50%"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentList, {
        section: "output",
        element: element
      })
    })]
  });
}
function InputOnlyAssociationFormSection(_ref3) {
  let {
    element
  } = _ref3;
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentsFormSection, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      className: "kie-bpmn-editor--assignments--modal-section",
      style: {
        height: "100%"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentList, {
        section: "input",
        element: element
      })
    })
  });
}
function OutputOnlyAssociationFormSection(_ref4) {
  let {
    element
  } = _ref4;
  var _a, _b;
  const outputCount = (_b = (_a = element.dataOutputAssociation) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
  const sectionLabel = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {
    if (outputCount > 0) {
      return ` (out: ${outputCount})`;
    } else {
      return ` (out: -)`;
    }
  }, [outputCount]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentsFormSection, {
    sectionLabel: sectionLabel,
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
      className: "kie-bpmn-editor--assignments--modal-section",
      style: {
        height: "100%"
      },
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AssignmentList, {
        section: "output",
        element: element
      })
    })
  });
}
function AssignmentList(_ref5) {
  let {
    section,
    element
  } = _ref5;
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_1__.useBpmnEditorStoreApi)();
  const isReadOnly = bpmnEditorStoreApi(s => s.settings.isReadOnly);
  const [inputAssignments, setInputAssignments] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);
  const [outputAssignments, setOutputAssignments] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);
  const [hoveredIndex, setHoveredIndex] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(undefined);
  const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((index, propertyName, value) => {
    if (section === "input") {
      setInputAssignments(prevInputAssignments => {
        const updatedInputAssignments = [...prevInputAssignments];
        updatedInputAssignments[index] = {
          ...updatedInputAssignments[index],
          [propertyName]: [value]
        };
        return updatedInputAssignments;
      });
    } else {
      setOutputAssignments(prevOutputAssignments => {
        const updatedOutputAssignments = [...prevOutputAssignments];
        updatedOutputAssignments[index] = {
          ...updatedOutputAssignments[index],
          [propertyName]: [value]
        };
        return updatedOutputAssignments;
      });
    }
  }, [section]);
  const {
    title,
    associationsPropName,
    lastColumnLabel,
    entryTitle
  } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => {
    if (section === "input") {
      return {
        title: "Inputs",
        entryTitle: "Input",
        associationsPropName: "dataInputAssociation",
        lastColumnLabel: "Source"
      };
    } else {
      return {
        title: "Outputs",
        entryTitle: "Output",
        associationsPropName: "dataOutputAssociation",
        lastColumnLabel: "Target"
      };
    }
  }, [section]);
  const titleComponent = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_11__.Title, {
    headingLevel: "h2",
    children: title
  }), [title]);
  const addAssignment = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    if (section === "input") {
      setInputAssignments([...inputAssignments, {
        name: "",
        dataType: "",
        value: ""
      }]);
    } else {
      setOutputAssignments([...outputAssignments, {
        name: "",
        dataType: "",
        value: ""
      }]);
    }
  }, [inputAssignments, outputAssignments, section]);
  const removeAssignment = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(index => {
    if (section === "input") {
      setInputAssignments(inputAssignments.filter((_, i) => i !== index));
    } else {
      setOutputAssignments(outputAssignments.filter((_, i) => i !== index));
    }
  }, [inputAssignments, outputAssignments, section]);
  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {
    var _a, _b, _c, _d, _e, _f;
    if (!element) {
      return;
    }
    if (element.__$$element === "callActivity" || element.__$$element === "businessRuleTask" || element.__$$element === "userTask" || element.__$$element === "serviceTask" || element.__$$element === "scriptTask") {
      if (section === "input") {
        const extractedInputAssignments = (_b = (_a = element === null || element === void 0 ? void 0 : element.dataInputAssociation) === null || _a === void 0 ? void 0 : _a.filter(association => !blacklistedNames.some(blacklistedNames => {
          var _a;
          return (_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text.includes(blacklistedNames);
        }))) === null || _b === void 0 ? void 0 : _b.flatMap(association => {
          var _a, _b, _c;
          const assignment = (_a = association.assignment) === null || _a === void 0 ? void 0 : _a[0];
          if (!assignment) {
            return [];
          }
          const value = assignment.from.__$$text || "";
          const dataInput = (_c = (_b = element.ioSpecification) === null || _b === void 0 ? void 0 : _b.dataInput) === null || _c === void 0 ? void 0 : _c.find(input => {
            var _a;
            return input["@_id"] === ((_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text);
          });
          const name = (dataInput === null || dataInput === void 0 ? void 0 : dataInput["@_name"]) || "";
          const dataType = (dataInput === null || dataInput === void 0 ? void 0 : dataInput["@_drools:dtype"]) || "";
          return {
            name: name,
            dataType: dataType,
            value: value
          };
        });
        setInputAssignments(extractedInputAssignments || []);
      }
      if (section === "output") {
        const extractedOutputAssignments = (_d = (_c = element === null || element === void 0 ? void 0 : element.dataOutputAssociation) === null || _c === void 0 ? void 0 : _c.filter(association => {
          var _a, _b, _c, _d, _e, _f;
          return !((_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text.includes("TaskName")) && !((_b = association.targetRef) === null || _b === void 0 ? void 0 : _b.__$$text.includes("Skippable")) && !((_c = association.targetRef) === null || _c === void 0 ? void 0 : _c.__$$text.includes("NotStartedReassign")) && !((_d = association.targetRef) === null || _d === void 0 ? void 0 : _d.__$$text.includes("NotCompletedReassign")) && !((_e = association.targetRef) === null || _e === void 0 ? void 0 : _e.__$$text.includes("NotStartedNotify")) && !((_f = association.targetRef) === null || _f === void 0 ? void 0 : _f.__$$text.includes("NotCompletedNotify"));
        })) === null || _d === void 0 ? void 0 : _d.flatMap(association => {
          var _a, _b, _c;
          const assignment = (_a = association.assignment) === null || _a === void 0 ? void 0 : _a[0];
          if (!assignment) {
            return [];
          }
          const value = assignment.to.__$$text || "";
          const dataOutput = (_c = (_b = element.ioSpecification) === null || _b === void 0 ? void 0 : _b.dataOutput) === null || _c === void 0 ? void 0 : _c.find(output => {
            var _a;
            return output["@_id"] === ((_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text);
          });
          const name = (dataOutput === null || dataOutput === void 0 ? void 0 : dataOutput["@_name"]) || "";
          const dataType = (dataOutput === null || dataOutput === void 0 ? void 0 : dataOutput["@_drools:dtype"]) || "";
          return {
            name: name,
            dataType: dataType,
            value: value
          };
        });
        setOutputAssignments(extractedOutputAssignments || []);
      }
    } else if (element.__$$element === "endEvent" || element.__$$element === "intermediateThrowEvent") {
      const extractedInputAssignments = (_e = element === null || element === void 0 ? void 0 : element.dataInputAssociation) === null || _e === void 0 ? void 0 : _e.flatMap(association => {
        var _a, _b;
        const assignment = (_a = association.assignment) === null || _a === void 0 ? void 0 : _a[0];
        if (!assignment) {
          return [];
        }
        const value = assignment.from.__$$text || "";
        const dataInput = (_b = element.dataInput) === null || _b === void 0 ? void 0 : _b.find(input => {
          var _a;
          return input["@_id"] === ((_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text);
        });
        const name = (dataInput === null || dataInput === void 0 ? void 0 : dataInput["@_name"]) || "";
        const dataType = (dataInput === null || dataInput === void 0 ? void 0 : dataInput["@_drools:dtype"]) || "";
        return {
          name: name,
          dataType: dataType,
          value: value
        };
      });
      setInputAssignments(extractedInputAssignments || []);
    } else if (element.__$$element === "startEvent" || element.__$$element === "intermediateCatchEvent" || element.__$$element === "boundaryEvent") {
      const extractedOutputAssignments = (_f = element === null || element === void 0 ? void 0 : element.dataOutputAssociation) === null || _f === void 0 ? void 0 : _f.flatMap(association => {
        var _a, _b;
        const assignment = (_a = association.assignment) === null || _a === void 0 ? void 0 : _a[0];
        if (!assignment) {
          return [];
        }
        const value = assignment.to.__$$text || "";
        const dataOutput = (_b = element.dataOutput) === null || _b === void 0 ? void 0 : _b.find(output => {
          var _a;
          return output["@_id"] === ((_a = association.targetRef) === null || _a === void 0 ? void 0 : _a.__$$text);
        });
        const name = (dataOutput === null || dataOutput === void 0 ? void 0 : dataOutput["@_name"]) || "";
        const dataType = (dataOutput === null || dataOutput === void 0 ? void 0 : dataOutput["@_drools:dtype"]) || "";
        return {
          name: name,
          dataType: dataType,
          value: value
        };
      });
      setOutputAssignments(extractedOutputAssignments || []);
    }
  }, [element, section]);
  const handleSubmitForNodesWithInputAndOutputAssignments = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(e => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;
    (0,_kie_tools_bpmn_marshaller_dist_drools_extension_metaData__WEBPACK_IMPORTED_MODULE_5__.setBpmn20Drools10MetaData)(e, "elementname", e["@_name"] || "");
    (_a = e.ioSpecification) !== null && _a !== void 0 ? _a : e.ioSpecification = {
      "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_12__.generateUuid)(),
      inputSet: [],
      outputSet: [],
      dataInput: [],
      dataOutput: []
    };
    (_b = e.dataInputAssociation) !== null && _b !== void 0 ? _b : e.dataInputAssociation = [];
    (_c = e.dataOutputAssociation) !== null && _c !== void 0 ? _c : e.dataOutputAssociation = [];
    if (section === "input") {
      e.ioSpecification.dataInput = (_e = (_d = e.ioSpecification) === null || _d === void 0 ? void 0 : _d.dataInput) === null || _e === void 0 ? void 0 : _e.filter(dataInput => {
        var _a, _b;
        return ((_a = dataInput["@_name"]) === null || _a === void 0 ? void 0 : _a.includes("NotStartedReassign")) || ((_b = dataInput["@_name"]) === null || _b === void 0 ? void 0 : _b.includes("NotCompletedReassign"));
      });
      if ((_h = (_g = (_f = e.ioSpecification) === null || _f === void 0 ? void 0 : _f.inputSet) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.dataInputRefs) {
        e.ioSpecification.inputSet[0].dataInputRefs = (_k = (_j = e.ioSpecification) === null || _j === void 0 ? void 0 : _j.inputSet[0].dataInputRefs) === null || _k === void 0 ? void 0 : _k.filter(dataInputRefs => {
          var _a;
          return dataInputRefs.__$$text.includes("NotStartedReassign") || ((_a = dataInputRefs.__$$text) === null || _a === void 0 ? void 0 : _a.includes("NotCompletedReassign"));
        });
      }
      e.dataInputAssociation = (_l = e.dataInputAssociation) === null || _l === void 0 ? void 0 : _l.filter(dataInputAssociation => dataInputAssociation.targetRef.__$$text.includes("NotStartedReassign") || dataInputAssociation.targetRef.__$$text.includes("NotCompletedReassign"));
      inputAssignments.forEach((assignment, index) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        let dataInput = (_b = (_a = e.ioSpecification) === null || _a === void 0 ? void 0 : _a.dataInput) === null || _b === void 0 ? void 0 : _b[index];
        if (!dataInput) {
          dataInput = {
            "@_id": `${e["@_id"]}_${assignment.name}InputX`,
            "@_drools:dtype": assignment.dataType,
            "@_itemSubjectRef": `_${e["@_id"]}_${assignment.name}InputXItem`,
            "@_name": assignment.name
          };
          (_d = (_c = e.ioSpecification) === null || _c === void 0 ? void 0 : _c.dataInput) === null || _d === void 0 ? void 0 : _d.push(dataInput);
        }
        let inputSet = (_e = e.ioSpecification) === null || _e === void 0 ? void 0 : _e.inputSet[0];
        if (!inputSet) {
          inputSet = {
            "@_id": `${e["@_id"]}_${assignment.name}InputX`,
            dataInputRefs: [{
              __$$text: `${e["@_id"]}_${assignment.name}InputX`
            }]
          };
          (_f = e.ioSpecification) === null || _f === void 0 ? void 0 : _f.inputSet.push(inputSet);
        } else {
          (_h = (_g = e.ioSpecification) === null || _g === void 0 ? void 0 : _g.inputSet[0].dataInputRefs) === null || _h === void 0 ? void 0 : _h.push({
            __$$text: `${e["@_id"]}_${assignment.name}InputX`
          });
        }
        let dataInputAssociation = (_j = e.dataInputAssociation) === null || _j === void 0 ? void 0 : _j.find(association => association.targetRef.__$$text === dataInput["@_id"]);
        if (!dataInputAssociation) {
          dataInputAssociation = {
            "@_id": `${e["@_id"]}_dataInputAssociation_${assignment.name}`,
            targetRef: {
              __$$text: dataInput["@_id"]
            },
            assignment: []
          };
          (_k = e.dataInputAssociation) === null || _k === void 0 ? void 0 : _k.push(dataInputAssociation);
        }
        dataInputAssociation.assignment = [{
          "@_id": `${e["@_id"]}_assignment_${assignment.name}`,
          from: {
            "@_id": `${e["@_id"]}`,
            __$$text: assignment.value
          },
          to: {
            "@_id": dataInput["@_id"],
            __$$text: dataInput["@_id"]
          }
        }];
      });
    } else if (section === "output") {
      e.ioSpecification.dataOutput = (_o = (_m = e.ioSpecification) === null || _m === void 0 ? void 0 : _m.dataOutput) === null || _o === void 0 ? void 0 : _o.filter(dataOutput => {
        var _a, _b;
        return ((_a = dataOutput["@_name"]) === null || _a === void 0 ? void 0 : _a.includes("NotStartedReassign")) || ((_b = dataOutput["@_name"]) === null || _b === void 0 ? void 0 : _b.includes("NotCompletedReassign"));
      });
      if ((_r = (_q = (_p = e.ioSpecification) === null || _p === void 0 ? void 0 : _p.outputSet) === null || _q === void 0 ? void 0 : _q[0]) === null || _r === void 0 ? void 0 : _r.dataOutputRefs) {
        e.ioSpecification.outputSet[0].dataOutputRefs = (_t = (_s = e.ioSpecification) === null || _s === void 0 ? void 0 : _s.outputSet[0].dataOutputRefs) === null || _t === void 0 ? void 0 : _t.filter(dataOutputRefs => {
          var _a;
          return dataOutputRefs.__$$text.includes("NotStartedReassign") || ((_a = dataOutputRefs.__$$text) === null || _a === void 0 ? void 0 : _a.includes("NotCompletedReassign"));
        });
      }
      e.dataOutputAssociation = (_u = e.dataOutputAssociation) === null || _u === void 0 ? void 0 : _u.filter(dataOutputAssociation => dataOutputAssociation.targetRef.__$$text.includes("NotStartedReassign") || dataOutputAssociation.targetRef.__$$text.includes("NotCompletedReassign"));
      outputAssignments.forEach((assignment, index) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        let dataOutput = (_b = (_a = e.ioSpecification) === null || _a === void 0 ? void 0 : _a.dataOutput) === null || _b === void 0 ? void 0 : _b[index];
        if (!dataOutput) {
          dataOutput = {
            "@_id": `${e["@_id"]}_${assignment.name}OutputX`,
            "@_drools:dtype": assignment.dataType,
            "@_itemSubjectRef": `_${e["@_id"]}_${assignment.name}OutputXItem`,
            "@_name": assignment.name
          };
          (_d = (_c = e.ioSpecification) === null || _c === void 0 ? void 0 : _c.dataOutput) === null || _d === void 0 ? void 0 : _d.push(dataOutput);
        }
        let outputSet = (_e = e.ioSpecification) === null || _e === void 0 ? void 0 : _e.outputSet[0];
        if (!outputSet) {
          outputSet = {
            "@_id": `${e["@_id"]}_${assignment.name}OutputX`,
            dataOutputRefs: [{
              __$$text: `${e["@_id"]}_${assignment.name}OutputX`
            }]
          };
          (_f = e.ioSpecification) === null || _f === void 0 ? void 0 : _f.outputSet.push(outputSet);
        } else {
          (_h = (_g = e.ioSpecification) === null || _g === void 0 ? void 0 : _g.outputSet[0].dataOutputRefs) === null || _h === void 0 ? void 0 : _h.push({
            __$$text: `${e["@_id"]}_${assignment.name}OutputX`
          });
        }
        let dataOutputAssociation = (_j = e.dataOutputAssociation) === null || _j === void 0 ? void 0 : _j.find(association => association.targetRef.__$$text === dataOutput["@_id"]);
        if (!dataOutputAssociation) {
          dataOutputAssociation = {
            "@_id": `${e["@_id"]}_dataOutputAssociation_${assignment.name}`,
            targetRef: {
              __$$text: dataOutput["@_id"]
            },
            assignment: []
          };
          (_k = e.dataOutputAssociation) === null || _k === void 0 ? void 0 : _k.push(dataOutputAssociation);
        }
        dataOutputAssociation.assignment = [{
          "@_id": `${e["@_id"]}_assignment_${assignment.name}`,
          from: {
            "@_id": dataOutput["@_id"],
            __$$text: dataOutput["@_id"]
          },
          to: {
            "@_id": `${e["@_id"]}`,
            __$$text: assignment.value
          }
        }];
      });
    }
  }, [inputAssignments, outputAssignments, section]);
  const handleSubmitForNodesWithInputAssignments = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(e => {
    e.dataInputAssociation = [];
    e.dataInput = [];
    inputAssignments.forEach((assignment, index) => {
      var _a, _b, _c, _d;
      let dataInput = (_a = e.dataInput) === null || _a === void 0 ? void 0 : _a[index];
      if (!dataInput) {
        dataInput = {
          "@_id": `${e["@_id"]}_${assignment.name}InputX`,
          "@_drools:dtype": assignment.dataType,
          "@_itemSubjectRef": `_${e["@_id"]}_${assignment.name}InputXItem`,
          "@_name": assignment.name
        };
        (_b = e.dataInput) === null || _b === void 0 ? void 0 : _b.push(dataInput);
      }
      let dataInputAssociation = (_c = e.dataInputAssociation) === null || _c === void 0 ? void 0 : _c.find(association => association.targetRef.__$$text === dataInput["@_id"]);
      if (!dataInputAssociation) {
        dataInputAssociation = {
          "@_id": `${e["@_id"]}_dataInputAssociation_${assignment.name}`,
          targetRef: {
            __$$text: dataInput["@_id"]
          },
          assignment: []
        };
        (_d = e.dataInputAssociation) === null || _d === void 0 ? void 0 : _d.push(dataInputAssociation);
      }
      dataInputAssociation.assignment = [{
        "@_id": `${e["@_id"]}_assignment_${assignment.name}`,
        from: {
          "@_id": `${e["@_id"]}`,
          __$$text: assignment.value
        },
        to: {
          "@_id": dataInput["@_id"],
          __$$text: dataInput["@_id"]
        }
      }];
    });
  }, [inputAssignments]);
  const handleSubmitForNodesWithOutputAssignments = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(e => {
    e.dataOutputAssociation = [];
    e.dataOutput = [];
    outputAssignments.forEach((assignment, index) => {
      var _a, _b, _c, _d;
      let dataOutput = (_a = e.dataOutput) === null || _a === void 0 ? void 0 : _a[index];
      if (!dataOutput) {
        dataOutput = {
          "@_id": `${e["@_id"]}_${assignment.name}OutputX`,
          "@_drools:dtype": assignment.dataType,
          "@_itemSubjectRef": `_${e["@_id"]}_${assignment.name}OutputXItem`,
          "@_name": assignment.name
        };
        (_b = e.dataOutput) === null || _b === void 0 ? void 0 : _b.push(dataOutput);
      }
      let dataOutputAssociation = (_c = e.dataOutputAssociation) === null || _c === void 0 ? void 0 : _c.find(association => association.targetRef.__$$text === dataOutput["@_id"]);
      if (!dataOutputAssociation) {
        dataOutputAssociation = {
          "@_id": `${e["@_id"]}_dataOutputAssociation_${assignment.name}`,
          targetRef: {
            __$$text: dataOutput["@_id"]
          },
          assignment: []
        };
        (_d = e.dataOutputAssociation) === null || _d === void 0 ? void 0 : _d.push(dataOutputAssociation);
      }
      dataOutputAssociation.assignment = [{
        "@_id": `${e["@_id"]}_assignment_${assignment.name}`,
        from: {
          "@_id": dataOutput["@_id"],
          __$$text: dataOutput["@_id"]
        },
        to: {
          "@_id": `${e["@_id"]}`,
          __$$text: assignment.value
        }
      }];
    });
  }, [outputAssignments]);
  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)(() => {
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_13__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_14__.visitFlowElementsAndArtifacts)(process, _ref6 => {
        let {
          element: e
        } = _ref6;
        if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
          if (element.__$$element === "callActivity" || element.__$$element === "businessRuleTask" || element.__$$element === "userTask" || element.__$$element === "serviceTask" || element.__$$element === "scriptTask") {
            handleSubmitForNodesWithInputAndOutputAssignments(e);
          } else if (element.__$$element === "endEvent" || element.__$$element === "intermediateThrowEvent") {
            handleSubmitForNodesWithInputAssignments(e);
          } else if (element.__$$element === "startEvent" || element.__$$element === "intermediateCatchEvent" || element.__$$element === "boundaryEvent") {
            handleSubmitForNodesWithOutputAssignments(e);
          }
        }
      });
    });
  }, [bpmnEditorStoreApi, element, handleSubmitForNodesWithInputAndOutputAssignments, handleSubmitForNodesWithInputAssignments, handleSubmitForNodesWithOutputAssignments]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: (inputAssignments.length > 0 || outputAssignments.length > 0) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_6__.Form, {
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
        style: {
          position: "sticky",
          top: "0",
          backdropFilter: "blur(8px)"
        },
        children: [titleComponent, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Divider__WEBPACK_IMPORTED_MODULE_15__.Divider, {
          style: {
            margin: "8px 0"
          },
          inset: {
            default: "insetMd"
          }
        }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
          style: {
            padding: "0 8px"
          },
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.Grid, {
            md: 6,
            style: {
              alignItems: "center"
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
              span: 5,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
                style: entryStyle,
                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                  children: "Name"
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
              span: 3,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
                style: entryStyle,
                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                  children: "Data Type"
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
              span: 3,
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
                style: entryStyle,
                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b", {
                  children: lastColumnLabel
                })
              })
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
              span: 1,
              style: {
                textAlign: "right"
              },
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
                variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
                style: {
                  paddingLeft: 0
                },
                onClick: addAssignment,
                children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_plus_circle_icon__WEBPACK_IMPORTED_MODULE_17__.PlusCircleIcon, {
                  color: "var(--pf-c-button--m-primary--BackgroundColor)"
                })
              })
            })]
          })
        })]
      }), section === "input" && inputAssignments.map((entry, i) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.Grid, {
          md: 6,
          className: "kie-bpmn-editor--properties-panel--assignment-entry",
          onMouseEnter: () => setHoveredIndex(i),
          onMouseLeave: () => setHoveredIndex(undefined),
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 5,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_18__.TextArea, {
              "aria-label": "name",
              autoFocus: true,
              style: entryStyle,
              type: "text",
              placeholder: "Name...",
              value: entry.name,
              onChange: e => handleInputChange(i, "name", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_19__.FormSelect, {
              "aria-label": "data type",
              type: "text",
              value: entry.dataType,
              onChange: e => handleInputChange(i, "dataType", e),
              style: entryStyle,
              rows: 1,
              children: dataType.map(option => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_20__.FormSelectOption, {
                label: option.label,
                value: option.value
              }, option.label))
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_18__.TextArea, {
              "aria-label": "value",
              style: entryStyle,
              type: "text",
              placeholder: `${lastColumnLabel}...`,
              value: entry.value,
              onChange: e => handleInputChange(i, "value", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 1,
            style: {
              textAlign: "right"
            },
            children: hoveredIndex === i && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
              tabIndex: 9999,
              variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
              style: {
                paddingLeft: 0
              },
              onClick: () => removeAssignment(i),
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_21__.TimesIcon, {})
            })
          })]
        })
      }, i)), section === "output" && outputAssignments.map((entry, i) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          padding: "0 8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.Grid, {
          md: 6,
          className: "kie-bpmn-editor--properties-panel--assignment-entry",
          onMouseEnter: () => setHoveredIndex(i),
          onMouseLeave: () => setHoveredIndex(undefined),
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 5,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_18__.TextArea, {
              "aria-label": "name",
              autoFocus: true,
              style: entryStyle,
              type: "text",
              placeholder: "Name...",
              value: entry.name,
              onChange: e => handleInputChange(i, "name", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelect__WEBPACK_IMPORTED_MODULE_19__.FormSelect, {
              "aria-label": "data type",
              type: "text",
              value: entry.dataType,
              onChange: e => handleInputChange(i, "dataType", e),
              style: entryStyle,
              rows: 1,
              children: dataType.map(option => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_FormSelect_FormSelectOption__WEBPACK_IMPORTED_MODULE_20__.FormSelectOption, {
                label: option.label,
                value: option.value
              }, option.label))
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 3,
            children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextArea_TextArea__WEBPACK_IMPORTED_MODULE_18__.TextArea, {
              "aria-label": "value",
              style: entryStyle,
              type: "text",
              placeholder: `${lastColumnLabel}...`,
              value: entry.value,
              onChange: e => handleInputChange(i, "value", e)
            })
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Grid__WEBPACK_IMPORTED_MODULE_16__.GridItem, {
            span: 1,
            style: {
              textAlign: "right"
            },
            children: hoveredIndex === i && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
              tabIndex: 9999,
              variant: _patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.ButtonVariant.plain,
              style: {
                paddingLeft: 0
              },
              onClick: () => removeAssignment(i),
              children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_icons_dist_js_icons_times_icon__WEBPACK_IMPORTED_MODULE_21__.TimesIcon, {})
            })
          })]
        })
      }, i)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        style: {
          display: "flex",
          justifyContent: "flex-end",
          marginTop: "16px",
          paddingRight: "8px"
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
          variant: "primary",
          onClick: handleSubmit,
          isDisabled: isReadOnly || inputAssignments.length === 0 && outputAssignments.length === 0,
          children: "Save"
        })
      })]
    }) || (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
      children: [titleComponent, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        className: "kie-bpmn-editor--assignments--empty-state",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_layouts_Bullseye__WEBPACK_IMPORTED_MODULE_22__.Bullseye, {
          children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_23__.EmptyState, {
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Title__WEBPACK_IMPORTED_MODULE_11__.Title, {
              headingLevel: "h4",
              children: isReadOnly ? `No ${entryTitle} assignments` : `No ${entryTitle} assignments yet`
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_EmptyState__WEBPACK_IMPORTED_MODULE_23__.EmptyStateBody, {
              style: {
                padding: "0 25%"
              },
              children: `This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible.`
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Button__WEBPACK_IMPORTED_MODULE_7__.Button, {
              variant: "primary",
              onClick: addAssignment,
              children: `Add ${entryTitle} assignment`
            })]
          })
        })
      })]
    })
  });
}
try {
    // @ts-ignore
    AssignmentsFormSection.displayName = "AssignmentsFormSection";
    // @ts-ignore
    AssignmentsFormSection.__docgenInfo = { "description": "", "displayName": "AssignmentsFormSection", "props": { "sectionLabel": { "defaultValue": null, "description": "", "name": "sectionLabel", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/assignments/AssignmentsFormSection.tsx#AssignmentsFormSection"] = { docgenInfo: AssignmentsFormSection.__docgenInfo, name: "AssignmentsFormSection", path: "src/propertiesPanel/assignments/AssignmentsFormSection.tsx#AssignmentsFormSection" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    BidirectionalAssignmentsFormSection.displayName = "BidirectionalAssignmentsFormSection";
    // @ts-ignore
    BidirectionalAssignmentsFormSection.__docgenInfo = { "description": "", "displayName": "BidirectionalAssignmentsFormSection", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithAssignments" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/assignments/AssignmentsFormSection.tsx#BidirectionalAssignmentsFormSection"] = { docgenInfo: BidirectionalAssignmentsFormSection.__docgenInfo, name: "BidirectionalAssignmentsFormSection", path: "src/propertiesPanel/assignments/AssignmentsFormSection.tsx#BidirectionalAssignmentsFormSection" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    InputOnlyAssociationFormSection.displayName = "InputOnlyAssociationFormSection";
    // @ts-ignore
    InputOnlyAssociationFormSection.__docgenInfo = { "description": "", "displayName": "InputOnlyAssociationFormSection", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithInputAssignments" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/assignments/AssignmentsFormSection.tsx#InputOnlyAssociationFormSection"] = { docgenInfo: InputOnlyAssociationFormSection.__docgenInfo, name: "InputOnlyAssociationFormSection", path: "src/propertiesPanel/assignments/AssignmentsFormSection.tsx#InputOnlyAssociationFormSection" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    OutputOnlyAssociationFormSection.displayName = "OutputOnlyAssociationFormSection";
    // @ts-ignore
    OutputOnlyAssociationFormSection.__docgenInfo = { "description": "", "displayName": "OutputOnlyAssociationFormSection", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithOutputAssignments" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/assignments/AssignmentsFormSection.tsx#OutputOnlyAssociationFormSection"] = { docgenInfo: OutputOnlyAssociationFormSection.__docgenInfo, name: "OutputOnlyAssociationFormSection", path: "src/propertiesPanel/assignments/AssignmentsFormSection.tsx#OutputOnlyAssociationFormSection" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    AssignmentList.displayName = "AssignmentList";
    // @ts-ignore
    AssignmentList.__docgenInfo = { "description": "", "displayName": "AssignmentList", "props": { "section": { "defaultValue": null, "description": "", "name": "section", "required": true, "type": { "name": "enum", "value": [{ "value": "\"input\"" }, { "value": "\"output\"" }] } }, "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithAssignments | (WithInputAssignments & { dataOutputAssociation?: BPMN20__tDataOutputAssociation[] | undefined; }) | (WithOutputAssignments & { ...; })" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/assignments/AssignmentsFormSection.tsx#AssignmentList"] = { docgenInfo: AssignmentList.__docgenInfo, name: "AssignmentList", path: "src/propertiesPanel/assignments/AssignmentsFormSection.tsx#AssignmentList" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,