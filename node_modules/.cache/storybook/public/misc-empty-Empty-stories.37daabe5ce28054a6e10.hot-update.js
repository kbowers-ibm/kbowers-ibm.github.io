"use strict";
self["webpackHotUpdate_kie_tools_bpmn_editor"]("misc-empty-Empty-stories",{

/***/ "./src/propertiesPanel/timerOptions/TimerOptions.tsx":
/*!***********************************************************!*\
  !*** ./src/propertiesPanel/timerOptions/TimerOptions.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TimerOptions: () => (/* binding */ TimerOptions)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "../../node_modules/.pnpm/react@17.0.2/node_modules/react/index.js");
/* harmony import */ var _store_StoreContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../store/StoreContext */ "./src/store/StoreContext.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Form */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Form/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mutations/addOrGetProcessAndDiagramElements */ "./src/mutations/addOrGetProcessAndDiagramElements.ts");
/* harmony import */ var _mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mutations/_elementVisitor */ "./src/mutations/_elementVisitor.ts");
/* harmony import */ var _patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Radio */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Radio/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/TextInput */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/TextInput/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-core/dist/js/components/Select */ "../../node_modules/.pnpm/@patternfly+react-core@4.276.6_react-dom@17.0.2_react@17.0.2__react@17.0.2/node_modules/@patternfly/react-core/dist/js/components/Select/index.js");
/* harmony import */ var _patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @kie-tools/xyflow-react-kie-diagram/dist/uuid/uuid */ "../xyflow-react-kie-diagram/dist/uuid/uuid.js");
/* harmony import */ var _TimerOptions_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TimerOptions.css */ "./src/propertiesPanel/timerOptions/TimerOptions.css");











function TimerOptions(_ref) {
  let {
    element
  } = _ref;
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;
  const isReadOnly = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStore)(s => s.settings.isReadOnly);
  const [selectedOption, setSelectedOption] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(undefined);
  const [isoCronType, setIsoCronType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("ISO");
  const [isDropdownOpen, setIsDropdownOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const handleOptionChange = value => {
    setSelectedOption(value);
    setIsoCronType(undefined);
    bpmnEditorStoreApi.setState(s => {
      const {
        process
      } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
        definitions: s.bpmn.model.definitions
      });
      (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref2 => {
        let {
          element: e
        } = _ref2;
        var _a;
        if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
          let timerEventDefinition = (_a = e.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(event => event.__$$element === "timerEventDefinition");
          if (!timerEventDefinition) {
            timerEventDefinition = {
              "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
              __$$element: "timerEventDefinition"
            };
            e.eventDefinition = e.eventDefinition || [];
            e.eventDefinition.push(timerEventDefinition);
          }
          timerEventDefinition.timeCycle = undefined;
          timerEventDefinition.timeDate = undefined;
          timerEventDefinition.timeDuration = undefined;
        }
      });
    });
  };
  const handleDropdownToggle = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };
  const bpmnEditorStoreApi = (0,_store_StoreContext__WEBPACK_IMPORTED_MODULE_2__.useBpmnEditorStoreApi)();
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Form__WEBPACK_IMPORTED_MODULE_7__.FormGroup, {
    label: "Timer options",
    fieldId: "timer-options",
    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: "radio-group",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8__.Radio, {
        id: "fire-once",
        name: "timer-options",
        label: "Fire once after duration",
        isChecked: selectedOption === "fire-once" || !!((_c = (_b = (_a = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _b === void 0 ? void 0 : _b.timeDuration) === null || _c === void 0 ? void 0 : _c.__$$text),
        onChange: () => handleOptionChange("fire-once"),
        isDisabled: isReadOnly
      }), (selectedOption === "fire-once" || !!((_f = (_e = (_d = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _d === void 0 ? void 0 : _d.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _e === void 0 ? void 0 : _e.timeDuration) === null || _f === void 0 ? void 0 : _f.__$$text)) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__.TextInput, {
        id: "fire-once-input",
        value: (_j = (_h = (_g = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _g === void 0 ? void 0 : _g.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _h === void 0 ? void 0 : _h.timeDuration) === null || _j === void 0 ? void 0 : _j.__$$text,
        onChange: newTimeDuration => bpmnEditorStoreApi.setState(s => {
          const {
            process
          } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
            definitions: s.bpmn.model.definitions
          });
          (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref3 => {
            let {
              element: e
            } = _ref3;
            var _a, _b;
            if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
              let timerEventDefinition = (_a = e.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(event => event.__$$element === "timerEventDefinition");
              timerEventDefinition !== null && timerEventDefinition !== void 0 ? timerEventDefinition : timerEventDefinition = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                __$$element: "timerEventDefinition"
              };
              (_b = timerEventDefinition.timeDuration) !== null && _b !== void 0 ? _b : timerEventDefinition.timeDuration = {
                "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                __$$text: newTimeDuration || ""
              };
              timerEventDefinition.timeDuration.__$$text = newTimeDuration;
            }
          });
        }),
        isDisabled: isReadOnly,
        type: "text",
        placeholder: "Enter duration or expression #{expression}",
        className: "timer-input"
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: "radio-group",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8__.Radio, {
        id: "fire-multiple",
        name: "timer-options",
        label: "Fire multiple times",
        isChecked: selectedOption === "fire-multiple" || !!((_m = (_l = (_k = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _k === void 0 ? void 0 : _k.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _l === void 0 ? void 0 : _l.timeCycle) === null || _m === void 0 ? void 0 : _m.__$$text),
        onChange: () => handleOptionChange("fire-multiple"),
        isDisabled: isReadOnly
      }), (selectedOption === "fire-multiple" || !!((_q = (_p = (_o = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _o === void 0 ? void 0 : _o.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _p === void 0 ? void 0 : _p.timeCycle) === null || _q === void 0 ? void 0 : _q.__$$text)) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        className: "timer-options-multiple",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
          className: "dropdown-group",
          children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10__.Select, {
            id: "iso-cron-select",
            isOpen: isDropdownOpen,
            onToggle: handleDropdownToggle,
            onSelect: (event, selection) => {
              setIsoCronType(selection);
              setIsDropdownOpen(false);
            },
            selections: isoCronType,
            isDisabled: isReadOnly,
            className: "iso-cron-select",
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10__.SelectOption, {
              value: "ISO"
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Select__WEBPACK_IMPORTED_MODULE_10__.SelectOption, {
              value: "Cron"
            })]
          }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__.TextInput, {
            id: "fire-multiple-input",
            value: (_t = (_s = (_r = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _r === void 0 ? void 0 : _r.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _s === void 0 ? void 0 : _s.timeCycle) === null || _t === void 0 ? void 0 : _t.__$$text,
            onChange: newTimeCycle => bpmnEditorStoreApi.setState(s => {
              const {
                process
              } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
                definitions: s.bpmn.model.definitions
              });
              (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref4 => {
                let {
                  element: e
                } = _ref4;
                var _a, _b;
                if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
                  let timerEventDefinition = (_a = e.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(event => event.__$$element === "timerEventDefinition");
                  timerEventDefinition !== null && timerEventDefinition !== void 0 ? timerEventDefinition : timerEventDefinition = {
                    "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                    __$$element: "timerEventDefinition"
                  };
                  (_b = timerEventDefinition.timeCycle) !== null && _b !== void 0 ? _b : timerEventDefinition.timeCycle = {
                    "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                    __$$text: newTimeCycle || ""
                  };
                  timerEventDefinition.timeCycle.__$$text = newTimeCycle;
                }
              });
            }),
            isDisabled: isReadOnly,
            type: "text",
            placeholder: "Enter time cycle or expression #{expression}",
            className: "timer-input"
          })]
        })
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div", {
      className: "radio-group",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_Radio__WEBPACK_IMPORTED_MODULE_8__.Radio, {
        id: "fire-specific-date",
        name: "timer-options",
        label: "Fire at a specific date",
        isChecked: selectedOption === "fire-specific-date" || !!((_w = (_v = (_u = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _u === void 0 ? void 0 : _u.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _v === void 0 ? void 0 : _v.timeDate) === null || _w === void 0 ? void 0 : _w.__$$text),
        onChange: () => handleOptionChange("fire-specific-date"),
        isDisabled: isReadOnly
      }), (selectedOption === "fire-specific-date" || !!((_z = (_y = (_x = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _x === void 0 ? void 0 : _x.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _y === void 0 ? void 0 : _y.timeDate) === null || _z === void 0 ? void 0 : _z.__$$text)) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {
        className: "timer-options-specific-date",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_patternfly_react_core_dist_js_components_TextInput__WEBPACK_IMPORTED_MODULE_9__.TextInput, {
          id: "specific-date-input",
          value: (_2 = (_1 = (_0 = element === null || element === void 0 ? void 0 : element.eventDefinition) === null || _0 === void 0 ? void 0 : _0.find(eventDef => eventDef.__$$element === "timerEventDefinition")) === null || _1 === void 0 ? void 0 : _1.timeDate) === null || _2 === void 0 ? void 0 : _2.__$$text,
          onChange: newTimeDate => bpmnEditorStoreApi.setState(s => {
            const {
              process
            } = (0,_mutations_addOrGetProcessAndDiagramElements__WEBPACK_IMPORTED_MODULE_4__.addOrGetProcessAndDiagramElements)({
              definitions: s.bpmn.model.definitions
            });
            (0,_mutations_elementVisitor__WEBPACK_IMPORTED_MODULE_5__.visitFlowElementsAndArtifacts)(process, _ref5 => {
              let {
                element: e
              } = _ref5;
              var _a, _b;
              if (e["@_id"] === (element === null || element === void 0 ? void 0 : element["@_id"]) && e.__$$element === element.__$$element) {
                let timerEventDefinition = (_a = e.eventDefinition) === null || _a === void 0 ? void 0 : _a.find(event => event.__$$element === "timerEventDefinition");
                timerEventDefinition !== null && timerEventDefinition !== void 0 ? timerEventDefinition : timerEventDefinition = {
                  "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                  __$$element: "timerEventDefinition"
                };
                (_b = timerEventDefinition.timeCycle) !== null && _b !== void 0 ? _b : timerEventDefinition.timeCycle = {
                  "@_id": (0,_kie_tools_xyflow_react_kie_diagram_dist_uuid_uuid__WEBPACK_IMPORTED_MODULE_6__.generateUuid)(),
                  __$$text: newTimeDate || ""
                };
                timerEventDefinition.timeCycle.__$$text = newTimeDate;
              }
            });
          }),
          isDisabled: isReadOnly,
          type: "text",
          placeholder: "Enter date value or expression #{expression}",
          className: "timer-input"
        })
      })]
    })]
  });
}
try {
    // @ts-ignore
    TimerOptions.displayName = "TimerOptions";
    // @ts-ignore
    TimerOptions.__docgenInfo = { "description": "", "displayName": "TimerOptions", "props": { "element": { "defaultValue": null, "description": "", "name": "element", "required": true, "type": { "name": "WithTimer" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/propertiesPanel/timerOptions/TimerOptions.tsx#TimerOptions"] = { docgenInfo: TimerOptions.__docgenInfo, name: "TimerOptions", path: "src/propertiesPanel/timerOptions/TimerOptions.tsx#TimerOptions" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,